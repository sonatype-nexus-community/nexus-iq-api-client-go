/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.196.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiMetricsReportingDTOV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMetricsReportingDTOV2{}

// ApiMetricsReportingDTOV2 struct for ApiMetricsReportingDTOV2
type ApiMetricsReportingDTOV2 struct {
	Aggregations []ApiMetricsReportingAggregationDTOV2 `json:"aggregations,omitempty"`
	ApplicationId *string `json:"applicationId,omitempty"`
	ApplicationName *string `json:"applicationName,omitempty"`
	ApplicationPublicId *string `json:"applicationPublicId,omitempty"`
	OrganizationId *string `json:"organizationId,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
}

// NewApiMetricsReportingDTOV2 instantiates a new ApiMetricsReportingDTOV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMetricsReportingDTOV2() *ApiMetricsReportingDTOV2 {
	this := ApiMetricsReportingDTOV2{}
	return &this
}

// NewApiMetricsReportingDTOV2WithDefaults instantiates a new ApiMetricsReportingDTOV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMetricsReportingDTOV2WithDefaults() *ApiMetricsReportingDTOV2 {
	this := ApiMetricsReportingDTOV2{}
	return &this
}

// GetAggregations returns the Aggregations field value if set, zero value otherwise.
func (o *ApiMetricsReportingDTOV2) GetAggregations() []ApiMetricsReportingAggregationDTOV2 {
	if o == nil || IsNil(o.Aggregations) {
		var ret []ApiMetricsReportingAggregationDTOV2
		return ret
	}
	return o.Aggregations
}

// GetAggregationsOk returns a tuple with the Aggregations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingDTOV2) GetAggregationsOk() ([]ApiMetricsReportingAggregationDTOV2, bool) {
	if o == nil || IsNil(o.Aggregations) {
		return nil, false
	}
	return o.Aggregations, true
}

// HasAggregations returns a boolean if a field has been set.
func (o *ApiMetricsReportingDTOV2) HasAggregations() bool {
	if o != nil && !IsNil(o.Aggregations) {
		return true
	}

	return false
}

// SetAggregations gets a reference to the given []ApiMetricsReportingAggregationDTOV2 and assigns it to the Aggregations field.
func (o *ApiMetricsReportingDTOV2) SetAggregations(v []ApiMetricsReportingAggregationDTOV2) {
	o.Aggregations = v
}

// GetApplicationId returns the ApplicationId field value if set, zero value otherwise.
func (o *ApiMetricsReportingDTOV2) GetApplicationId() string {
	if o == nil || IsNil(o.ApplicationId) {
		var ret string
		return ret
	}
	return *o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingDTOV2) GetApplicationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationId) {
		return nil, false
	}
	return o.ApplicationId, true
}

// HasApplicationId returns a boolean if a field has been set.
func (o *ApiMetricsReportingDTOV2) HasApplicationId() bool {
	if o != nil && !IsNil(o.ApplicationId) {
		return true
	}

	return false
}

// SetApplicationId gets a reference to the given string and assigns it to the ApplicationId field.
func (o *ApiMetricsReportingDTOV2) SetApplicationId(v string) {
	o.ApplicationId = &v
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *ApiMetricsReportingDTOV2) GetApplicationName() string {
	if o == nil || IsNil(o.ApplicationName) {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingDTOV2) GetApplicationNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationName) {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *ApiMetricsReportingDTOV2) HasApplicationName() bool {
	if o != nil && !IsNil(o.ApplicationName) {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *ApiMetricsReportingDTOV2) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetApplicationPublicId returns the ApplicationPublicId field value if set, zero value otherwise.
func (o *ApiMetricsReportingDTOV2) GetApplicationPublicId() string {
	if o == nil || IsNil(o.ApplicationPublicId) {
		var ret string
		return ret
	}
	return *o.ApplicationPublicId
}

// GetApplicationPublicIdOk returns a tuple with the ApplicationPublicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingDTOV2) GetApplicationPublicIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationPublicId) {
		return nil, false
	}
	return o.ApplicationPublicId, true
}

// HasApplicationPublicId returns a boolean if a field has been set.
func (o *ApiMetricsReportingDTOV2) HasApplicationPublicId() bool {
	if o != nil && !IsNil(o.ApplicationPublicId) {
		return true
	}

	return false
}

// SetApplicationPublicId gets a reference to the given string and assigns it to the ApplicationPublicId field.
func (o *ApiMetricsReportingDTOV2) SetApplicationPublicId(v string) {
	o.ApplicationPublicId = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ApiMetricsReportingDTOV2) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingDTOV2) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ApiMetricsReportingDTOV2) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ApiMetricsReportingDTOV2) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *ApiMetricsReportingDTOV2) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingDTOV2) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ApiMetricsReportingDTOV2) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *ApiMetricsReportingDTOV2) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

func (o ApiMetricsReportingDTOV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMetricsReportingDTOV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Aggregations) {
		toSerialize["aggregations"] = o.Aggregations
	}
	if !IsNil(o.ApplicationId) {
		toSerialize["applicationId"] = o.ApplicationId
	}
	if !IsNil(o.ApplicationName) {
		toSerialize["applicationName"] = o.ApplicationName
	}
	if !IsNil(o.ApplicationPublicId) {
		toSerialize["applicationPublicId"] = o.ApplicationPublicId
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	return toSerialize, nil
}

type NullableApiMetricsReportingDTOV2 struct {
	value *ApiMetricsReportingDTOV2
	isSet bool
}

func (v NullableApiMetricsReportingDTOV2) Get() *ApiMetricsReportingDTOV2 {
	return v.value
}

func (v *NullableApiMetricsReportingDTOV2) Set(val *ApiMetricsReportingDTOV2) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMetricsReportingDTOV2) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMetricsReportingDTOV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMetricsReportingDTOV2(val *ApiMetricsReportingDTOV2) *NullableApiMetricsReportingDTOV2 {
	return &NullableApiMetricsReportingDTOV2{value: val, isSet: true}
}

func (v NullableApiMetricsReportingDTOV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMetricsReportingDTOV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


