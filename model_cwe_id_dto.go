/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.192.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the CweIdDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CweIdDTO{}

// CweIdDTO struct for CweIdDTO
type CweIdDTO struct {
	Id *string `json:"id,omitempty"`
	Uri *string `json:"uri,omitempty"`
}

// NewCweIdDTO instantiates a new CweIdDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCweIdDTO() *CweIdDTO {
	this := CweIdDTO{}
	return &this
}

// NewCweIdDTOWithDefaults instantiates a new CweIdDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCweIdDTOWithDefaults() *CweIdDTO {
	this := CweIdDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CweIdDTO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CweIdDTO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CweIdDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CweIdDTO) SetId(v string) {
	o.Id = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *CweIdDTO) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CweIdDTO) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *CweIdDTO) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *CweIdDTO) SetUri(v string) {
	o.Uri = &v
}

func (o CweIdDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CweIdDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	return toSerialize, nil
}

type NullableCweIdDTO struct {
	value *CweIdDTO
	isSet bool
}

func (v NullableCweIdDTO) Get() *CweIdDTO {
	return v.value
}

func (v *NullableCweIdDTO) Set(val *CweIdDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCweIdDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCweIdDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCweIdDTO(val *CweIdDTO) *NullableCweIdDTO {
	return &NullableCweIdDTO{value: val, isSet: true}
}

func (v NullableCweIdDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCweIdDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


