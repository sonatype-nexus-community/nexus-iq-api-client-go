/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.193.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the CpeMatchingConfigurationDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CpeMatchingConfigurationDTO{}

// CpeMatchingConfigurationDTO struct for CpeMatchingConfigurationDTO
type CpeMatchingConfigurationDTO struct {
	AllowOverride *bool `json:"allowOverride,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	EnabledInParent *bool `json:"enabledInParent,omitempty"`
	InheritedFromOrganizationAllowOverride *bool `json:"inheritedFromOrganizationAllowOverride,omitempty"`
	InheritedFromOrganizationName *string `json:"inheritedFromOrganizationName,omitempty"`
}

// NewCpeMatchingConfigurationDTO instantiates a new CpeMatchingConfigurationDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCpeMatchingConfigurationDTO() *CpeMatchingConfigurationDTO {
	this := CpeMatchingConfigurationDTO{}
	return &this
}

// NewCpeMatchingConfigurationDTOWithDefaults instantiates a new CpeMatchingConfigurationDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCpeMatchingConfigurationDTOWithDefaults() *CpeMatchingConfigurationDTO {
	this := CpeMatchingConfigurationDTO{}
	return &this
}

// GetAllowOverride returns the AllowOverride field value if set, zero value otherwise.
func (o *CpeMatchingConfigurationDTO) GetAllowOverride() bool {
	if o == nil || IsNil(o.AllowOverride) {
		var ret bool
		return ret
	}
	return *o.AllowOverride
}

// GetAllowOverrideOk returns a tuple with the AllowOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpeMatchingConfigurationDTO) GetAllowOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowOverride) {
		return nil, false
	}
	return o.AllowOverride, true
}

// HasAllowOverride returns a boolean if a field has been set.
func (o *CpeMatchingConfigurationDTO) HasAllowOverride() bool {
	if o != nil && !IsNil(o.AllowOverride) {
		return true
	}

	return false
}

// SetAllowOverride gets a reference to the given bool and assigns it to the AllowOverride field.
func (o *CpeMatchingConfigurationDTO) SetAllowOverride(v bool) {
	o.AllowOverride = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CpeMatchingConfigurationDTO) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpeMatchingConfigurationDTO) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CpeMatchingConfigurationDTO) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CpeMatchingConfigurationDTO) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetEnabledInParent returns the EnabledInParent field value if set, zero value otherwise.
func (o *CpeMatchingConfigurationDTO) GetEnabledInParent() bool {
	if o == nil || IsNil(o.EnabledInParent) {
		var ret bool
		return ret
	}
	return *o.EnabledInParent
}

// GetEnabledInParentOk returns a tuple with the EnabledInParent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpeMatchingConfigurationDTO) GetEnabledInParentOk() (*bool, bool) {
	if o == nil || IsNil(o.EnabledInParent) {
		return nil, false
	}
	return o.EnabledInParent, true
}

// HasEnabledInParent returns a boolean if a field has been set.
func (o *CpeMatchingConfigurationDTO) HasEnabledInParent() bool {
	if o != nil && !IsNil(o.EnabledInParent) {
		return true
	}

	return false
}

// SetEnabledInParent gets a reference to the given bool and assigns it to the EnabledInParent field.
func (o *CpeMatchingConfigurationDTO) SetEnabledInParent(v bool) {
	o.EnabledInParent = &v
}

// GetInheritedFromOrganizationAllowOverride returns the InheritedFromOrganizationAllowOverride field value if set, zero value otherwise.
func (o *CpeMatchingConfigurationDTO) GetInheritedFromOrganizationAllowOverride() bool {
	if o == nil || IsNil(o.InheritedFromOrganizationAllowOverride) {
		var ret bool
		return ret
	}
	return *o.InheritedFromOrganizationAllowOverride
}

// GetInheritedFromOrganizationAllowOverrideOk returns a tuple with the InheritedFromOrganizationAllowOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpeMatchingConfigurationDTO) GetInheritedFromOrganizationAllowOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.InheritedFromOrganizationAllowOverride) {
		return nil, false
	}
	return o.InheritedFromOrganizationAllowOverride, true
}

// HasInheritedFromOrganizationAllowOverride returns a boolean if a field has been set.
func (o *CpeMatchingConfigurationDTO) HasInheritedFromOrganizationAllowOverride() bool {
	if o != nil && !IsNil(o.InheritedFromOrganizationAllowOverride) {
		return true
	}

	return false
}

// SetInheritedFromOrganizationAllowOverride gets a reference to the given bool and assigns it to the InheritedFromOrganizationAllowOverride field.
func (o *CpeMatchingConfigurationDTO) SetInheritedFromOrganizationAllowOverride(v bool) {
	o.InheritedFromOrganizationAllowOverride = &v
}

// GetInheritedFromOrganizationName returns the InheritedFromOrganizationName field value if set, zero value otherwise.
func (o *CpeMatchingConfigurationDTO) GetInheritedFromOrganizationName() string {
	if o == nil || IsNil(o.InheritedFromOrganizationName) {
		var ret string
		return ret
	}
	return *o.InheritedFromOrganizationName
}

// GetInheritedFromOrganizationNameOk returns a tuple with the InheritedFromOrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpeMatchingConfigurationDTO) GetInheritedFromOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.InheritedFromOrganizationName) {
		return nil, false
	}
	return o.InheritedFromOrganizationName, true
}

// HasInheritedFromOrganizationName returns a boolean if a field has been set.
func (o *CpeMatchingConfigurationDTO) HasInheritedFromOrganizationName() bool {
	if o != nil && !IsNil(o.InheritedFromOrganizationName) {
		return true
	}

	return false
}

// SetInheritedFromOrganizationName gets a reference to the given string and assigns it to the InheritedFromOrganizationName field.
func (o *CpeMatchingConfigurationDTO) SetInheritedFromOrganizationName(v string) {
	o.InheritedFromOrganizationName = &v
}

func (o CpeMatchingConfigurationDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CpeMatchingConfigurationDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowOverride) {
		toSerialize["allowOverride"] = o.AllowOverride
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.EnabledInParent) {
		toSerialize["enabledInParent"] = o.EnabledInParent
	}
	if !IsNil(o.InheritedFromOrganizationAllowOverride) {
		toSerialize["inheritedFromOrganizationAllowOverride"] = o.InheritedFromOrganizationAllowOverride
	}
	if !IsNil(o.InheritedFromOrganizationName) {
		toSerialize["inheritedFromOrganizationName"] = o.InheritedFromOrganizationName
	}
	return toSerialize, nil
}

type NullableCpeMatchingConfigurationDTO struct {
	value *CpeMatchingConfigurationDTO
	isSet bool
}

func (v NullableCpeMatchingConfigurationDTO) Get() *CpeMatchingConfigurationDTO {
	return v.value
}

func (v *NullableCpeMatchingConfigurationDTO) Set(val *CpeMatchingConfigurationDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCpeMatchingConfigurationDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCpeMatchingConfigurationDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCpeMatchingConfigurationDTO(val *CpeMatchingConfigurationDTO) *NullableCpeMatchingConfigurationDTO {
	return &NullableCpeMatchingConfigurationDTO{value: val, isSet: true}
}

func (v NullableCpeMatchingConfigurationDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCpeMatchingConfigurationDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


