/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.182.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiPolicyViolationDTOV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiPolicyViolationDTOV2{}

// ApiPolicyViolationDTOV2 struct for ApiPolicyViolationDTOV2
type ApiPolicyViolationDTOV2 struct {
	ConstraintViolations []ApiConstraintViolationDTO `json:"constraintViolations,omitempty"`
	PolicyId *string `json:"policyId,omitempty"`
	PolicyName *string `json:"policyName,omitempty"`
	PolicyViolationId *string `json:"policyViolationId,omitempty"`
	ThreatLevel *int32 `json:"threatLevel,omitempty"`
}

// NewApiPolicyViolationDTOV2 instantiates a new ApiPolicyViolationDTOV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPolicyViolationDTOV2() *ApiPolicyViolationDTOV2 {
	this := ApiPolicyViolationDTOV2{}
	return &this
}

// NewApiPolicyViolationDTOV2WithDefaults instantiates a new ApiPolicyViolationDTOV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPolicyViolationDTOV2WithDefaults() *ApiPolicyViolationDTOV2 {
	this := ApiPolicyViolationDTOV2{}
	return &this
}

// GetConstraintViolations returns the ConstraintViolations field value if set, zero value otherwise.
func (o *ApiPolicyViolationDTOV2) GetConstraintViolations() []ApiConstraintViolationDTO {
	if o == nil || IsNil(o.ConstraintViolations) {
		var ret []ApiConstraintViolationDTO
		return ret
	}
	return o.ConstraintViolations
}

// GetConstraintViolationsOk returns a tuple with the ConstraintViolations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyViolationDTOV2) GetConstraintViolationsOk() ([]ApiConstraintViolationDTO, bool) {
	if o == nil || IsNil(o.ConstraintViolations) {
		return nil, false
	}
	return o.ConstraintViolations, true
}

// HasConstraintViolations returns a boolean if a field has been set.
func (o *ApiPolicyViolationDTOV2) HasConstraintViolations() bool {
	if o != nil && !IsNil(o.ConstraintViolations) {
		return true
	}

	return false
}

// SetConstraintViolations gets a reference to the given []ApiConstraintViolationDTO and assigns it to the ConstraintViolations field.
func (o *ApiPolicyViolationDTOV2) SetConstraintViolations(v []ApiConstraintViolationDTO) {
	o.ConstraintViolations = v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *ApiPolicyViolationDTOV2) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId) {
		var ret string
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyViolationDTOV2) GetPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ApiPolicyViolationDTOV2) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given string and assigns it to the PolicyId field.
func (o *ApiPolicyViolationDTOV2) SetPolicyId(v string) {
	o.PolicyId = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *ApiPolicyViolationDTOV2) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName) {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyViolationDTOV2) GetPolicyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyName) {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *ApiPolicyViolationDTOV2) HasPolicyName() bool {
	if o != nil && !IsNil(o.PolicyName) {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *ApiPolicyViolationDTOV2) SetPolicyName(v string) {
	o.PolicyName = &v
}

// GetPolicyViolationId returns the PolicyViolationId field value if set, zero value otherwise.
func (o *ApiPolicyViolationDTOV2) GetPolicyViolationId() string {
	if o == nil || IsNil(o.PolicyViolationId) {
		var ret string
		return ret
	}
	return *o.PolicyViolationId
}

// GetPolicyViolationIdOk returns a tuple with the PolicyViolationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyViolationDTOV2) GetPolicyViolationIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyViolationId) {
		return nil, false
	}
	return o.PolicyViolationId, true
}

// HasPolicyViolationId returns a boolean if a field has been set.
func (o *ApiPolicyViolationDTOV2) HasPolicyViolationId() bool {
	if o != nil && !IsNil(o.PolicyViolationId) {
		return true
	}

	return false
}

// SetPolicyViolationId gets a reference to the given string and assigns it to the PolicyViolationId field.
func (o *ApiPolicyViolationDTOV2) SetPolicyViolationId(v string) {
	o.PolicyViolationId = &v
}

// GetThreatLevel returns the ThreatLevel field value if set, zero value otherwise.
func (o *ApiPolicyViolationDTOV2) GetThreatLevel() int32 {
	if o == nil || IsNil(o.ThreatLevel) {
		var ret int32
		return ret
	}
	return *o.ThreatLevel
}

// GetThreatLevelOk returns a tuple with the ThreatLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyViolationDTOV2) GetThreatLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.ThreatLevel) {
		return nil, false
	}
	return o.ThreatLevel, true
}

// HasThreatLevel returns a boolean if a field has been set.
func (o *ApiPolicyViolationDTOV2) HasThreatLevel() bool {
	if o != nil && !IsNil(o.ThreatLevel) {
		return true
	}

	return false
}

// SetThreatLevel gets a reference to the given int32 and assigns it to the ThreatLevel field.
func (o *ApiPolicyViolationDTOV2) SetThreatLevel(v int32) {
	o.ThreatLevel = &v
}

func (o ApiPolicyViolationDTOV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiPolicyViolationDTOV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConstraintViolations) {
		toSerialize["constraintViolations"] = o.ConstraintViolations
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policyId"] = o.PolicyId
	}
	if !IsNil(o.PolicyName) {
		toSerialize["policyName"] = o.PolicyName
	}
	if !IsNil(o.PolicyViolationId) {
		toSerialize["policyViolationId"] = o.PolicyViolationId
	}
	if !IsNil(o.ThreatLevel) {
		toSerialize["threatLevel"] = o.ThreatLevel
	}
	return toSerialize, nil
}

type NullableApiPolicyViolationDTOV2 struct {
	value *ApiPolicyViolationDTOV2
	isSet bool
}

func (v NullableApiPolicyViolationDTOV2) Get() *ApiPolicyViolationDTOV2 {
	return v.value
}

func (v *NullableApiPolicyViolationDTOV2) Set(val *ApiPolicyViolationDTOV2) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPolicyViolationDTOV2) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPolicyViolationDTOV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPolicyViolationDTOV2(val *ApiPolicyViolationDTOV2) *NullableApiPolicyViolationDTOV2 {
	return &NullableApiPolicyViolationDTOV2{value: val, isSet: true}
}

func (v NullableApiPolicyViolationDTOV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPolicyViolationDTOV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


