/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.196.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the CpeMatchingConfigurationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CpeMatchingConfigurationRequest{}

// CpeMatchingConfigurationRequest struct for CpeMatchingConfigurationRequest
type CpeMatchingConfigurationRequest struct {
	AllowOverride *bool `json:"allowOverride,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
}

// NewCpeMatchingConfigurationRequest instantiates a new CpeMatchingConfigurationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCpeMatchingConfigurationRequest() *CpeMatchingConfigurationRequest {
	this := CpeMatchingConfigurationRequest{}
	return &this
}

// NewCpeMatchingConfigurationRequestWithDefaults instantiates a new CpeMatchingConfigurationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCpeMatchingConfigurationRequestWithDefaults() *CpeMatchingConfigurationRequest {
	this := CpeMatchingConfigurationRequest{}
	return &this
}

// GetAllowOverride returns the AllowOverride field value if set, zero value otherwise.
func (o *CpeMatchingConfigurationRequest) GetAllowOverride() bool {
	if o == nil || IsNil(o.AllowOverride) {
		var ret bool
		return ret
	}
	return *o.AllowOverride
}

// GetAllowOverrideOk returns a tuple with the AllowOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpeMatchingConfigurationRequest) GetAllowOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowOverride) {
		return nil, false
	}
	return o.AllowOverride, true
}

// HasAllowOverride returns a boolean if a field has been set.
func (o *CpeMatchingConfigurationRequest) HasAllowOverride() bool {
	if o != nil && !IsNil(o.AllowOverride) {
		return true
	}

	return false
}

// SetAllowOverride gets a reference to the given bool and assigns it to the AllowOverride field.
func (o *CpeMatchingConfigurationRequest) SetAllowOverride(v bool) {
	o.AllowOverride = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CpeMatchingConfigurationRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CpeMatchingConfigurationRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CpeMatchingConfigurationRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CpeMatchingConfigurationRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

func (o CpeMatchingConfigurationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CpeMatchingConfigurationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowOverride) {
		toSerialize["allowOverride"] = o.AllowOverride
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	return toSerialize, nil
}

type NullableCpeMatchingConfigurationRequest struct {
	value *CpeMatchingConfigurationRequest
	isSet bool
}

func (v NullableCpeMatchingConfigurationRequest) Get() *CpeMatchingConfigurationRequest {
	return v.value
}

func (v *NullableCpeMatchingConfigurationRequest) Set(val *CpeMatchingConfigurationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCpeMatchingConfigurationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCpeMatchingConfigurationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCpeMatchingConfigurationRequest(val *CpeMatchingConfigurationRequest) *NullableCpeMatchingConfigurationRequest {
	return &NullableCpeMatchingConfigurationRequest{value: val, isSet: true}
}

func (v NullableCpeMatchingConfigurationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCpeMatchingConfigurationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


