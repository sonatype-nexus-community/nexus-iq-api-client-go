/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.195.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
	"time"
)

// checks if the ApiPolicyWaiverRequestDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiPolicyWaiverRequestDTO{}

// ApiPolicyWaiverRequestDTO struct for ApiPolicyWaiverRequestDTO
type ApiPolicyWaiverRequestDTO struct {
	AssociatedPackageUrl *string `json:"associatedPackageUrl,omitempty"`
	Comment *string `json:"comment,omitempty"`
	ComponentIdentifier *ApiComponentIdentifierDTOV2 `json:"componentIdentifier,omitempty"`
	ComponentName *string `json:"componentName,omitempty"`
	ComponentUpgradeAvailable *bool `json:"componentUpgradeAvailable,omitempty"`
	ConstraintFacts []ConstraintFact `json:"constraintFacts,omitempty"`
	ConstraintFactsJson *string `json:"constraintFactsJson,omitempty"`
	DisplayName *ComponentDisplayName `json:"displayName,omitempty"`
	ExpireWhenRemediationAvailable *bool `json:"expireWhenRemediationAvailable,omitempty"`
	ExpiryTime *time.Time `json:"expiryTime,omitempty"`
	Hash *string `json:"hash,omitempty"`
	IsObsolete *bool `json:"isObsolete,omitempty"`
	MatcherStrategy *string `json:"matcherStrategy,omitempty"`
	NoteToReviewer *string `json:"noteToReviewer,omitempty"`
	PolicyId *string `json:"policyId,omitempty"`
	PolicyName *string `json:"policyName,omitempty"`
	PolicyViolationId *string `json:"policyViolationId,omitempty"`
	PolicyWaiverReasonId *string `json:"policyWaiverReasonId,omitempty"`
	PolicyWaiverRequestId *string `json:"policyWaiverRequestId,omitempty"`
	ReasonText *string `json:"reasonText,omitempty"`
	RejectionReason *string `json:"rejectionReason,omitempty"`
	RequestTime *time.Time `json:"requestTime,omitempty"`
	RequesterId *string `json:"requesterId,omitempty"`
	RequesterName *string `json:"requesterName,omitempty"`
	ReviewerId *string `json:"reviewerId,omitempty"`
	ReviewerName *string `json:"reviewerName,omitempty"`
	ScopeOwnerId *string `json:"scopeOwnerId,omitempty"`
	ScopeOwnerName *string `json:"scopeOwnerName,omitempty"`
	ScopeOwnerType *string `json:"scopeOwnerType,omitempty"`
	Status *string `json:"status,omitempty"`
	ThreatLevel *int32 `json:"threatLevel,omitempty"`
	VulnerabilityId *string `json:"vulnerabilityId,omitempty"`
}

// NewApiPolicyWaiverRequestDTO instantiates a new ApiPolicyWaiverRequestDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPolicyWaiverRequestDTO() *ApiPolicyWaiverRequestDTO {
	this := ApiPolicyWaiverRequestDTO{}
	return &this
}

// NewApiPolicyWaiverRequestDTOWithDefaults instantiates a new ApiPolicyWaiverRequestDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPolicyWaiverRequestDTOWithDefaults() *ApiPolicyWaiverRequestDTO {
	this := ApiPolicyWaiverRequestDTO{}
	return &this
}

// GetAssociatedPackageUrl returns the AssociatedPackageUrl field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetAssociatedPackageUrl() string {
	if o == nil || IsNil(o.AssociatedPackageUrl) {
		var ret string
		return ret
	}
	return *o.AssociatedPackageUrl
}

// GetAssociatedPackageUrlOk returns a tuple with the AssociatedPackageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetAssociatedPackageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AssociatedPackageUrl) {
		return nil, false
	}
	return o.AssociatedPackageUrl, true
}

// HasAssociatedPackageUrl returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasAssociatedPackageUrl() bool {
	if o != nil && !IsNil(o.AssociatedPackageUrl) {
		return true
	}

	return false
}

// SetAssociatedPackageUrl gets a reference to the given string and assigns it to the AssociatedPackageUrl field.
func (o *ApiPolicyWaiverRequestDTO) SetAssociatedPackageUrl(v string) {
	o.AssociatedPackageUrl = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ApiPolicyWaiverRequestDTO) SetComment(v string) {
	o.Comment = &v
}

// GetComponentIdentifier returns the ComponentIdentifier field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetComponentIdentifier() ApiComponentIdentifierDTOV2 {
	if o == nil || IsNil(o.ComponentIdentifier) {
		var ret ApiComponentIdentifierDTOV2
		return ret
	}
	return *o.ComponentIdentifier
}

// GetComponentIdentifierOk returns a tuple with the ComponentIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetComponentIdentifierOk() (*ApiComponentIdentifierDTOV2, bool) {
	if o == nil || IsNil(o.ComponentIdentifier) {
		return nil, false
	}
	return o.ComponentIdentifier, true
}

// HasComponentIdentifier returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasComponentIdentifier() bool {
	if o != nil && !IsNil(o.ComponentIdentifier) {
		return true
	}

	return false
}

// SetComponentIdentifier gets a reference to the given ApiComponentIdentifierDTOV2 and assigns it to the ComponentIdentifier field.
func (o *ApiPolicyWaiverRequestDTO) SetComponentIdentifier(v ApiComponentIdentifierDTOV2) {
	o.ComponentIdentifier = &v
}

// GetComponentName returns the ComponentName field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetComponentName() string {
	if o == nil || IsNil(o.ComponentName) {
		var ret string
		return ret
	}
	return *o.ComponentName
}

// GetComponentNameOk returns a tuple with the ComponentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetComponentNameOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentName) {
		return nil, false
	}
	return o.ComponentName, true
}

// HasComponentName returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasComponentName() bool {
	if o != nil && !IsNil(o.ComponentName) {
		return true
	}

	return false
}

// SetComponentName gets a reference to the given string and assigns it to the ComponentName field.
func (o *ApiPolicyWaiverRequestDTO) SetComponentName(v string) {
	o.ComponentName = &v
}

// GetComponentUpgradeAvailable returns the ComponentUpgradeAvailable field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetComponentUpgradeAvailable() bool {
	if o == nil || IsNil(o.ComponentUpgradeAvailable) {
		var ret bool
		return ret
	}
	return *o.ComponentUpgradeAvailable
}

// GetComponentUpgradeAvailableOk returns a tuple with the ComponentUpgradeAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetComponentUpgradeAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.ComponentUpgradeAvailable) {
		return nil, false
	}
	return o.ComponentUpgradeAvailable, true
}

// HasComponentUpgradeAvailable returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasComponentUpgradeAvailable() bool {
	if o != nil && !IsNil(o.ComponentUpgradeAvailable) {
		return true
	}

	return false
}

// SetComponentUpgradeAvailable gets a reference to the given bool and assigns it to the ComponentUpgradeAvailable field.
func (o *ApiPolicyWaiverRequestDTO) SetComponentUpgradeAvailable(v bool) {
	o.ComponentUpgradeAvailable = &v
}

// GetConstraintFacts returns the ConstraintFacts field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetConstraintFacts() []ConstraintFact {
	if o == nil || IsNil(o.ConstraintFacts) {
		var ret []ConstraintFact
		return ret
	}
	return o.ConstraintFacts
}

// GetConstraintFactsOk returns a tuple with the ConstraintFacts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetConstraintFactsOk() ([]ConstraintFact, bool) {
	if o == nil || IsNil(o.ConstraintFacts) {
		return nil, false
	}
	return o.ConstraintFacts, true
}

// HasConstraintFacts returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasConstraintFacts() bool {
	if o != nil && !IsNil(o.ConstraintFacts) {
		return true
	}

	return false
}

// SetConstraintFacts gets a reference to the given []ConstraintFact and assigns it to the ConstraintFacts field.
func (o *ApiPolicyWaiverRequestDTO) SetConstraintFacts(v []ConstraintFact) {
	o.ConstraintFacts = v
}

// GetConstraintFactsJson returns the ConstraintFactsJson field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetConstraintFactsJson() string {
	if o == nil || IsNil(o.ConstraintFactsJson) {
		var ret string
		return ret
	}
	return *o.ConstraintFactsJson
}

// GetConstraintFactsJsonOk returns a tuple with the ConstraintFactsJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetConstraintFactsJsonOk() (*string, bool) {
	if o == nil || IsNil(o.ConstraintFactsJson) {
		return nil, false
	}
	return o.ConstraintFactsJson, true
}

// HasConstraintFactsJson returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasConstraintFactsJson() bool {
	if o != nil && !IsNil(o.ConstraintFactsJson) {
		return true
	}

	return false
}

// SetConstraintFactsJson gets a reference to the given string and assigns it to the ConstraintFactsJson field.
func (o *ApiPolicyWaiverRequestDTO) SetConstraintFactsJson(v string) {
	o.ConstraintFactsJson = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetDisplayName() ComponentDisplayName {
	if o == nil || IsNil(o.DisplayName) {
		var ret ComponentDisplayName
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetDisplayNameOk() (*ComponentDisplayName, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given ComponentDisplayName and assigns it to the DisplayName field.
func (o *ApiPolicyWaiverRequestDTO) SetDisplayName(v ComponentDisplayName) {
	o.DisplayName = &v
}

// GetExpireWhenRemediationAvailable returns the ExpireWhenRemediationAvailable field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetExpireWhenRemediationAvailable() bool {
	if o == nil || IsNil(o.ExpireWhenRemediationAvailable) {
		var ret bool
		return ret
	}
	return *o.ExpireWhenRemediationAvailable
}

// GetExpireWhenRemediationAvailableOk returns a tuple with the ExpireWhenRemediationAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetExpireWhenRemediationAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.ExpireWhenRemediationAvailable) {
		return nil, false
	}
	return o.ExpireWhenRemediationAvailable, true
}

// HasExpireWhenRemediationAvailable returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasExpireWhenRemediationAvailable() bool {
	if o != nil && !IsNil(o.ExpireWhenRemediationAvailable) {
		return true
	}

	return false
}

// SetExpireWhenRemediationAvailable gets a reference to the given bool and assigns it to the ExpireWhenRemediationAvailable field.
func (o *ApiPolicyWaiverRequestDTO) SetExpireWhenRemediationAvailable(v bool) {
	o.ExpireWhenRemediationAvailable = &v
}

// GetExpiryTime returns the ExpiryTime field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetExpiryTime() time.Time {
	if o == nil || IsNil(o.ExpiryTime) {
		var ret time.Time
		return ret
	}
	return *o.ExpiryTime
}

// GetExpiryTimeOk returns a tuple with the ExpiryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetExpiryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiryTime) {
		return nil, false
	}
	return o.ExpiryTime, true
}

// HasExpiryTime returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasExpiryTime() bool {
	if o != nil && !IsNil(o.ExpiryTime) {
		return true
	}

	return false
}

// SetExpiryTime gets a reference to the given time.Time and assigns it to the ExpiryTime field.
func (o *ApiPolicyWaiverRequestDTO) SetExpiryTime(v time.Time) {
	o.ExpiryTime = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *ApiPolicyWaiverRequestDTO) SetHash(v string) {
	o.Hash = &v
}

// GetIsObsolete returns the IsObsolete field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetIsObsolete() bool {
	if o == nil || IsNil(o.IsObsolete) {
		var ret bool
		return ret
	}
	return *o.IsObsolete
}

// GetIsObsoleteOk returns a tuple with the IsObsolete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetIsObsoleteOk() (*bool, bool) {
	if o == nil || IsNil(o.IsObsolete) {
		return nil, false
	}
	return o.IsObsolete, true
}

// HasIsObsolete returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasIsObsolete() bool {
	if o != nil && !IsNil(o.IsObsolete) {
		return true
	}

	return false
}

// SetIsObsolete gets a reference to the given bool and assigns it to the IsObsolete field.
func (o *ApiPolicyWaiverRequestDTO) SetIsObsolete(v bool) {
	o.IsObsolete = &v
}

// GetMatcherStrategy returns the MatcherStrategy field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetMatcherStrategy() string {
	if o == nil || IsNil(o.MatcherStrategy) {
		var ret string
		return ret
	}
	return *o.MatcherStrategy
}

// GetMatcherStrategyOk returns a tuple with the MatcherStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetMatcherStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.MatcherStrategy) {
		return nil, false
	}
	return o.MatcherStrategy, true
}

// HasMatcherStrategy returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasMatcherStrategy() bool {
	if o != nil && !IsNil(o.MatcherStrategy) {
		return true
	}

	return false
}

// SetMatcherStrategy gets a reference to the given string and assigns it to the MatcherStrategy field.
func (o *ApiPolicyWaiverRequestDTO) SetMatcherStrategy(v string) {
	o.MatcherStrategy = &v
}

// GetNoteToReviewer returns the NoteToReviewer field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetNoteToReviewer() string {
	if o == nil || IsNil(o.NoteToReviewer) {
		var ret string
		return ret
	}
	return *o.NoteToReviewer
}

// GetNoteToReviewerOk returns a tuple with the NoteToReviewer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetNoteToReviewerOk() (*string, bool) {
	if o == nil || IsNil(o.NoteToReviewer) {
		return nil, false
	}
	return o.NoteToReviewer, true
}

// HasNoteToReviewer returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasNoteToReviewer() bool {
	if o != nil && !IsNil(o.NoteToReviewer) {
		return true
	}

	return false
}

// SetNoteToReviewer gets a reference to the given string and assigns it to the NoteToReviewer field.
func (o *ApiPolicyWaiverRequestDTO) SetNoteToReviewer(v string) {
	o.NoteToReviewer = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId) {
		var ret string
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given string and assigns it to the PolicyId field.
func (o *ApiPolicyWaiverRequestDTO) SetPolicyId(v string) {
	o.PolicyId = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName) {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetPolicyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyName) {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasPolicyName() bool {
	if o != nil && !IsNil(o.PolicyName) {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *ApiPolicyWaiverRequestDTO) SetPolicyName(v string) {
	o.PolicyName = &v
}

// GetPolicyViolationId returns the PolicyViolationId field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetPolicyViolationId() string {
	if o == nil || IsNil(o.PolicyViolationId) {
		var ret string
		return ret
	}
	return *o.PolicyViolationId
}

// GetPolicyViolationIdOk returns a tuple with the PolicyViolationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetPolicyViolationIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyViolationId) {
		return nil, false
	}
	return o.PolicyViolationId, true
}

// HasPolicyViolationId returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasPolicyViolationId() bool {
	if o != nil && !IsNil(o.PolicyViolationId) {
		return true
	}

	return false
}

// SetPolicyViolationId gets a reference to the given string and assigns it to the PolicyViolationId field.
func (o *ApiPolicyWaiverRequestDTO) SetPolicyViolationId(v string) {
	o.PolicyViolationId = &v
}

// GetPolicyWaiverReasonId returns the PolicyWaiverReasonId field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetPolicyWaiverReasonId() string {
	if o == nil || IsNil(o.PolicyWaiverReasonId) {
		var ret string
		return ret
	}
	return *o.PolicyWaiverReasonId
}

// GetPolicyWaiverReasonIdOk returns a tuple with the PolicyWaiverReasonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetPolicyWaiverReasonIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyWaiverReasonId) {
		return nil, false
	}
	return o.PolicyWaiverReasonId, true
}

// HasPolicyWaiverReasonId returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasPolicyWaiverReasonId() bool {
	if o != nil && !IsNil(o.PolicyWaiverReasonId) {
		return true
	}

	return false
}

// SetPolicyWaiverReasonId gets a reference to the given string and assigns it to the PolicyWaiverReasonId field.
func (o *ApiPolicyWaiverRequestDTO) SetPolicyWaiverReasonId(v string) {
	o.PolicyWaiverReasonId = &v
}

// GetPolicyWaiverRequestId returns the PolicyWaiverRequestId field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetPolicyWaiverRequestId() string {
	if o == nil || IsNil(o.PolicyWaiverRequestId) {
		var ret string
		return ret
	}
	return *o.PolicyWaiverRequestId
}

// GetPolicyWaiverRequestIdOk returns a tuple with the PolicyWaiverRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetPolicyWaiverRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyWaiverRequestId) {
		return nil, false
	}
	return o.PolicyWaiverRequestId, true
}

// HasPolicyWaiverRequestId returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasPolicyWaiverRequestId() bool {
	if o != nil && !IsNil(o.PolicyWaiverRequestId) {
		return true
	}

	return false
}

// SetPolicyWaiverRequestId gets a reference to the given string and assigns it to the PolicyWaiverRequestId field.
func (o *ApiPolicyWaiverRequestDTO) SetPolicyWaiverRequestId(v string) {
	o.PolicyWaiverRequestId = &v
}

// GetReasonText returns the ReasonText field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetReasonText() string {
	if o == nil || IsNil(o.ReasonText) {
		var ret string
		return ret
	}
	return *o.ReasonText
}

// GetReasonTextOk returns a tuple with the ReasonText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetReasonTextOk() (*string, bool) {
	if o == nil || IsNil(o.ReasonText) {
		return nil, false
	}
	return o.ReasonText, true
}

// HasReasonText returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasReasonText() bool {
	if o != nil && !IsNil(o.ReasonText) {
		return true
	}

	return false
}

// SetReasonText gets a reference to the given string and assigns it to the ReasonText field.
func (o *ApiPolicyWaiverRequestDTO) SetReasonText(v string) {
	o.ReasonText = &v
}

// GetRejectionReason returns the RejectionReason field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetRejectionReason() string {
	if o == nil || IsNil(o.RejectionReason) {
		var ret string
		return ret
	}
	return *o.RejectionReason
}

// GetRejectionReasonOk returns a tuple with the RejectionReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetRejectionReasonOk() (*string, bool) {
	if o == nil || IsNil(o.RejectionReason) {
		return nil, false
	}
	return o.RejectionReason, true
}

// HasRejectionReason returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasRejectionReason() bool {
	if o != nil && !IsNil(o.RejectionReason) {
		return true
	}

	return false
}

// SetRejectionReason gets a reference to the given string and assigns it to the RejectionReason field.
func (o *ApiPolicyWaiverRequestDTO) SetRejectionReason(v string) {
	o.RejectionReason = &v
}

// GetRequestTime returns the RequestTime field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetRequestTime() time.Time {
	if o == nil || IsNil(o.RequestTime) {
		var ret time.Time
		return ret
	}
	return *o.RequestTime
}

// GetRequestTimeOk returns a tuple with the RequestTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetRequestTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RequestTime) {
		return nil, false
	}
	return o.RequestTime, true
}

// HasRequestTime returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasRequestTime() bool {
	if o != nil && !IsNil(o.RequestTime) {
		return true
	}

	return false
}

// SetRequestTime gets a reference to the given time.Time and assigns it to the RequestTime field.
func (o *ApiPolicyWaiverRequestDTO) SetRequestTime(v time.Time) {
	o.RequestTime = &v
}

// GetRequesterId returns the RequesterId field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetRequesterId() string {
	if o == nil || IsNil(o.RequesterId) {
		var ret string
		return ret
	}
	return *o.RequesterId
}

// GetRequesterIdOk returns a tuple with the RequesterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetRequesterIdOk() (*string, bool) {
	if o == nil || IsNil(o.RequesterId) {
		return nil, false
	}
	return o.RequesterId, true
}

// HasRequesterId returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasRequesterId() bool {
	if o != nil && !IsNil(o.RequesterId) {
		return true
	}

	return false
}

// SetRequesterId gets a reference to the given string and assigns it to the RequesterId field.
func (o *ApiPolicyWaiverRequestDTO) SetRequesterId(v string) {
	o.RequesterId = &v
}

// GetRequesterName returns the RequesterName field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetRequesterName() string {
	if o == nil || IsNil(o.RequesterName) {
		var ret string
		return ret
	}
	return *o.RequesterName
}

// GetRequesterNameOk returns a tuple with the RequesterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetRequesterNameOk() (*string, bool) {
	if o == nil || IsNil(o.RequesterName) {
		return nil, false
	}
	return o.RequesterName, true
}

// HasRequesterName returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasRequesterName() bool {
	if o != nil && !IsNil(o.RequesterName) {
		return true
	}

	return false
}

// SetRequesterName gets a reference to the given string and assigns it to the RequesterName field.
func (o *ApiPolicyWaiverRequestDTO) SetRequesterName(v string) {
	o.RequesterName = &v
}

// GetReviewerId returns the ReviewerId field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetReviewerId() string {
	if o == nil || IsNil(o.ReviewerId) {
		var ret string
		return ret
	}
	return *o.ReviewerId
}

// GetReviewerIdOk returns a tuple with the ReviewerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetReviewerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReviewerId) {
		return nil, false
	}
	return o.ReviewerId, true
}

// HasReviewerId returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasReviewerId() bool {
	if o != nil && !IsNil(o.ReviewerId) {
		return true
	}

	return false
}

// SetReviewerId gets a reference to the given string and assigns it to the ReviewerId field.
func (o *ApiPolicyWaiverRequestDTO) SetReviewerId(v string) {
	o.ReviewerId = &v
}

// GetReviewerName returns the ReviewerName field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetReviewerName() string {
	if o == nil || IsNil(o.ReviewerName) {
		var ret string
		return ret
	}
	return *o.ReviewerName
}

// GetReviewerNameOk returns a tuple with the ReviewerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetReviewerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ReviewerName) {
		return nil, false
	}
	return o.ReviewerName, true
}

// HasReviewerName returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasReviewerName() bool {
	if o != nil && !IsNil(o.ReviewerName) {
		return true
	}

	return false
}

// SetReviewerName gets a reference to the given string and assigns it to the ReviewerName field.
func (o *ApiPolicyWaiverRequestDTO) SetReviewerName(v string) {
	o.ReviewerName = &v
}

// GetScopeOwnerId returns the ScopeOwnerId field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetScopeOwnerId() string {
	if o == nil || IsNil(o.ScopeOwnerId) {
		var ret string
		return ret
	}
	return *o.ScopeOwnerId
}

// GetScopeOwnerIdOk returns a tuple with the ScopeOwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetScopeOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScopeOwnerId) {
		return nil, false
	}
	return o.ScopeOwnerId, true
}

// HasScopeOwnerId returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasScopeOwnerId() bool {
	if o != nil && !IsNil(o.ScopeOwnerId) {
		return true
	}

	return false
}

// SetScopeOwnerId gets a reference to the given string and assigns it to the ScopeOwnerId field.
func (o *ApiPolicyWaiverRequestDTO) SetScopeOwnerId(v string) {
	o.ScopeOwnerId = &v
}

// GetScopeOwnerName returns the ScopeOwnerName field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetScopeOwnerName() string {
	if o == nil || IsNil(o.ScopeOwnerName) {
		var ret string
		return ret
	}
	return *o.ScopeOwnerName
}

// GetScopeOwnerNameOk returns a tuple with the ScopeOwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetScopeOwnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ScopeOwnerName) {
		return nil, false
	}
	return o.ScopeOwnerName, true
}

// HasScopeOwnerName returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasScopeOwnerName() bool {
	if o != nil && !IsNil(o.ScopeOwnerName) {
		return true
	}

	return false
}

// SetScopeOwnerName gets a reference to the given string and assigns it to the ScopeOwnerName field.
func (o *ApiPolicyWaiverRequestDTO) SetScopeOwnerName(v string) {
	o.ScopeOwnerName = &v
}

// GetScopeOwnerType returns the ScopeOwnerType field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetScopeOwnerType() string {
	if o == nil || IsNil(o.ScopeOwnerType) {
		var ret string
		return ret
	}
	return *o.ScopeOwnerType
}

// GetScopeOwnerTypeOk returns a tuple with the ScopeOwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetScopeOwnerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ScopeOwnerType) {
		return nil, false
	}
	return o.ScopeOwnerType, true
}

// HasScopeOwnerType returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasScopeOwnerType() bool {
	if o != nil && !IsNil(o.ScopeOwnerType) {
		return true
	}

	return false
}

// SetScopeOwnerType gets a reference to the given string and assigns it to the ScopeOwnerType field.
func (o *ApiPolicyWaiverRequestDTO) SetScopeOwnerType(v string) {
	o.ScopeOwnerType = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiPolicyWaiverRequestDTO) SetStatus(v string) {
	o.Status = &v
}

// GetThreatLevel returns the ThreatLevel field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetThreatLevel() int32 {
	if o == nil || IsNil(o.ThreatLevel) {
		var ret int32
		return ret
	}
	return *o.ThreatLevel
}

// GetThreatLevelOk returns a tuple with the ThreatLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetThreatLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.ThreatLevel) {
		return nil, false
	}
	return o.ThreatLevel, true
}

// HasThreatLevel returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasThreatLevel() bool {
	if o != nil && !IsNil(o.ThreatLevel) {
		return true
	}

	return false
}

// SetThreatLevel gets a reference to the given int32 and assigns it to the ThreatLevel field.
func (o *ApiPolicyWaiverRequestDTO) SetThreatLevel(v int32) {
	o.ThreatLevel = &v
}

// GetVulnerabilityId returns the VulnerabilityId field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestDTO) GetVulnerabilityId() string {
	if o == nil || IsNil(o.VulnerabilityId) {
		var ret string
		return ret
	}
	return *o.VulnerabilityId
}

// GetVulnerabilityIdOk returns a tuple with the VulnerabilityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestDTO) GetVulnerabilityIdOk() (*string, bool) {
	if o == nil || IsNil(o.VulnerabilityId) {
		return nil, false
	}
	return o.VulnerabilityId, true
}

// HasVulnerabilityId returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestDTO) HasVulnerabilityId() bool {
	if o != nil && !IsNil(o.VulnerabilityId) {
		return true
	}

	return false
}

// SetVulnerabilityId gets a reference to the given string and assigns it to the VulnerabilityId field.
func (o *ApiPolicyWaiverRequestDTO) SetVulnerabilityId(v string) {
	o.VulnerabilityId = &v
}

func (o ApiPolicyWaiverRequestDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiPolicyWaiverRequestDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssociatedPackageUrl) {
		toSerialize["associatedPackageUrl"] = o.AssociatedPackageUrl
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.ComponentIdentifier) {
		toSerialize["componentIdentifier"] = o.ComponentIdentifier
	}
	if !IsNil(o.ComponentName) {
		toSerialize["componentName"] = o.ComponentName
	}
	if !IsNil(o.ComponentUpgradeAvailable) {
		toSerialize["componentUpgradeAvailable"] = o.ComponentUpgradeAvailable
	}
	if !IsNil(o.ConstraintFacts) {
		toSerialize["constraintFacts"] = o.ConstraintFacts
	}
	if !IsNil(o.ConstraintFactsJson) {
		toSerialize["constraintFactsJson"] = o.ConstraintFactsJson
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.ExpireWhenRemediationAvailable) {
		toSerialize["expireWhenRemediationAvailable"] = o.ExpireWhenRemediationAvailable
	}
	if !IsNil(o.ExpiryTime) {
		toSerialize["expiryTime"] = o.ExpiryTime
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.IsObsolete) {
		toSerialize["isObsolete"] = o.IsObsolete
	}
	if !IsNil(o.MatcherStrategy) {
		toSerialize["matcherStrategy"] = o.MatcherStrategy
	}
	if !IsNil(o.NoteToReviewer) {
		toSerialize["noteToReviewer"] = o.NoteToReviewer
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policyId"] = o.PolicyId
	}
	if !IsNil(o.PolicyName) {
		toSerialize["policyName"] = o.PolicyName
	}
	if !IsNil(o.PolicyViolationId) {
		toSerialize["policyViolationId"] = o.PolicyViolationId
	}
	if !IsNil(o.PolicyWaiverReasonId) {
		toSerialize["policyWaiverReasonId"] = o.PolicyWaiverReasonId
	}
	if !IsNil(o.PolicyWaiverRequestId) {
		toSerialize["policyWaiverRequestId"] = o.PolicyWaiverRequestId
	}
	if !IsNil(o.ReasonText) {
		toSerialize["reasonText"] = o.ReasonText
	}
	if !IsNil(o.RejectionReason) {
		toSerialize["rejectionReason"] = o.RejectionReason
	}
	if !IsNil(o.RequestTime) {
		toSerialize["requestTime"] = o.RequestTime
	}
	if !IsNil(o.RequesterId) {
		toSerialize["requesterId"] = o.RequesterId
	}
	if !IsNil(o.RequesterName) {
		toSerialize["requesterName"] = o.RequesterName
	}
	if !IsNil(o.ReviewerId) {
		toSerialize["reviewerId"] = o.ReviewerId
	}
	if !IsNil(o.ReviewerName) {
		toSerialize["reviewerName"] = o.ReviewerName
	}
	if !IsNil(o.ScopeOwnerId) {
		toSerialize["scopeOwnerId"] = o.ScopeOwnerId
	}
	if !IsNil(o.ScopeOwnerName) {
		toSerialize["scopeOwnerName"] = o.ScopeOwnerName
	}
	if !IsNil(o.ScopeOwnerType) {
		toSerialize["scopeOwnerType"] = o.ScopeOwnerType
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ThreatLevel) {
		toSerialize["threatLevel"] = o.ThreatLevel
	}
	if !IsNil(o.VulnerabilityId) {
		toSerialize["vulnerabilityId"] = o.VulnerabilityId
	}
	return toSerialize, nil
}

type NullableApiPolicyWaiverRequestDTO struct {
	value *ApiPolicyWaiverRequestDTO
	isSet bool
}

func (v NullableApiPolicyWaiverRequestDTO) Get() *ApiPolicyWaiverRequestDTO {
	return v.value
}

func (v *NullableApiPolicyWaiverRequestDTO) Set(val *ApiPolicyWaiverRequestDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPolicyWaiverRequestDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPolicyWaiverRequestDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPolicyWaiverRequestDTO(val *ApiPolicyWaiverRequestDTO) *NullableApiPolicyWaiverRequestDTO {
	return &NullableApiPolicyWaiverRequestDTO{value: val, isSet: true}
}

func (v NullableApiPolicyWaiverRequestDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPolicyWaiverRequestDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


