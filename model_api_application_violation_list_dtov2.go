/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.195.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiApplicationViolationListDTOV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiApplicationViolationListDTOV2{}

// ApiApplicationViolationListDTOV2 struct for ApiApplicationViolationListDTOV2
type ApiApplicationViolationListDTOV2 struct {
	ApplicationViolations []ApiApplicationViolationDTOV2 `json:"applicationViolations,omitempty"`
}

// NewApiApplicationViolationListDTOV2 instantiates a new ApiApplicationViolationListDTOV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiApplicationViolationListDTOV2() *ApiApplicationViolationListDTOV2 {
	this := ApiApplicationViolationListDTOV2{}
	return &this
}

// NewApiApplicationViolationListDTOV2WithDefaults instantiates a new ApiApplicationViolationListDTOV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiApplicationViolationListDTOV2WithDefaults() *ApiApplicationViolationListDTOV2 {
	this := ApiApplicationViolationListDTOV2{}
	return &this
}

// GetApplicationViolations returns the ApplicationViolations field value if set, zero value otherwise.
func (o *ApiApplicationViolationListDTOV2) GetApplicationViolations() []ApiApplicationViolationDTOV2 {
	if o == nil || IsNil(o.ApplicationViolations) {
		var ret []ApiApplicationViolationDTOV2
		return ret
	}
	return o.ApplicationViolations
}

// GetApplicationViolationsOk returns a tuple with the ApplicationViolations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiApplicationViolationListDTOV2) GetApplicationViolationsOk() ([]ApiApplicationViolationDTOV2, bool) {
	if o == nil || IsNil(o.ApplicationViolations) {
		return nil, false
	}
	return o.ApplicationViolations, true
}

// HasApplicationViolations returns a boolean if a field has been set.
func (o *ApiApplicationViolationListDTOV2) HasApplicationViolations() bool {
	if o != nil && !IsNil(o.ApplicationViolations) {
		return true
	}

	return false
}

// SetApplicationViolations gets a reference to the given []ApiApplicationViolationDTOV2 and assigns it to the ApplicationViolations field.
func (o *ApiApplicationViolationListDTOV2) SetApplicationViolations(v []ApiApplicationViolationDTOV2) {
	o.ApplicationViolations = v
}

func (o ApiApplicationViolationListDTOV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiApplicationViolationListDTOV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationViolations) {
		toSerialize["applicationViolations"] = o.ApplicationViolations
	}
	return toSerialize, nil
}

type NullableApiApplicationViolationListDTOV2 struct {
	value *ApiApplicationViolationListDTOV2
	isSet bool
}

func (v NullableApiApplicationViolationListDTOV2) Get() *ApiApplicationViolationListDTOV2 {
	return v.value
}

func (v *NullableApiApplicationViolationListDTOV2) Set(val *ApiApplicationViolationListDTOV2) {
	v.value = val
	v.isSet = true
}

func (v NullableApiApplicationViolationListDTOV2) IsSet() bool {
	return v.isSet
}

func (v *NullableApiApplicationViolationListDTOV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiApplicationViolationListDTOV2(val *ApiApplicationViolationListDTOV2) *NullableApiApplicationViolationListDTOV2 {
	return &NullableApiApplicationViolationListDTOV2{value: val, isSet: true}
}

func (v NullableApiApplicationViolationListDTOV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiApplicationViolationListDTOV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


