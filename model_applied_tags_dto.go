/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.196.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the AppliedTagsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppliedTagsDTO{}

// AppliedTagsDTO struct for AppliedTagsDTO
type AppliedTagsDTO struct {
	ApplicationTagsByOwner []ApplicationTagsByOwnerDTO `json:"applicationTagsByOwner,omitempty"`
}

// NewAppliedTagsDTO instantiates a new AppliedTagsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppliedTagsDTO() *AppliedTagsDTO {
	this := AppliedTagsDTO{}
	return &this
}

// NewAppliedTagsDTOWithDefaults instantiates a new AppliedTagsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppliedTagsDTOWithDefaults() *AppliedTagsDTO {
	this := AppliedTagsDTO{}
	return &this
}

// GetApplicationTagsByOwner returns the ApplicationTagsByOwner field value if set, zero value otherwise.
func (o *AppliedTagsDTO) GetApplicationTagsByOwner() []ApplicationTagsByOwnerDTO {
	if o == nil || IsNil(o.ApplicationTagsByOwner) {
		var ret []ApplicationTagsByOwnerDTO
		return ret
	}
	return o.ApplicationTagsByOwner
}

// GetApplicationTagsByOwnerOk returns a tuple with the ApplicationTagsByOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppliedTagsDTO) GetApplicationTagsByOwnerOk() ([]ApplicationTagsByOwnerDTO, bool) {
	if o == nil || IsNil(o.ApplicationTagsByOwner) {
		return nil, false
	}
	return o.ApplicationTagsByOwner, true
}

// HasApplicationTagsByOwner returns a boolean if a field has been set.
func (o *AppliedTagsDTO) HasApplicationTagsByOwner() bool {
	if o != nil && !IsNil(o.ApplicationTagsByOwner) {
		return true
	}

	return false
}

// SetApplicationTagsByOwner gets a reference to the given []ApplicationTagsByOwnerDTO and assigns it to the ApplicationTagsByOwner field.
func (o *AppliedTagsDTO) SetApplicationTagsByOwner(v []ApplicationTagsByOwnerDTO) {
	o.ApplicationTagsByOwner = v
}

func (o AppliedTagsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppliedTagsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationTagsByOwner) {
		toSerialize["applicationTagsByOwner"] = o.ApplicationTagsByOwner
	}
	return toSerialize, nil
}

type NullableAppliedTagsDTO struct {
	value *AppliedTagsDTO
	isSet bool
}

func (v NullableAppliedTagsDTO) Get() *AppliedTagsDTO {
	return v.value
}

func (v *NullableAppliedTagsDTO) Set(val *AppliedTagsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableAppliedTagsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableAppliedTagsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppliedTagsDTO(val *AppliedTagsDTO) *NullableAppliedTagsDTO {
	return &NullableAppliedTagsDTO{value: val, isSet: true}
}

func (v NullableAppliedTagsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppliedTagsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


