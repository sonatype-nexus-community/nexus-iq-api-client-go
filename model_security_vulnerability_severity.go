/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.184.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the SecurityVulnerabilitySeverity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityVulnerabilitySeverity{}

// SecurityVulnerabilitySeverity struct for SecurityVulnerabilitySeverity
type SecurityVulnerabilitySeverity struct {
	Score *float32 `json:"score,omitempty"`
	Source *string `json:"source,omitempty"`
	SourceLabel *string `json:"sourceLabel,omitempty"`
	Vector *string `json:"vector,omitempty"`
}

// NewSecurityVulnerabilitySeverity instantiates a new SecurityVulnerabilitySeverity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityVulnerabilitySeverity() *SecurityVulnerabilitySeverity {
	this := SecurityVulnerabilitySeverity{}
	return &this
}

// NewSecurityVulnerabilitySeverityWithDefaults instantiates a new SecurityVulnerabilitySeverity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityVulnerabilitySeverityWithDefaults() *SecurityVulnerabilitySeverity {
	this := SecurityVulnerabilitySeverity{}
	return &this
}

// GetScore returns the Score field value if set, zero value otherwise.
func (o *SecurityVulnerabilitySeverity) GetScore() float32 {
	if o == nil || IsNil(o.Score) {
		var ret float32
		return ret
	}
	return *o.Score
}

// GetScoreOk returns a tuple with the Score field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilitySeverity) GetScoreOk() (*float32, bool) {
	if o == nil || IsNil(o.Score) {
		return nil, false
	}
	return o.Score, true
}

// HasScore returns a boolean if a field has been set.
func (o *SecurityVulnerabilitySeverity) HasScore() bool {
	if o != nil && !IsNil(o.Score) {
		return true
	}

	return false
}

// SetScore gets a reference to the given float32 and assigns it to the Score field.
func (o *SecurityVulnerabilitySeverity) SetScore(v float32) {
	o.Score = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *SecurityVulnerabilitySeverity) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilitySeverity) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *SecurityVulnerabilitySeverity) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *SecurityVulnerabilitySeverity) SetSource(v string) {
	o.Source = &v
}

// GetSourceLabel returns the SourceLabel field value if set, zero value otherwise.
func (o *SecurityVulnerabilitySeverity) GetSourceLabel() string {
	if o == nil || IsNil(o.SourceLabel) {
		var ret string
		return ret
	}
	return *o.SourceLabel
}

// GetSourceLabelOk returns a tuple with the SourceLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilitySeverity) GetSourceLabelOk() (*string, bool) {
	if o == nil || IsNil(o.SourceLabel) {
		return nil, false
	}
	return o.SourceLabel, true
}

// HasSourceLabel returns a boolean if a field has been set.
func (o *SecurityVulnerabilitySeverity) HasSourceLabel() bool {
	if o != nil && !IsNil(o.SourceLabel) {
		return true
	}

	return false
}

// SetSourceLabel gets a reference to the given string and assigns it to the SourceLabel field.
func (o *SecurityVulnerabilitySeverity) SetSourceLabel(v string) {
	o.SourceLabel = &v
}

// GetVector returns the Vector field value if set, zero value otherwise.
func (o *SecurityVulnerabilitySeverity) GetVector() string {
	if o == nil || IsNil(o.Vector) {
		var ret string
		return ret
	}
	return *o.Vector
}

// GetVectorOk returns a tuple with the Vector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilitySeverity) GetVectorOk() (*string, bool) {
	if o == nil || IsNil(o.Vector) {
		return nil, false
	}
	return o.Vector, true
}

// HasVector returns a boolean if a field has been set.
func (o *SecurityVulnerabilitySeverity) HasVector() bool {
	if o != nil && !IsNil(o.Vector) {
		return true
	}

	return false
}

// SetVector gets a reference to the given string and assigns it to the Vector field.
func (o *SecurityVulnerabilitySeverity) SetVector(v string) {
	o.Vector = &v
}

func (o SecurityVulnerabilitySeverity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityVulnerabilitySeverity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Score) {
		toSerialize["score"] = o.Score
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.SourceLabel) {
		toSerialize["sourceLabel"] = o.SourceLabel
	}
	if !IsNil(o.Vector) {
		toSerialize["vector"] = o.Vector
	}
	return toSerialize, nil
}

type NullableSecurityVulnerabilitySeverity struct {
	value *SecurityVulnerabilitySeverity
	isSet bool
}

func (v NullableSecurityVulnerabilitySeverity) Get() *SecurityVulnerabilitySeverity {
	return v.value
}

func (v *NullableSecurityVulnerabilitySeverity) Set(val *SecurityVulnerabilitySeverity) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityVulnerabilitySeverity) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityVulnerabilitySeverity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityVulnerabilitySeverity(val *SecurityVulnerabilitySeverity) *NullableSecurityVulnerabilitySeverity {
	return &NullableSecurityVulnerabilitySeverity{value: val, isSet: true}
}

func (v NullableSecurityVulnerabilitySeverity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityVulnerabilitySeverity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


