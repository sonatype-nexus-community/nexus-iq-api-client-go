/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.195.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiOwnerDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiOwnerDTO{}

// ApiOwnerDTO struct for ApiOwnerDTO
type ApiOwnerDTO struct {
	OwnerId *string `json:"ownerId,omitempty"`
	OwnerName *string `json:"ownerName,omitempty"`
	OwnerPublicId *string `json:"ownerPublicId,omitempty"`
	OwnerType *string `json:"ownerType,omitempty"`
}

// NewApiOwnerDTO instantiates a new ApiOwnerDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOwnerDTO() *ApiOwnerDTO {
	this := ApiOwnerDTO{}
	return &this
}

// NewApiOwnerDTOWithDefaults instantiates a new ApiOwnerDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOwnerDTOWithDefaults() *ApiOwnerDTO {
	this := ApiOwnerDTO{}
	return &this
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *ApiOwnerDTO) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOwnerDTO) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ApiOwnerDTO) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *ApiOwnerDTO) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetOwnerName returns the OwnerName field value if set, zero value otherwise.
func (o *ApiOwnerDTO) GetOwnerName() string {
	if o == nil || IsNil(o.OwnerName) {
		var ret string
		return ret
	}
	return *o.OwnerName
}

// GetOwnerNameOk returns a tuple with the OwnerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOwnerDTO) GetOwnerNameOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerName) {
		return nil, false
	}
	return o.OwnerName, true
}

// HasOwnerName returns a boolean if a field has been set.
func (o *ApiOwnerDTO) HasOwnerName() bool {
	if o != nil && !IsNil(o.OwnerName) {
		return true
	}

	return false
}

// SetOwnerName gets a reference to the given string and assigns it to the OwnerName field.
func (o *ApiOwnerDTO) SetOwnerName(v string) {
	o.OwnerName = &v
}

// GetOwnerPublicId returns the OwnerPublicId field value if set, zero value otherwise.
func (o *ApiOwnerDTO) GetOwnerPublicId() string {
	if o == nil || IsNil(o.OwnerPublicId) {
		var ret string
		return ret
	}
	return *o.OwnerPublicId
}

// GetOwnerPublicIdOk returns a tuple with the OwnerPublicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOwnerDTO) GetOwnerPublicIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerPublicId) {
		return nil, false
	}
	return o.OwnerPublicId, true
}

// HasOwnerPublicId returns a boolean if a field has been set.
func (o *ApiOwnerDTO) HasOwnerPublicId() bool {
	if o != nil && !IsNil(o.OwnerPublicId) {
		return true
	}

	return false
}

// SetOwnerPublicId gets a reference to the given string and assigns it to the OwnerPublicId field.
func (o *ApiOwnerDTO) SetOwnerPublicId(v string) {
	o.OwnerPublicId = &v
}

// GetOwnerType returns the OwnerType field value if set, zero value otherwise.
func (o *ApiOwnerDTO) GetOwnerType() string {
	if o == nil || IsNil(o.OwnerType) {
		var ret string
		return ret
	}
	return *o.OwnerType
}

// GetOwnerTypeOk returns a tuple with the OwnerType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOwnerDTO) GetOwnerTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerType) {
		return nil, false
	}
	return o.OwnerType, true
}

// HasOwnerType returns a boolean if a field has been set.
func (o *ApiOwnerDTO) HasOwnerType() bool {
	if o != nil && !IsNil(o.OwnerType) {
		return true
	}

	return false
}

// SetOwnerType gets a reference to the given string and assigns it to the OwnerType field.
func (o *ApiOwnerDTO) SetOwnerType(v string) {
	o.OwnerType = &v
}

func (o ApiOwnerDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiOwnerDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OwnerId) {
		toSerialize["ownerId"] = o.OwnerId
	}
	if !IsNil(o.OwnerName) {
		toSerialize["ownerName"] = o.OwnerName
	}
	if !IsNil(o.OwnerPublicId) {
		toSerialize["ownerPublicId"] = o.OwnerPublicId
	}
	if !IsNil(o.OwnerType) {
		toSerialize["ownerType"] = o.OwnerType
	}
	return toSerialize, nil
}

type NullableApiOwnerDTO struct {
	value *ApiOwnerDTO
	isSet bool
}

func (v NullableApiOwnerDTO) Get() *ApiOwnerDTO {
	return v.value
}

func (v *NullableApiOwnerDTO) Set(val *ApiOwnerDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOwnerDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOwnerDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOwnerDTO(val *ApiOwnerDTO) *NullableApiOwnerDTO {
	return &NullableApiOwnerDTO{value: val, isSet: true}
}

func (v NullableApiOwnerDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOwnerDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


