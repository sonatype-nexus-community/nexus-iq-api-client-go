/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.193.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the SCMUserMatchingResultDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SCMUserMatchingResultDTO{}

// SCMUserMatchingResultDTO struct for SCMUserMatchingResultDTO
type SCMUserMatchingResultDTO struct {
	MatchedUsers []string `json:"matchedUsers,omitempty"`
	SuccessfulMapping *UserMapping `json:"successfulMapping,omitempty"`
}

// NewSCMUserMatchingResultDTO instantiates a new SCMUserMatchingResultDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSCMUserMatchingResultDTO() *SCMUserMatchingResultDTO {
	this := SCMUserMatchingResultDTO{}
	return &this
}

// NewSCMUserMatchingResultDTOWithDefaults instantiates a new SCMUserMatchingResultDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSCMUserMatchingResultDTOWithDefaults() *SCMUserMatchingResultDTO {
	this := SCMUserMatchingResultDTO{}
	return &this
}

// GetMatchedUsers returns the MatchedUsers field value if set, zero value otherwise.
func (o *SCMUserMatchingResultDTO) GetMatchedUsers() []string {
	if o == nil || IsNil(o.MatchedUsers) {
		var ret []string
		return ret
	}
	return o.MatchedUsers
}

// GetMatchedUsersOk returns a tuple with the MatchedUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SCMUserMatchingResultDTO) GetMatchedUsersOk() ([]string, bool) {
	if o == nil || IsNil(o.MatchedUsers) {
		return nil, false
	}
	return o.MatchedUsers, true
}

// HasMatchedUsers returns a boolean if a field has been set.
func (o *SCMUserMatchingResultDTO) HasMatchedUsers() bool {
	if o != nil && !IsNil(o.MatchedUsers) {
		return true
	}

	return false
}

// SetMatchedUsers gets a reference to the given []string and assigns it to the MatchedUsers field.
func (o *SCMUserMatchingResultDTO) SetMatchedUsers(v []string) {
	o.MatchedUsers = v
}

// GetSuccessfulMapping returns the SuccessfulMapping field value if set, zero value otherwise.
func (o *SCMUserMatchingResultDTO) GetSuccessfulMapping() UserMapping {
	if o == nil || IsNil(o.SuccessfulMapping) {
		var ret UserMapping
		return ret
	}
	return *o.SuccessfulMapping
}

// GetSuccessfulMappingOk returns a tuple with the SuccessfulMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SCMUserMatchingResultDTO) GetSuccessfulMappingOk() (*UserMapping, bool) {
	if o == nil || IsNil(o.SuccessfulMapping) {
		return nil, false
	}
	return o.SuccessfulMapping, true
}

// HasSuccessfulMapping returns a boolean if a field has been set.
func (o *SCMUserMatchingResultDTO) HasSuccessfulMapping() bool {
	if o != nil && !IsNil(o.SuccessfulMapping) {
		return true
	}

	return false
}

// SetSuccessfulMapping gets a reference to the given UserMapping and assigns it to the SuccessfulMapping field.
func (o *SCMUserMatchingResultDTO) SetSuccessfulMapping(v UserMapping) {
	o.SuccessfulMapping = &v
}

func (o SCMUserMatchingResultDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SCMUserMatchingResultDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MatchedUsers) {
		toSerialize["matchedUsers"] = o.MatchedUsers
	}
	if !IsNil(o.SuccessfulMapping) {
		toSerialize["successfulMapping"] = o.SuccessfulMapping
	}
	return toSerialize, nil
}

type NullableSCMUserMatchingResultDTO struct {
	value *SCMUserMatchingResultDTO
	isSet bool
}

func (v NullableSCMUserMatchingResultDTO) Get() *SCMUserMatchingResultDTO {
	return v.value
}

func (v *NullableSCMUserMatchingResultDTO) Set(val *SCMUserMatchingResultDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSCMUserMatchingResultDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSCMUserMatchingResultDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSCMUserMatchingResultDTO(val *SCMUserMatchingResultDTO) *NullableSCMUserMatchingResultDTO {
	return &NullableSCMUserMatchingResultDTO{value: val, isSet: true}
}

func (v NullableSCMUserMatchingResultDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSCMUserMatchingResultDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


