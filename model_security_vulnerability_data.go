/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.196.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the SecurityVulnerabilityData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityVulnerabilityData{}

// SecurityVulnerabilityData struct for SecurityVulnerabilityData
type SecurityVulnerabilityData struct {
	Advisories []ReferenceLink `json:"advisories,omitempty"`
	Categories []string `json:"categories,omitempty"`
	ComponentDetectionMarkdown *string `json:"componentDetectionMarkdown,omitempty"`
	ComponentExplanationMarkdown *string `json:"componentExplanationMarkdown,omitempty"`
	ComponentRecommendationMarkdown *string `json:"componentRecommendationMarkdown,omitempty"`
	CustomData *SecurityVulnerabilityCustomData `json:"customData,omitempty"`
	Description *string `json:"description,omitempty"`
	DetectionMarkdown *string `json:"detectionMarkdown,omitempty"`
	DetectionType *string `json:"detectionType,omitempty"`
	EpssData *EpssData `json:"epssData,omitempty"`
	ExplanationMarkdown *string `json:"explanationMarkdown,omitempty"`
	IdentificationSource *string `json:"identificationSource,omitempty"`
	Identifier *string `json:"identifier,omitempty"`
	IsAdvancedVulnerabilityDetection *bool `json:"isAdvancedVulnerabilityDetection,omitempty"`
	KevData *KevData `json:"kevData,omitempty"`
	MainSeverity *SecurityVulnerabilitySeverity `json:"mainSeverity,omitempty"`
	RecommendationMarkdown *string `json:"recommendationMarkdown,omitempty"`
	ResearchType *string `json:"researchType,omitempty"`
	RootCauses []RootCause `json:"rootCauses,omitempty"`
	SeverityScores []SecurityVulnerabilitySeverity `json:"severityScores,omitempty"`
	Source *VulnerabilitySource `json:"source,omitempty"`
	VulnIds []string `json:"vulnIds,omitempty"`
	VulnerabilityLink *string `json:"vulnerabilityLink,omitempty"`
	VulnerableVersionRanges []string `json:"vulnerableVersionRanges,omitempty"`
	Weakness *SecurityVulnerabilityWeakness `json:"weakness,omitempty"`
}

// NewSecurityVulnerabilityData instantiates a new SecurityVulnerabilityData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityVulnerabilityData() *SecurityVulnerabilityData {
	this := SecurityVulnerabilityData{}
	return &this
}

// NewSecurityVulnerabilityDataWithDefaults instantiates a new SecurityVulnerabilityData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityVulnerabilityDataWithDefaults() *SecurityVulnerabilityData {
	this := SecurityVulnerabilityData{}
	return &this
}

// GetAdvisories returns the Advisories field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetAdvisories() []ReferenceLink {
	if o == nil || IsNil(o.Advisories) {
		var ret []ReferenceLink
		return ret
	}
	return o.Advisories
}

// GetAdvisoriesOk returns a tuple with the Advisories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetAdvisoriesOk() ([]ReferenceLink, bool) {
	if o == nil || IsNil(o.Advisories) {
		return nil, false
	}
	return o.Advisories, true
}

// HasAdvisories returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasAdvisories() bool {
	if o != nil && !IsNil(o.Advisories) {
		return true
	}

	return false
}

// SetAdvisories gets a reference to the given []ReferenceLink and assigns it to the Advisories field.
func (o *SecurityVulnerabilityData) SetAdvisories(v []ReferenceLink) {
	o.Advisories = v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetCategories() []string {
	if o == nil || IsNil(o.Categories) {
		var ret []string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *SecurityVulnerabilityData) SetCategories(v []string) {
	o.Categories = v
}

// GetComponentDetectionMarkdown returns the ComponentDetectionMarkdown field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetComponentDetectionMarkdown() string {
	if o == nil || IsNil(o.ComponentDetectionMarkdown) {
		var ret string
		return ret
	}
	return *o.ComponentDetectionMarkdown
}

// GetComponentDetectionMarkdownOk returns a tuple with the ComponentDetectionMarkdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetComponentDetectionMarkdownOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentDetectionMarkdown) {
		return nil, false
	}
	return o.ComponentDetectionMarkdown, true
}

// HasComponentDetectionMarkdown returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasComponentDetectionMarkdown() bool {
	if o != nil && !IsNil(o.ComponentDetectionMarkdown) {
		return true
	}

	return false
}

// SetComponentDetectionMarkdown gets a reference to the given string and assigns it to the ComponentDetectionMarkdown field.
func (o *SecurityVulnerabilityData) SetComponentDetectionMarkdown(v string) {
	o.ComponentDetectionMarkdown = &v
}

// GetComponentExplanationMarkdown returns the ComponentExplanationMarkdown field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetComponentExplanationMarkdown() string {
	if o == nil || IsNil(o.ComponentExplanationMarkdown) {
		var ret string
		return ret
	}
	return *o.ComponentExplanationMarkdown
}

// GetComponentExplanationMarkdownOk returns a tuple with the ComponentExplanationMarkdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetComponentExplanationMarkdownOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentExplanationMarkdown) {
		return nil, false
	}
	return o.ComponentExplanationMarkdown, true
}

// HasComponentExplanationMarkdown returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasComponentExplanationMarkdown() bool {
	if o != nil && !IsNil(o.ComponentExplanationMarkdown) {
		return true
	}

	return false
}

// SetComponentExplanationMarkdown gets a reference to the given string and assigns it to the ComponentExplanationMarkdown field.
func (o *SecurityVulnerabilityData) SetComponentExplanationMarkdown(v string) {
	o.ComponentExplanationMarkdown = &v
}

// GetComponentRecommendationMarkdown returns the ComponentRecommendationMarkdown field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetComponentRecommendationMarkdown() string {
	if o == nil || IsNil(o.ComponentRecommendationMarkdown) {
		var ret string
		return ret
	}
	return *o.ComponentRecommendationMarkdown
}

// GetComponentRecommendationMarkdownOk returns a tuple with the ComponentRecommendationMarkdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetComponentRecommendationMarkdownOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentRecommendationMarkdown) {
		return nil, false
	}
	return o.ComponentRecommendationMarkdown, true
}

// HasComponentRecommendationMarkdown returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasComponentRecommendationMarkdown() bool {
	if o != nil && !IsNil(o.ComponentRecommendationMarkdown) {
		return true
	}

	return false
}

// SetComponentRecommendationMarkdown gets a reference to the given string and assigns it to the ComponentRecommendationMarkdown field.
func (o *SecurityVulnerabilityData) SetComponentRecommendationMarkdown(v string) {
	o.ComponentRecommendationMarkdown = &v
}

// GetCustomData returns the CustomData field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetCustomData() SecurityVulnerabilityCustomData {
	if o == nil || IsNil(o.CustomData) {
		var ret SecurityVulnerabilityCustomData
		return ret
	}
	return *o.CustomData
}

// GetCustomDataOk returns a tuple with the CustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetCustomDataOk() (*SecurityVulnerabilityCustomData, bool) {
	if o == nil || IsNil(o.CustomData) {
		return nil, false
	}
	return o.CustomData, true
}

// HasCustomData returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasCustomData() bool {
	if o != nil && !IsNil(o.CustomData) {
		return true
	}

	return false
}

// SetCustomData gets a reference to the given SecurityVulnerabilityCustomData and assigns it to the CustomData field.
func (o *SecurityVulnerabilityData) SetCustomData(v SecurityVulnerabilityCustomData) {
	o.CustomData = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SecurityVulnerabilityData) SetDescription(v string) {
	o.Description = &v
}

// GetDetectionMarkdown returns the DetectionMarkdown field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetDetectionMarkdown() string {
	if o == nil || IsNil(o.DetectionMarkdown) {
		var ret string
		return ret
	}
	return *o.DetectionMarkdown
}

// GetDetectionMarkdownOk returns a tuple with the DetectionMarkdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetDetectionMarkdownOk() (*string, bool) {
	if o == nil || IsNil(o.DetectionMarkdown) {
		return nil, false
	}
	return o.DetectionMarkdown, true
}

// HasDetectionMarkdown returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasDetectionMarkdown() bool {
	if o != nil && !IsNil(o.DetectionMarkdown) {
		return true
	}

	return false
}

// SetDetectionMarkdown gets a reference to the given string and assigns it to the DetectionMarkdown field.
func (o *SecurityVulnerabilityData) SetDetectionMarkdown(v string) {
	o.DetectionMarkdown = &v
}

// GetDetectionType returns the DetectionType field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetDetectionType() string {
	if o == nil || IsNil(o.DetectionType) {
		var ret string
		return ret
	}
	return *o.DetectionType
}

// GetDetectionTypeOk returns a tuple with the DetectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetDetectionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DetectionType) {
		return nil, false
	}
	return o.DetectionType, true
}

// HasDetectionType returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasDetectionType() bool {
	if o != nil && !IsNil(o.DetectionType) {
		return true
	}

	return false
}

// SetDetectionType gets a reference to the given string and assigns it to the DetectionType field.
func (o *SecurityVulnerabilityData) SetDetectionType(v string) {
	o.DetectionType = &v
}

// GetEpssData returns the EpssData field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetEpssData() EpssData {
	if o == nil || IsNil(o.EpssData) {
		var ret EpssData
		return ret
	}
	return *o.EpssData
}

// GetEpssDataOk returns a tuple with the EpssData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetEpssDataOk() (*EpssData, bool) {
	if o == nil || IsNil(o.EpssData) {
		return nil, false
	}
	return o.EpssData, true
}

// HasEpssData returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasEpssData() bool {
	if o != nil && !IsNil(o.EpssData) {
		return true
	}

	return false
}

// SetEpssData gets a reference to the given EpssData and assigns it to the EpssData field.
func (o *SecurityVulnerabilityData) SetEpssData(v EpssData) {
	o.EpssData = &v
}

// GetExplanationMarkdown returns the ExplanationMarkdown field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetExplanationMarkdown() string {
	if o == nil || IsNil(o.ExplanationMarkdown) {
		var ret string
		return ret
	}
	return *o.ExplanationMarkdown
}

// GetExplanationMarkdownOk returns a tuple with the ExplanationMarkdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetExplanationMarkdownOk() (*string, bool) {
	if o == nil || IsNil(o.ExplanationMarkdown) {
		return nil, false
	}
	return o.ExplanationMarkdown, true
}

// HasExplanationMarkdown returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasExplanationMarkdown() bool {
	if o != nil && !IsNil(o.ExplanationMarkdown) {
		return true
	}

	return false
}

// SetExplanationMarkdown gets a reference to the given string and assigns it to the ExplanationMarkdown field.
func (o *SecurityVulnerabilityData) SetExplanationMarkdown(v string) {
	o.ExplanationMarkdown = &v
}

// GetIdentificationSource returns the IdentificationSource field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetIdentificationSource() string {
	if o == nil || IsNil(o.IdentificationSource) {
		var ret string
		return ret
	}
	return *o.IdentificationSource
}

// GetIdentificationSourceOk returns a tuple with the IdentificationSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetIdentificationSourceOk() (*string, bool) {
	if o == nil || IsNil(o.IdentificationSource) {
		return nil, false
	}
	return o.IdentificationSource, true
}

// HasIdentificationSource returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasIdentificationSource() bool {
	if o != nil && !IsNil(o.IdentificationSource) {
		return true
	}

	return false
}

// SetIdentificationSource gets a reference to the given string and assigns it to the IdentificationSource field.
func (o *SecurityVulnerabilityData) SetIdentificationSource(v string) {
	o.IdentificationSource = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetIdentifier() string {
	if o == nil || IsNil(o.Identifier) {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.Identifier) {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasIdentifier() bool {
	if o != nil && !IsNil(o.Identifier) {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *SecurityVulnerabilityData) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetIsAdvancedVulnerabilityDetection returns the IsAdvancedVulnerabilityDetection field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetIsAdvancedVulnerabilityDetection() bool {
	if o == nil || IsNil(o.IsAdvancedVulnerabilityDetection) {
		var ret bool
		return ret
	}
	return *o.IsAdvancedVulnerabilityDetection
}

// GetIsAdvancedVulnerabilityDetectionOk returns a tuple with the IsAdvancedVulnerabilityDetection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetIsAdvancedVulnerabilityDetectionOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAdvancedVulnerabilityDetection) {
		return nil, false
	}
	return o.IsAdvancedVulnerabilityDetection, true
}

// HasIsAdvancedVulnerabilityDetection returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasIsAdvancedVulnerabilityDetection() bool {
	if o != nil && !IsNil(o.IsAdvancedVulnerabilityDetection) {
		return true
	}

	return false
}

// SetIsAdvancedVulnerabilityDetection gets a reference to the given bool and assigns it to the IsAdvancedVulnerabilityDetection field.
func (o *SecurityVulnerabilityData) SetIsAdvancedVulnerabilityDetection(v bool) {
	o.IsAdvancedVulnerabilityDetection = &v
}

// GetKevData returns the KevData field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetKevData() KevData {
	if o == nil || IsNil(o.KevData) {
		var ret KevData
		return ret
	}
	return *o.KevData
}

// GetKevDataOk returns a tuple with the KevData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetKevDataOk() (*KevData, bool) {
	if o == nil || IsNil(o.KevData) {
		return nil, false
	}
	return o.KevData, true
}

// HasKevData returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasKevData() bool {
	if o != nil && !IsNil(o.KevData) {
		return true
	}

	return false
}

// SetKevData gets a reference to the given KevData and assigns it to the KevData field.
func (o *SecurityVulnerabilityData) SetKevData(v KevData) {
	o.KevData = &v
}

// GetMainSeverity returns the MainSeverity field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetMainSeverity() SecurityVulnerabilitySeverity {
	if o == nil || IsNil(o.MainSeverity) {
		var ret SecurityVulnerabilitySeverity
		return ret
	}
	return *o.MainSeverity
}

// GetMainSeverityOk returns a tuple with the MainSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetMainSeverityOk() (*SecurityVulnerabilitySeverity, bool) {
	if o == nil || IsNil(o.MainSeverity) {
		return nil, false
	}
	return o.MainSeverity, true
}

// HasMainSeverity returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasMainSeverity() bool {
	if o != nil && !IsNil(o.MainSeverity) {
		return true
	}

	return false
}

// SetMainSeverity gets a reference to the given SecurityVulnerabilitySeverity and assigns it to the MainSeverity field.
func (o *SecurityVulnerabilityData) SetMainSeverity(v SecurityVulnerabilitySeverity) {
	o.MainSeverity = &v
}

// GetRecommendationMarkdown returns the RecommendationMarkdown field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetRecommendationMarkdown() string {
	if o == nil || IsNil(o.RecommendationMarkdown) {
		var ret string
		return ret
	}
	return *o.RecommendationMarkdown
}

// GetRecommendationMarkdownOk returns a tuple with the RecommendationMarkdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetRecommendationMarkdownOk() (*string, bool) {
	if o == nil || IsNil(o.RecommendationMarkdown) {
		return nil, false
	}
	return o.RecommendationMarkdown, true
}

// HasRecommendationMarkdown returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasRecommendationMarkdown() bool {
	if o != nil && !IsNil(o.RecommendationMarkdown) {
		return true
	}

	return false
}

// SetRecommendationMarkdown gets a reference to the given string and assigns it to the RecommendationMarkdown field.
func (o *SecurityVulnerabilityData) SetRecommendationMarkdown(v string) {
	o.RecommendationMarkdown = &v
}

// GetResearchType returns the ResearchType field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetResearchType() string {
	if o == nil || IsNil(o.ResearchType) {
		var ret string
		return ret
	}
	return *o.ResearchType
}

// GetResearchTypeOk returns a tuple with the ResearchType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetResearchTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ResearchType) {
		return nil, false
	}
	return o.ResearchType, true
}

// HasResearchType returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasResearchType() bool {
	if o != nil && !IsNil(o.ResearchType) {
		return true
	}

	return false
}

// SetResearchType gets a reference to the given string and assigns it to the ResearchType field.
func (o *SecurityVulnerabilityData) SetResearchType(v string) {
	o.ResearchType = &v
}

// GetRootCauses returns the RootCauses field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetRootCauses() []RootCause {
	if o == nil || IsNil(o.RootCauses) {
		var ret []RootCause
		return ret
	}
	return o.RootCauses
}

// GetRootCausesOk returns a tuple with the RootCauses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetRootCausesOk() ([]RootCause, bool) {
	if o == nil || IsNil(o.RootCauses) {
		return nil, false
	}
	return o.RootCauses, true
}

// HasRootCauses returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasRootCauses() bool {
	if o != nil && !IsNil(o.RootCauses) {
		return true
	}

	return false
}

// SetRootCauses gets a reference to the given []RootCause and assigns it to the RootCauses field.
func (o *SecurityVulnerabilityData) SetRootCauses(v []RootCause) {
	o.RootCauses = v
}

// GetSeverityScores returns the SeverityScores field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetSeverityScores() []SecurityVulnerabilitySeverity {
	if o == nil || IsNil(o.SeverityScores) {
		var ret []SecurityVulnerabilitySeverity
		return ret
	}
	return o.SeverityScores
}

// GetSeverityScoresOk returns a tuple with the SeverityScores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetSeverityScoresOk() ([]SecurityVulnerabilitySeverity, bool) {
	if o == nil || IsNil(o.SeverityScores) {
		return nil, false
	}
	return o.SeverityScores, true
}

// HasSeverityScores returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasSeverityScores() bool {
	if o != nil && !IsNil(o.SeverityScores) {
		return true
	}

	return false
}

// SetSeverityScores gets a reference to the given []SecurityVulnerabilitySeverity and assigns it to the SeverityScores field.
func (o *SecurityVulnerabilityData) SetSeverityScores(v []SecurityVulnerabilitySeverity) {
	o.SeverityScores = v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetSource() VulnerabilitySource {
	if o == nil || IsNil(o.Source) {
		var ret VulnerabilitySource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetSourceOk() (*VulnerabilitySource, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given VulnerabilitySource and assigns it to the Source field.
func (o *SecurityVulnerabilityData) SetSource(v VulnerabilitySource) {
	o.Source = &v
}

// GetVulnIds returns the VulnIds field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetVulnIds() []string {
	if o == nil || IsNil(o.VulnIds) {
		var ret []string
		return ret
	}
	return o.VulnIds
}

// GetVulnIdsOk returns a tuple with the VulnIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetVulnIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.VulnIds) {
		return nil, false
	}
	return o.VulnIds, true
}

// HasVulnIds returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasVulnIds() bool {
	if o != nil && !IsNil(o.VulnIds) {
		return true
	}

	return false
}

// SetVulnIds gets a reference to the given []string and assigns it to the VulnIds field.
func (o *SecurityVulnerabilityData) SetVulnIds(v []string) {
	o.VulnIds = v
}

// GetVulnerabilityLink returns the VulnerabilityLink field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetVulnerabilityLink() string {
	if o == nil || IsNil(o.VulnerabilityLink) {
		var ret string
		return ret
	}
	return *o.VulnerabilityLink
}

// GetVulnerabilityLinkOk returns a tuple with the VulnerabilityLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetVulnerabilityLinkOk() (*string, bool) {
	if o == nil || IsNil(o.VulnerabilityLink) {
		return nil, false
	}
	return o.VulnerabilityLink, true
}

// HasVulnerabilityLink returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasVulnerabilityLink() bool {
	if o != nil && !IsNil(o.VulnerabilityLink) {
		return true
	}

	return false
}

// SetVulnerabilityLink gets a reference to the given string and assigns it to the VulnerabilityLink field.
func (o *SecurityVulnerabilityData) SetVulnerabilityLink(v string) {
	o.VulnerabilityLink = &v
}

// GetVulnerableVersionRanges returns the VulnerableVersionRanges field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetVulnerableVersionRanges() []string {
	if o == nil || IsNil(o.VulnerableVersionRanges) {
		var ret []string
		return ret
	}
	return o.VulnerableVersionRanges
}

// GetVulnerableVersionRangesOk returns a tuple with the VulnerableVersionRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetVulnerableVersionRangesOk() ([]string, bool) {
	if o == nil || IsNil(o.VulnerableVersionRanges) {
		return nil, false
	}
	return o.VulnerableVersionRanges, true
}

// HasVulnerableVersionRanges returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasVulnerableVersionRanges() bool {
	if o != nil && !IsNil(o.VulnerableVersionRanges) {
		return true
	}

	return false
}

// SetVulnerableVersionRanges gets a reference to the given []string and assigns it to the VulnerableVersionRanges field.
func (o *SecurityVulnerabilityData) SetVulnerableVersionRanges(v []string) {
	o.VulnerableVersionRanges = v
}

// GetWeakness returns the Weakness field value if set, zero value otherwise.
func (o *SecurityVulnerabilityData) GetWeakness() SecurityVulnerabilityWeakness {
	if o == nil || IsNil(o.Weakness) {
		var ret SecurityVulnerabilityWeakness
		return ret
	}
	return *o.Weakness
}

// GetWeaknessOk returns a tuple with the Weakness field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityVulnerabilityData) GetWeaknessOk() (*SecurityVulnerabilityWeakness, bool) {
	if o == nil || IsNil(o.Weakness) {
		return nil, false
	}
	return o.Weakness, true
}

// HasWeakness returns a boolean if a field has been set.
func (o *SecurityVulnerabilityData) HasWeakness() bool {
	if o != nil && !IsNil(o.Weakness) {
		return true
	}

	return false
}

// SetWeakness gets a reference to the given SecurityVulnerabilityWeakness and assigns it to the Weakness field.
func (o *SecurityVulnerabilityData) SetWeakness(v SecurityVulnerabilityWeakness) {
	o.Weakness = &v
}

func (o SecurityVulnerabilityData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityVulnerabilityData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Advisories) {
		toSerialize["advisories"] = o.Advisories
	}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.ComponentDetectionMarkdown) {
		toSerialize["componentDetectionMarkdown"] = o.ComponentDetectionMarkdown
	}
	if !IsNil(o.ComponentExplanationMarkdown) {
		toSerialize["componentExplanationMarkdown"] = o.ComponentExplanationMarkdown
	}
	if !IsNil(o.ComponentRecommendationMarkdown) {
		toSerialize["componentRecommendationMarkdown"] = o.ComponentRecommendationMarkdown
	}
	if !IsNil(o.CustomData) {
		toSerialize["customData"] = o.CustomData
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.DetectionMarkdown) {
		toSerialize["detectionMarkdown"] = o.DetectionMarkdown
	}
	if !IsNil(o.DetectionType) {
		toSerialize["detectionType"] = o.DetectionType
	}
	if !IsNil(o.EpssData) {
		toSerialize["epssData"] = o.EpssData
	}
	if !IsNil(o.ExplanationMarkdown) {
		toSerialize["explanationMarkdown"] = o.ExplanationMarkdown
	}
	if !IsNil(o.IdentificationSource) {
		toSerialize["identificationSource"] = o.IdentificationSource
	}
	if !IsNil(o.Identifier) {
		toSerialize["identifier"] = o.Identifier
	}
	if !IsNil(o.IsAdvancedVulnerabilityDetection) {
		toSerialize["isAdvancedVulnerabilityDetection"] = o.IsAdvancedVulnerabilityDetection
	}
	if !IsNil(o.KevData) {
		toSerialize["kevData"] = o.KevData
	}
	if !IsNil(o.MainSeverity) {
		toSerialize["mainSeverity"] = o.MainSeverity
	}
	if !IsNil(o.RecommendationMarkdown) {
		toSerialize["recommendationMarkdown"] = o.RecommendationMarkdown
	}
	if !IsNil(o.ResearchType) {
		toSerialize["researchType"] = o.ResearchType
	}
	if !IsNil(o.RootCauses) {
		toSerialize["rootCauses"] = o.RootCauses
	}
	if !IsNil(o.SeverityScores) {
		toSerialize["severityScores"] = o.SeverityScores
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.VulnIds) {
		toSerialize["vulnIds"] = o.VulnIds
	}
	if !IsNil(o.VulnerabilityLink) {
		toSerialize["vulnerabilityLink"] = o.VulnerabilityLink
	}
	if !IsNil(o.VulnerableVersionRanges) {
		toSerialize["vulnerableVersionRanges"] = o.VulnerableVersionRanges
	}
	if !IsNil(o.Weakness) {
		toSerialize["weakness"] = o.Weakness
	}
	return toSerialize, nil
}

type NullableSecurityVulnerabilityData struct {
	value *SecurityVulnerabilityData
	isSet bool
}

func (v NullableSecurityVulnerabilityData) Get() *SecurityVulnerabilityData {
	return v.value
}

func (v *NullableSecurityVulnerabilityData) Set(val *SecurityVulnerabilityData) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityVulnerabilityData) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityVulnerabilityData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityVulnerabilityData(val *SecurityVulnerabilityData) *NullableSecurityVulnerabilityData {
	return &NullableSecurityVulnerabilityData{value: val, isSet: true}
}

func (v NullableSecurityVulnerabilityData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityVulnerabilityData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


