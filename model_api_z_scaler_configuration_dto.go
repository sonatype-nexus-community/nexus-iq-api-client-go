/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.196.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiZScalerConfigurationDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiZScalerConfigurationDTO{}

// ApiZScalerConfigurationDTO struct for ApiZScalerConfigurationDTO
type ApiZScalerConfigurationDTO struct {
	ApiKey *string `json:"apiKey,omitempty"`
	EulaAgreed *bool `json:"eulaAgreed,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	MavenFormatEnabled *bool `json:"mavenFormatEnabled,omitempty"`
	NpmFormatEnabled *bool `json:"npmFormatEnabled,omitempty"`
	NugetFormatEnabled *bool `json:"nugetFormatEnabled,omitempty"`
	Password *string `json:"password,omitempty"`
	PypiFormatEnabled *bool `json:"pypiFormatEnabled,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewApiZScalerConfigurationDTO instantiates a new ApiZScalerConfigurationDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiZScalerConfigurationDTO() *ApiZScalerConfigurationDTO {
	this := ApiZScalerConfigurationDTO{}
	return &this
}

// NewApiZScalerConfigurationDTOWithDefaults instantiates a new ApiZScalerConfigurationDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiZScalerConfigurationDTOWithDefaults() *ApiZScalerConfigurationDTO {
	this := ApiZScalerConfigurationDTO{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *ApiZScalerConfigurationDTO) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZScalerConfigurationDTO) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *ApiZScalerConfigurationDTO) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *ApiZScalerConfigurationDTO) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetEulaAgreed returns the EulaAgreed field value if set, zero value otherwise.
func (o *ApiZScalerConfigurationDTO) GetEulaAgreed() bool {
	if o == nil || IsNil(o.EulaAgreed) {
		var ret bool
		return ret
	}
	return *o.EulaAgreed
}

// GetEulaAgreedOk returns a tuple with the EulaAgreed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZScalerConfigurationDTO) GetEulaAgreedOk() (*bool, bool) {
	if o == nil || IsNil(o.EulaAgreed) {
		return nil, false
	}
	return o.EulaAgreed, true
}

// HasEulaAgreed returns a boolean if a field has been set.
func (o *ApiZScalerConfigurationDTO) HasEulaAgreed() bool {
	if o != nil && !IsNil(o.EulaAgreed) {
		return true
	}

	return false
}

// SetEulaAgreed gets a reference to the given bool and assigns it to the EulaAgreed field.
func (o *ApiZScalerConfigurationDTO) SetEulaAgreed(v bool) {
	o.EulaAgreed = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *ApiZScalerConfigurationDTO) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZScalerConfigurationDTO) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *ApiZScalerConfigurationDTO) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *ApiZScalerConfigurationDTO) SetHostname(v string) {
	o.Hostname = &v
}

// GetMavenFormatEnabled returns the MavenFormatEnabled field value if set, zero value otherwise.
func (o *ApiZScalerConfigurationDTO) GetMavenFormatEnabled() bool {
	if o == nil || IsNil(o.MavenFormatEnabled) {
		var ret bool
		return ret
	}
	return *o.MavenFormatEnabled
}

// GetMavenFormatEnabledOk returns a tuple with the MavenFormatEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZScalerConfigurationDTO) GetMavenFormatEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.MavenFormatEnabled) {
		return nil, false
	}
	return o.MavenFormatEnabled, true
}

// HasMavenFormatEnabled returns a boolean if a field has been set.
func (o *ApiZScalerConfigurationDTO) HasMavenFormatEnabled() bool {
	if o != nil && !IsNil(o.MavenFormatEnabled) {
		return true
	}

	return false
}

// SetMavenFormatEnabled gets a reference to the given bool and assigns it to the MavenFormatEnabled field.
func (o *ApiZScalerConfigurationDTO) SetMavenFormatEnabled(v bool) {
	o.MavenFormatEnabled = &v
}

// GetNpmFormatEnabled returns the NpmFormatEnabled field value if set, zero value otherwise.
func (o *ApiZScalerConfigurationDTO) GetNpmFormatEnabled() bool {
	if o == nil || IsNil(o.NpmFormatEnabled) {
		var ret bool
		return ret
	}
	return *o.NpmFormatEnabled
}

// GetNpmFormatEnabledOk returns a tuple with the NpmFormatEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZScalerConfigurationDTO) GetNpmFormatEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.NpmFormatEnabled) {
		return nil, false
	}
	return o.NpmFormatEnabled, true
}

// HasNpmFormatEnabled returns a boolean if a field has been set.
func (o *ApiZScalerConfigurationDTO) HasNpmFormatEnabled() bool {
	if o != nil && !IsNil(o.NpmFormatEnabled) {
		return true
	}

	return false
}

// SetNpmFormatEnabled gets a reference to the given bool and assigns it to the NpmFormatEnabled field.
func (o *ApiZScalerConfigurationDTO) SetNpmFormatEnabled(v bool) {
	o.NpmFormatEnabled = &v
}

// GetNugetFormatEnabled returns the NugetFormatEnabled field value if set, zero value otherwise.
func (o *ApiZScalerConfigurationDTO) GetNugetFormatEnabled() bool {
	if o == nil || IsNil(o.NugetFormatEnabled) {
		var ret bool
		return ret
	}
	return *o.NugetFormatEnabled
}

// GetNugetFormatEnabledOk returns a tuple with the NugetFormatEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZScalerConfigurationDTO) GetNugetFormatEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.NugetFormatEnabled) {
		return nil, false
	}
	return o.NugetFormatEnabled, true
}

// HasNugetFormatEnabled returns a boolean if a field has been set.
func (o *ApiZScalerConfigurationDTO) HasNugetFormatEnabled() bool {
	if o != nil && !IsNil(o.NugetFormatEnabled) {
		return true
	}

	return false
}

// SetNugetFormatEnabled gets a reference to the given bool and assigns it to the NugetFormatEnabled field.
func (o *ApiZScalerConfigurationDTO) SetNugetFormatEnabled(v bool) {
	o.NugetFormatEnabled = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ApiZScalerConfigurationDTO) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZScalerConfigurationDTO) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ApiZScalerConfigurationDTO) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ApiZScalerConfigurationDTO) SetPassword(v string) {
	o.Password = &v
}

// GetPypiFormatEnabled returns the PypiFormatEnabled field value if set, zero value otherwise.
func (o *ApiZScalerConfigurationDTO) GetPypiFormatEnabled() bool {
	if o == nil || IsNil(o.PypiFormatEnabled) {
		var ret bool
		return ret
	}
	return *o.PypiFormatEnabled
}

// GetPypiFormatEnabledOk returns a tuple with the PypiFormatEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZScalerConfigurationDTO) GetPypiFormatEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PypiFormatEnabled) {
		return nil, false
	}
	return o.PypiFormatEnabled, true
}

// HasPypiFormatEnabled returns a boolean if a field has been set.
func (o *ApiZScalerConfigurationDTO) HasPypiFormatEnabled() bool {
	if o != nil && !IsNil(o.PypiFormatEnabled) {
		return true
	}

	return false
}

// SetPypiFormatEnabled gets a reference to the given bool and assigns it to the PypiFormatEnabled field.
func (o *ApiZScalerConfigurationDTO) SetPypiFormatEnabled(v bool) {
	o.PypiFormatEnabled = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ApiZScalerConfigurationDTO) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiZScalerConfigurationDTO) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ApiZScalerConfigurationDTO) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ApiZScalerConfigurationDTO) SetUsername(v string) {
	o.Username = &v
}

func (o ApiZScalerConfigurationDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiZScalerConfigurationDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKey) {
		toSerialize["apiKey"] = o.ApiKey
	}
	if !IsNil(o.EulaAgreed) {
		toSerialize["eulaAgreed"] = o.EulaAgreed
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.MavenFormatEnabled) {
		toSerialize["mavenFormatEnabled"] = o.MavenFormatEnabled
	}
	if !IsNil(o.NpmFormatEnabled) {
		toSerialize["npmFormatEnabled"] = o.NpmFormatEnabled
	}
	if !IsNil(o.NugetFormatEnabled) {
		toSerialize["nugetFormatEnabled"] = o.NugetFormatEnabled
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.PypiFormatEnabled) {
		toSerialize["pypiFormatEnabled"] = o.PypiFormatEnabled
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableApiZScalerConfigurationDTO struct {
	value *ApiZScalerConfigurationDTO
	isSet bool
}

func (v NullableApiZScalerConfigurationDTO) Get() *ApiZScalerConfigurationDTO {
	return v.value
}

func (v *NullableApiZScalerConfigurationDTO) Set(val *ApiZScalerConfigurationDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiZScalerConfigurationDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiZScalerConfigurationDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiZScalerConfigurationDTO(val *ApiZScalerConfigurationDTO) *NullableApiZScalerConfigurationDTO {
	return &NullableApiZScalerConfigurationDTO{value: val, isSet: true}
}

func (v NullableApiZScalerConfigurationDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiZScalerConfigurationDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


