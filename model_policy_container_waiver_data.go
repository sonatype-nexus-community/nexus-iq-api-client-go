/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.196.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
	"time"
)

// checks if the PolicyContainerWaiverData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyContainerWaiverData{}

// PolicyContainerWaiverData List of items for the current page
type PolicyContainerWaiverData struct {
	ApplicationScope *string `json:"applicationScope,omitempty"`
	CreateTime *time.Time `json:"createTime,omitempty"`
	ExpiryTime *time.Time `json:"expiryTime,omitempty"`
	MaxThreatLevel *int32 `json:"maxThreatLevel,omitempty"`
	OwnerId *string `json:"ownerId,omitempty"`
	PolicyWaiverId *string `json:"policyWaiverId,omitempty"`
	UniqueComponentCount *int64 `json:"uniqueComponentCount,omitempty"`
	UniquePolicyCount *int64 `json:"uniquePolicyCount,omitempty"`
}

// NewPolicyContainerWaiverData instantiates a new PolicyContainerWaiverData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyContainerWaiverData() *PolicyContainerWaiverData {
	this := PolicyContainerWaiverData{}
	return &this
}

// NewPolicyContainerWaiverDataWithDefaults instantiates a new PolicyContainerWaiverData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyContainerWaiverDataWithDefaults() *PolicyContainerWaiverData {
	this := PolicyContainerWaiverData{}
	return &this
}

// GetApplicationScope returns the ApplicationScope field value if set, zero value otherwise.
func (o *PolicyContainerWaiverData) GetApplicationScope() string {
	if o == nil || IsNil(o.ApplicationScope) {
		var ret string
		return ret
	}
	return *o.ApplicationScope
}

// GetApplicationScopeOk returns a tuple with the ApplicationScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyContainerWaiverData) GetApplicationScopeOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationScope) {
		return nil, false
	}
	return o.ApplicationScope, true
}

// HasApplicationScope returns a boolean if a field has been set.
func (o *PolicyContainerWaiverData) HasApplicationScope() bool {
	if o != nil && !IsNil(o.ApplicationScope) {
		return true
	}

	return false
}

// SetApplicationScope gets a reference to the given string and assigns it to the ApplicationScope field.
func (o *PolicyContainerWaiverData) SetApplicationScope(v string) {
	o.ApplicationScope = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *PolicyContainerWaiverData) GetCreateTime() time.Time {
	if o == nil || IsNil(o.CreateTime) {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyContainerWaiverData) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *PolicyContainerWaiverData) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *PolicyContainerWaiverData) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetExpiryTime returns the ExpiryTime field value if set, zero value otherwise.
func (o *PolicyContainerWaiverData) GetExpiryTime() time.Time {
	if o == nil || IsNil(o.ExpiryTime) {
		var ret time.Time
		return ret
	}
	return *o.ExpiryTime
}

// GetExpiryTimeOk returns a tuple with the ExpiryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyContainerWaiverData) GetExpiryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiryTime) {
		return nil, false
	}
	return o.ExpiryTime, true
}

// HasExpiryTime returns a boolean if a field has been set.
func (o *PolicyContainerWaiverData) HasExpiryTime() bool {
	if o != nil && !IsNil(o.ExpiryTime) {
		return true
	}

	return false
}

// SetExpiryTime gets a reference to the given time.Time and assigns it to the ExpiryTime field.
func (o *PolicyContainerWaiverData) SetExpiryTime(v time.Time) {
	o.ExpiryTime = &v
}

// GetMaxThreatLevel returns the MaxThreatLevel field value if set, zero value otherwise.
func (o *PolicyContainerWaiverData) GetMaxThreatLevel() int32 {
	if o == nil || IsNil(o.MaxThreatLevel) {
		var ret int32
		return ret
	}
	return *o.MaxThreatLevel
}

// GetMaxThreatLevelOk returns a tuple with the MaxThreatLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyContainerWaiverData) GetMaxThreatLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxThreatLevel) {
		return nil, false
	}
	return o.MaxThreatLevel, true
}

// HasMaxThreatLevel returns a boolean if a field has been set.
func (o *PolicyContainerWaiverData) HasMaxThreatLevel() bool {
	if o != nil && !IsNil(o.MaxThreatLevel) {
		return true
	}

	return false
}

// SetMaxThreatLevel gets a reference to the given int32 and assigns it to the MaxThreatLevel field.
func (o *PolicyContainerWaiverData) SetMaxThreatLevel(v int32) {
	o.MaxThreatLevel = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *PolicyContainerWaiverData) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId) {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyContainerWaiverData) GetOwnerIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerId) {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *PolicyContainerWaiverData) HasOwnerId() bool {
	if o != nil && !IsNil(o.OwnerId) {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *PolicyContainerWaiverData) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetPolicyWaiverId returns the PolicyWaiverId field value if set, zero value otherwise.
func (o *PolicyContainerWaiverData) GetPolicyWaiverId() string {
	if o == nil || IsNil(o.PolicyWaiverId) {
		var ret string
		return ret
	}
	return *o.PolicyWaiverId
}

// GetPolicyWaiverIdOk returns a tuple with the PolicyWaiverId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyContainerWaiverData) GetPolicyWaiverIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyWaiverId) {
		return nil, false
	}
	return o.PolicyWaiverId, true
}

// HasPolicyWaiverId returns a boolean if a field has been set.
func (o *PolicyContainerWaiverData) HasPolicyWaiverId() bool {
	if o != nil && !IsNil(o.PolicyWaiverId) {
		return true
	}

	return false
}

// SetPolicyWaiverId gets a reference to the given string and assigns it to the PolicyWaiverId field.
func (o *PolicyContainerWaiverData) SetPolicyWaiverId(v string) {
	o.PolicyWaiverId = &v
}

// GetUniqueComponentCount returns the UniqueComponentCount field value if set, zero value otherwise.
func (o *PolicyContainerWaiverData) GetUniqueComponentCount() int64 {
	if o == nil || IsNil(o.UniqueComponentCount) {
		var ret int64
		return ret
	}
	return *o.UniqueComponentCount
}

// GetUniqueComponentCountOk returns a tuple with the UniqueComponentCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyContainerWaiverData) GetUniqueComponentCountOk() (*int64, bool) {
	if o == nil || IsNil(o.UniqueComponentCount) {
		return nil, false
	}
	return o.UniqueComponentCount, true
}

// HasUniqueComponentCount returns a boolean if a field has been set.
func (o *PolicyContainerWaiverData) HasUniqueComponentCount() bool {
	if o != nil && !IsNil(o.UniqueComponentCount) {
		return true
	}

	return false
}

// SetUniqueComponentCount gets a reference to the given int64 and assigns it to the UniqueComponentCount field.
func (o *PolicyContainerWaiverData) SetUniqueComponentCount(v int64) {
	o.UniqueComponentCount = &v
}

// GetUniquePolicyCount returns the UniquePolicyCount field value if set, zero value otherwise.
func (o *PolicyContainerWaiverData) GetUniquePolicyCount() int64 {
	if o == nil || IsNil(o.UniquePolicyCount) {
		var ret int64
		return ret
	}
	return *o.UniquePolicyCount
}

// GetUniquePolicyCountOk returns a tuple with the UniquePolicyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyContainerWaiverData) GetUniquePolicyCountOk() (*int64, bool) {
	if o == nil || IsNil(o.UniquePolicyCount) {
		return nil, false
	}
	return o.UniquePolicyCount, true
}

// HasUniquePolicyCount returns a boolean if a field has been set.
func (o *PolicyContainerWaiverData) HasUniquePolicyCount() bool {
	if o != nil && !IsNil(o.UniquePolicyCount) {
		return true
	}

	return false
}

// SetUniquePolicyCount gets a reference to the given int64 and assigns it to the UniquePolicyCount field.
func (o *PolicyContainerWaiverData) SetUniquePolicyCount(v int64) {
	o.UniquePolicyCount = &v
}

func (o PolicyContainerWaiverData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyContainerWaiverData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationScope) {
		toSerialize["applicationScope"] = o.ApplicationScope
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.ExpiryTime) {
		toSerialize["expiryTime"] = o.ExpiryTime
	}
	if !IsNil(o.MaxThreatLevel) {
		toSerialize["maxThreatLevel"] = o.MaxThreatLevel
	}
	if !IsNil(o.OwnerId) {
		toSerialize["ownerId"] = o.OwnerId
	}
	if !IsNil(o.PolicyWaiverId) {
		toSerialize["policyWaiverId"] = o.PolicyWaiverId
	}
	if !IsNil(o.UniqueComponentCount) {
		toSerialize["uniqueComponentCount"] = o.UniqueComponentCount
	}
	if !IsNil(o.UniquePolicyCount) {
		toSerialize["uniquePolicyCount"] = o.UniquePolicyCount
	}
	return toSerialize, nil
}

type NullablePolicyContainerWaiverData struct {
	value *PolicyContainerWaiverData
	isSet bool
}

func (v NullablePolicyContainerWaiverData) Get() *PolicyContainerWaiverData {
	return v.value
}

func (v *NullablePolicyContainerWaiverData) Set(val *PolicyContainerWaiverData) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyContainerWaiverData) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyContainerWaiverData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyContainerWaiverData(val *PolicyContainerWaiverData) *NullablePolicyContainerWaiverData {
	return &NullablePolicyContainerWaiverData{value: val, isSet: true}
}

func (v NullablePolicyContainerWaiverData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyContainerWaiverData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


