/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.195.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
	"time"
)

// checks if the ApiCrossStageViolationDTOV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCrossStageViolationDTOV2{}

// ApiCrossStageViolationDTOV2 struct for ApiCrossStageViolationDTOV2
type ApiCrossStageViolationDTOV2 struct {
	ApplicationName *string `json:"applicationName,omitempty"`
	ApplicationPublicId *string `json:"applicationPublicId,omitempty"`
	ComponentIdentifier *ApiComponentIdentifierDTOV2 `json:"componentIdentifier,omitempty"`
	ConstraintViolations []ApiConstraintViolationDTO `json:"constraintViolations,omitempty"`
	DisplayName *ComponentDisplayName `json:"displayName,omitempty"`
	Filename *string `json:"filename,omitempty"`
	FixTime *time.Time `json:"fixTime,omitempty"`
	Hash *string `json:"hash,omitempty"`
	LegacyViolationTime *time.Time `json:"legacyViolationTime,omitempty"`
	OpenTime *time.Time `json:"openTime,omitempty"`
	OrganizationName *string `json:"organizationName,omitempty"`
	PolicyId *string `json:"policyId,omitempty"`
	PolicyName *string `json:"policyName,omitempty"`
	PolicyOwner *PolicyOwner `json:"policyOwner,omitempty"`
	PolicyThreatCategory *string `json:"policyThreatCategory,omitempty"`
	PolicyViolationId *string `json:"policyViolationId,omitempty"`
	ReachabilityStatus *string `json:"reachabilityStatus,omitempty"`
	StageData *map[string]StageData `json:"stageData,omitempty"`
	ThreatLevel *int32 `json:"threatLevel,omitempty"`
	WaiveTime *time.Time `json:"waiveTime,omitempty"`
}

// NewApiCrossStageViolationDTOV2 instantiates a new ApiCrossStageViolationDTOV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCrossStageViolationDTOV2() *ApiCrossStageViolationDTOV2 {
	this := ApiCrossStageViolationDTOV2{}
	return &this
}

// NewApiCrossStageViolationDTOV2WithDefaults instantiates a new ApiCrossStageViolationDTOV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCrossStageViolationDTOV2WithDefaults() *ApiCrossStageViolationDTOV2 {
	this := ApiCrossStageViolationDTOV2{}
	return &this
}

// GetApplicationName returns the ApplicationName field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetApplicationName() string {
	if o == nil || IsNil(o.ApplicationName) {
		var ret string
		return ret
	}
	return *o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetApplicationNameOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationName) {
		return nil, false
	}
	return o.ApplicationName, true
}

// HasApplicationName returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasApplicationName() bool {
	if o != nil && !IsNil(o.ApplicationName) {
		return true
	}

	return false
}

// SetApplicationName gets a reference to the given string and assigns it to the ApplicationName field.
func (o *ApiCrossStageViolationDTOV2) SetApplicationName(v string) {
	o.ApplicationName = &v
}

// GetApplicationPublicId returns the ApplicationPublicId field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetApplicationPublicId() string {
	if o == nil || IsNil(o.ApplicationPublicId) {
		var ret string
		return ret
	}
	return *o.ApplicationPublicId
}

// GetApplicationPublicIdOk returns a tuple with the ApplicationPublicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetApplicationPublicIdOk() (*string, bool) {
	if o == nil || IsNil(o.ApplicationPublicId) {
		return nil, false
	}
	return o.ApplicationPublicId, true
}

// HasApplicationPublicId returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasApplicationPublicId() bool {
	if o != nil && !IsNil(o.ApplicationPublicId) {
		return true
	}

	return false
}

// SetApplicationPublicId gets a reference to the given string and assigns it to the ApplicationPublicId field.
func (o *ApiCrossStageViolationDTOV2) SetApplicationPublicId(v string) {
	o.ApplicationPublicId = &v
}

// GetComponentIdentifier returns the ComponentIdentifier field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetComponentIdentifier() ApiComponentIdentifierDTOV2 {
	if o == nil || IsNil(o.ComponentIdentifier) {
		var ret ApiComponentIdentifierDTOV2
		return ret
	}
	return *o.ComponentIdentifier
}

// GetComponentIdentifierOk returns a tuple with the ComponentIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetComponentIdentifierOk() (*ApiComponentIdentifierDTOV2, bool) {
	if o == nil || IsNil(o.ComponentIdentifier) {
		return nil, false
	}
	return o.ComponentIdentifier, true
}

// HasComponentIdentifier returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasComponentIdentifier() bool {
	if o != nil && !IsNil(o.ComponentIdentifier) {
		return true
	}

	return false
}

// SetComponentIdentifier gets a reference to the given ApiComponentIdentifierDTOV2 and assigns it to the ComponentIdentifier field.
func (o *ApiCrossStageViolationDTOV2) SetComponentIdentifier(v ApiComponentIdentifierDTOV2) {
	o.ComponentIdentifier = &v
}

// GetConstraintViolations returns the ConstraintViolations field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetConstraintViolations() []ApiConstraintViolationDTO {
	if o == nil || IsNil(o.ConstraintViolations) {
		var ret []ApiConstraintViolationDTO
		return ret
	}
	return o.ConstraintViolations
}

// GetConstraintViolationsOk returns a tuple with the ConstraintViolations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetConstraintViolationsOk() ([]ApiConstraintViolationDTO, bool) {
	if o == nil || IsNil(o.ConstraintViolations) {
		return nil, false
	}
	return o.ConstraintViolations, true
}

// HasConstraintViolations returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasConstraintViolations() bool {
	if o != nil && !IsNil(o.ConstraintViolations) {
		return true
	}

	return false
}

// SetConstraintViolations gets a reference to the given []ApiConstraintViolationDTO and assigns it to the ConstraintViolations field.
func (o *ApiCrossStageViolationDTOV2) SetConstraintViolations(v []ApiConstraintViolationDTO) {
	o.ConstraintViolations = v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetDisplayName() ComponentDisplayName {
	if o == nil || IsNil(o.DisplayName) {
		var ret ComponentDisplayName
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetDisplayNameOk() (*ComponentDisplayName, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given ComponentDisplayName and assigns it to the DisplayName field.
func (o *ApiCrossStageViolationDTOV2) SetDisplayName(v ComponentDisplayName) {
	o.DisplayName = &v
}

// GetFilename returns the Filename field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetFilename() string {
	if o == nil || IsNil(o.Filename) {
		var ret string
		return ret
	}
	return *o.Filename
}

// GetFilenameOk returns a tuple with the Filename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetFilenameOk() (*string, bool) {
	if o == nil || IsNil(o.Filename) {
		return nil, false
	}
	return o.Filename, true
}

// HasFilename returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasFilename() bool {
	if o != nil && !IsNil(o.Filename) {
		return true
	}

	return false
}

// SetFilename gets a reference to the given string and assigns it to the Filename field.
func (o *ApiCrossStageViolationDTOV2) SetFilename(v string) {
	o.Filename = &v
}

// GetFixTime returns the FixTime field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetFixTime() time.Time {
	if o == nil || IsNil(o.FixTime) {
		var ret time.Time
		return ret
	}
	return *o.FixTime
}

// GetFixTimeOk returns a tuple with the FixTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetFixTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FixTime) {
		return nil, false
	}
	return o.FixTime, true
}

// HasFixTime returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasFixTime() bool {
	if o != nil && !IsNil(o.FixTime) {
		return true
	}

	return false
}

// SetFixTime gets a reference to the given time.Time and assigns it to the FixTime field.
func (o *ApiCrossStageViolationDTOV2) SetFixTime(v time.Time) {
	o.FixTime = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *ApiCrossStageViolationDTOV2) SetHash(v string) {
	o.Hash = &v
}

// GetLegacyViolationTime returns the LegacyViolationTime field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetLegacyViolationTime() time.Time {
	if o == nil || IsNil(o.LegacyViolationTime) {
		var ret time.Time
		return ret
	}
	return *o.LegacyViolationTime
}

// GetLegacyViolationTimeOk returns a tuple with the LegacyViolationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetLegacyViolationTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LegacyViolationTime) {
		return nil, false
	}
	return o.LegacyViolationTime, true
}

// HasLegacyViolationTime returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasLegacyViolationTime() bool {
	if o != nil && !IsNil(o.LegacyViolationTime) {
		return true
	}

	return false
}

// SetLegacyViolationTime gets a reference to the given time.Time and assigns it to the LegacyViolationTime field.
func (o *ApiCrossStageViolationDTOV2) SetLegacyViolationTime(v time.Time) {
	o.LegacyViolationTime = &v
}

// GetOpenTime returns the OpenTime field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetOpenTime() time.Time {
	if o == nil || IsNil(o.OpenTime) {
		var ret time.Time
		return ret
	}
	return *o.OpenTime
}

// GetOpenTimeOk returns a tuple with the OpenTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetOpenTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OpenTime) {
		return nil, false
	}
	return o.OpenTime, true
}

// HasOpenTime returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasOpenTime() bool {
	if o != nil && !IsNil(o.OpenTime) {
		return true
	}

	return false
}

// SetOpenTime gets a reference to the given time.Time and assigns it to the OpenTime field.
func (o *ApiCrossStageViolationDTOV2) SetOpenTime(v time.Time) {
	o.OpenTime = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *ApiCrossStageViolationDTOV2) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId) {
		var ret string
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given string and assigns it to the PolicyId field.
func (o *ApiCrossStageViolationDTOV2) SetPolicyId(v string) {
	o.PolicyId = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName) {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetPolicyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyName) {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasPolicyName() bool {
	if o != nil && !IsNil(o.PolicyName) {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *ApiCrossStageViolationDTOV2) SetPolicyName(v string) {
	o.PolicyName = &v
}

// GetPolicyOwner returns the PolicyOwner field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetPolicyOwner() PolicyOwner {
	if o == nil || IsNil(o.PolicyOwner) {
		var ret PolicyOwner
		return ret
	}
	return *o.PolicyOwner
}

// GetPolicyOwnerOk returns a tuple with the PolicyOwner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetPolicyOwnerOk() (*PolicyOwner, bool) {
	if o == nil || IsNil(o.PolicyOwner) {
		return nil, false
	}
	return o.PolicyOwner, true
}

// HasPolicyOwner returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasPolicyOwner() bool {
	if o != nil && !IsNil(o.PolicyOwner) {
		return true
	}

	return false
}

// SetPolicyOwner gets a reference to the given PolicyOwner and assigns it to the PolicyOwner field.
func (o *ApiCrossStageViolationDTOV2) SetPolicyOwner(v PolicyOwner) {
	o.PolicyOwner = &v
}

// GetPolicyThreatCategory returns the PolicyThreatCategory field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetPolicyThreatCategory() string {
	if o == nil || IsNil(o.PolicyThreatCategory) {
		var ret string
		return ret
	}
	return *o.PolicyThreatCategory
}

// GetPolicyThreatCategoryOk returns a tuple with the PolicyThreatCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetPolicyThreatCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyThreatCategory) {
		return nil, false
	}
	return o.PolicyThreatCategory, true
}

// HasPolicyThreatCategory returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasPolicyThreatCategory() bool {
	if o != nil && !IsNil(o.PolicyThreatCategory) {
		return true
	}

	return false
}

// SetPolicyThreatCategory gets a reference to the given string and assigns it to the PolicyThreatCategory field.
func (o *ApiCrossStageViolationDTOV2) SetPolicyThreatCategory(v string) {
	o.PolicyThreatCategory = &v
}

// GetPolicyViolationId returns the PolicyViolationId field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetPolicyViolationId() string {
	if o == nil || IsNil(o.PolicyViolationId) {
		var ret string
		return ret
	}
	return *o.PolicyViolationId
}

// GetPolicyViolationIdOk returns a tuple with the PolicyViolationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetPolicyViolationIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyViolationId) {
		return nil, false
	}
	return o.PolicyViolationId, true
}

// HasPolicyViolationId returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasPolicyViolationId() bool {
	if o != nil && !IsNil(o.PolicyViolationId) {
		return true
	}

	return false
}

// SetPolicyViolationId gets a reference to the given string and assigns it to the PolicyViolationId field.
func (o *ApiCrossStageViolationDTOV2) SetPolicyViolationId(v string) {
	o.PolicyViolationId = &v
}

// GetReachabilityStatus returns the ReachabilityStatus field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetReachabilityStatus() string {
	if o == nil || IsNil(o.ReachabilityStatus) {
		var ret string
		return ret
	}
	return *o.ReachabilityStatus
}

// GetReachabilityStatusOk returns a tuple with the ReachabilityStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetReachabilityStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ReachabilityStatus) {
		return nil, false
	}
	return o.ReachabilityStatus, true
}

// HasReachabilityStatus returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasReachabilityStatus() bool {
	if o != nil && !IsNil(o.ReachabilityStatus) {
		return true
	}

	return false
}

// SetReachabilityStatus gets a reference to the given string and assigns it to the ReachabilityStatus field.
func (o *ApiCrossStageViolationDTOV2) SetReachabilityStatus(v string) {
	o.ReachabilityStatus = &v
}

// GetStageData returns the StageData field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetStageData() map[string]StageData {
	if o == nil || IsNil(o.StageData) {
		var ret map[string]StageData
		return ret
	}
	return *o.StageData
}

// GetStageDataOk returns a tuple with the StageData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetStageDataOk() (*map[string]StageData, bool) {
	if o == nil || IsNil(o.StageData) {
		return nil, false
	}
	return o.StageData, true
}

// HasStageData returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasStageData() bool {
	if o != nil && !IsNil(o.StageData) {
		return true
	}

	return false
}

// SetStageData gets a reference to the given map[string]StageData and assigns it to the StageData field.
func (o *ApiCrossStageViolationDTOV2) SetStageData(v map[string]StageData) {
	o.StageData = &v
}

// GetThreatLevel returns the ThreatLevel field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetThreatLevel() int32 {
	if o == nil || IsNil(o.ThreatLevel) {
		var ret int32
		return ret
	}
	return *o.ThreatLevel
}

// GetThreatLevelOk returns a tuple with the ThreatLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetThreatLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.ThreatLevel) {
		return nil, false
	}
	return o.ThreatLevel, true
}

// HasThreatLevel returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasThreatLevel() bool {
	if o != nil && !IsNil(o.ThreatLevel) {
		return true
	}

	return false
}

// SetThreatLevel gets a reference to the given int32 and assigns it to the ThreatLevel field.
func (o *ApiCrossStageViolationDTOV2) SetThreatLevel(v int32) {
	o.ThreatLevel = &v
}

// GetWaiveTime returns the WaiveTime field value if set, zero value otherwise.
func (o *ApiCrossStageViolationDTOV2) GetWaiveTime() time.Time {
	if o == nil || IsNil(o.WaiveTime) {
		var ret time.Time
		return ret
	}
	return *o.WaiveTime
}

// GetWaiveTimeOk returns a tuple with the WaiveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCrossStageViolationDTOV2) GetWaiveTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.WaiveTime) {
		return nil, false
	}
	return o.WaiveTime, true
}

// HasWaiveTime returns a boolean if a field has been set.
func (o *ApiCrossStageViolationDTOV2) HasWaiveTime() bool {
	if o != nil && !IsNil(o.WaiveTime) {
		return true
	}

	return false
}

// SetWaiveTime gets a reference to the given time.Time and assigns it to the WaiveTime field.
func (o *ApiCrossStageViolationDTOV2) SetWaiveTime(v time.Time) {
	o.WaiveTime = &v
}

func (o ApiCrossStageViolationDTOV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCrossStageViolationDTOV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationName) {
		toSerialize["applicationName"] = o.ApplicationName
	}
	if !IsNil(o.ApplicationPublicId) {
		toSerialize["applicationPublicId"] = o.ApplicationPublicId
	}
	if !IsNil(o.ComponentIdentifier) {
		toSerialize["componentIdentifier"] = o.ComponentIdentifier
	}
	if !IsNil(o.ConstraintViolations) {
		toSerialize["constraintViolations"] = o.ConstraintViolations
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Filename) {
		toSerialize["filename"] = o.Filename
	}
	if !IsNil(o.FixTime) {
		toSerialize["fixTime"] = o.FixTime
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.LegacyViolationTime) {
		toSerialize["legacyViolationTime"] = o.LegacyViolationTime
	}
	if !IsNil(o.OpenTime) {
		toSerialize["openTime"] = o.OpenTime
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policyId"] = o.PolicyId
	}
	if !IsNil(o.PolicyName) {
		toSerialize["policyName"] = o.PolicyName
	}
	if !IsNil(o.PolicyOwner) {
		toSerialize["policyOwner"] = o.PolicyOwner
	}
	if !IsNil(o.PolicyThreatCategory) {
		toSerialize["policyThreatCategory"] = o.PolicyThreatCategory
	}
	if !IsNil(o.PolicyViolationId) {
		toSerialize["policyViolationId"] = o.PolicyViolationId
	}
	if !IsNil(o.ReachabilityStatus) {
		toSerialize["reachabilityStatus"] = o.ReachabilityStatus
	}
	if !IsNil(o.StageData) {
		toSerialize["stageData"] = o.StageData
	}
	if !IsNil(o.ThreatLevel) {
		toSerialize["threatLevel"] = o.ThreatLevel
	}
	if !IsNil(o.WaiveTime) {
		toSerialize["waiveTime"] = o.WaiveTime
	}
	return toSerialize, nil
}

type NullableApiCrossStageViolationDTOV2 struct {
	value *ApiCrossStageViolationDTOV2
	isSet bool
}

func (v NullableApiCrossStageViolationDTOV2) Get() *ApiCrossStageViolationDTOV2 {
	return v.value
}

func (v *NullableApiCrossStageViolationDTOV2) Set(val *ApiCrossStageViolationDTOV2) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCrossStageViolationDTOV2) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCrossStageViolationDTOV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCrossStageViolationDTOV2(val *ApiCrossStageViolationDTOV2) *NullableApiCrossStageViolationDTOV2 {
	return &NullableApiCrossStageViolationDTOV2{value: val, isSet: true}
}

func (v NullableApiCrossStageViolationDTOV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCrossStageViolationDTOV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


