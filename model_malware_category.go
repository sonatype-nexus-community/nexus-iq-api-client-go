/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.196.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the MalwareCategory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MalwareCategory{}

// MalwareCategory struct for MalwareCategory
type MalwareCategory struct {
	AttackVector *string `json:"attackVector,omitempty"`
	ThreatTypes []string `json:"threatTypes,omitempty"`
}

// NewMalwareCategory instantiates a new MalwareCategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMalwareCategory() *MalwareCategory {
	this := MalwareCategory{}
	return &this
}

// NewMalwareCategoryWithDefaults instantiates a new MalwareCategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMalwareCategoryWithDefaults() *MalwareCategory {
	this := MalwareCategory{}
	return &this
}

// GetAttackVector returns the AttackVector field value if set, zero value otherwise.
func (o *MalwareCategory) GetAttackVector() string {
	if o == nil || IsNil(o.AttackVector) {
		var ret string
		return ret
	}
	return *o.AttackVector
}

// GetAttackVectorOk returns a tuple with the AttackVector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MalwareCategory) GetAttackVectorOk() (*string, bool) {
	if o == nil || IsNil(o.AttackVector) {
		return nil, false
	}
	return o.AttackVector, true
}

// HasAttackVector returns a boolean if a field has been set.
func (o *MalwareCategory) HasAttackVector() bool {
	if o != nil && !IsNil(o.AttackVector) {
		return true
	}

	return false
}

// SetAttackVector gets a reference to the given string and assigns it to the AttackVector field.
func (o *MalwareCategory) SetAttackVector(v string) {
	o.AttackVector = &v
}

// GetThreatTypes returns the ThreatTypes field value if set, zero value otherwise.
func (o *MalwareCategory) GetThreatTypes() []string {
	if o == nil || IsNil(o.ThreatTypes) {
		var ret []string
		return ret
	}
	return o.ThreatTypes
}

// GetThreatTypesOk returns a tuple with the ThreatTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MalwareCategory) GetThreatTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.ThreatTypes) {
		return nil, false
	}
	return o.ThreatTypes, true
}

// HasThreatTypes returns a boolean if a field has been set.
func (o *MalwareCategory) HasThreatTypes() bool {
	if o != nil && !IsNil(o.ThreatTypes) {
		return true
	}

	return false
}

// SetThreatTypes gets a reference to the given []string and assigns it to the ThreatTypes field.
func (o *MalwareCategory) SetThreatTypes(v []string) {
	o.ThreatTypes = v
}

func (o MalwareCategory) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MalwareCategory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AttackVector) {
		toSerialize["attackVector"] = o.AttackVector
	}
	if !IsNil(o.ThreatTypes) {
		toSerialize["threatTypes"] = o.ThreatTypes
	}
	return toSerialize, nil
}

type NullableMalwareCategory struct {
	value *MalwareCategory
	isSet bool
}

func (v NullableMalwareCategory) Get() *MalwareCategory {
	return v.value
}

func (v *NullableMalwareCategory) Set(val *MalwareCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableMalwareCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableMalwareCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMalwareCategory(val *MalwareCategory) *NullableMalwareCategory {
	return &NullableMalwareCategory{value: val, isSet: true}
}

func (v NullableMalwareCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMalwareCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


