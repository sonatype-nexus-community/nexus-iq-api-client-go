/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.192.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the MalwareDefenseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MalwareDefenseData{}

// MalwareDefenseData struct for MalwareDefenseData
type MalwareDefenseData struct {
	Hash *string `json:"hash,omitempty"`
	IsMalicious *bool `json:"isMalicious,omitempty"`
	MalwareCategories []MalwareCategory `json:"malwareCategories,omitempty"`
	MatchState *string `json:"matchState,omitempty"`
	PackageUrl *string `json:"packageUrl,omitempty"`
}

// NewMalwareDefenseData instantiates a new MalwareDefenseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMalwareDefenseData() *MalwareDefenseData {
	this := MalwareDefenseData{}
	return &this
}

// NewMalwareDefenseDataWithDefaults instantiates a new MalwareDefenseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMalwareDefenseDataWithDefaults() *MalwareDefenseData {
	this := MalwareDefenseData{}
	return &this
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *MalwareDefenseData) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MalwareDefenseData) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *MalwareDefenseData) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *MalwareDefenseData) SetHash(v string) {
	o.Hash = &v
}

// GetIsMalicious returns the IsMalicious field value if set, zero value otherwise.
func (o *MalwareDefenseData) GetIsMalicious() bool {
	if o == nil || IsNil(o.IsMalicious) {
		var ret bool
		return ret
	}
	return *o.IsMalicious
}

// GetIsMaliciousOk returns a tuple with the IsMalicious field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MalwareDefenseData) GetIsMaliciousOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMalicious) {
		return nil, false
	}
	return o.IsMalicious, true
}

// HasIsMalicious returns a boolean if a field has been set.
func (o *MalwareDefenseData) HasIsMalicious() bool {
	if o != nil && !IsNil(o.IsMalicious) {
		return true
	}

	return false
}

// SetIsMalicious gets a reference to the given bool and assigns it to the IsMalicious field.
func (o *MalwareDefenseData) SetIsMalicious(v bool) {
	o.IsMalicious = &v
}

// GetMalwareCategories returns the MalwareCategories field value if set, zero value otherwise.
func (o *MalwareDefenseData) GetMalwareCategories() []MalwareCategory {
	if o == nil || IsNil(o.MalwareCategories) {
		var ret []MalwareCategory
		return ret
	}
	return o.MalwareCategories
}

// GetMalwareCategoriesOk returns a tuple with the MalwareCategories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MalwareDefenseData) GetMalwareCategoriesOk() ([]MalwareCategory, bool) {
	if o == nil || IsNil(o.MalwareCategories) {
		return nil, false
	}
	return o.MalwareCategories, true
}

// HasMalwareCategories returns a boolean if a field has been set.
func (o *MalwareDefenseData) HasMalwareCategories() bool {
	if o != nil && !IsNil(o.MalwareCategories) {
		return true
	}

	return false
}

// SetMalwareCategories gets a reference to the given []MalwareCategory and assigns it to the MalwareCategories field.
func (o *MalwareDefenseData) SetMalwareCategories(v []MalwareCategory) {
	o.MalwareCategories = v
}

// GetMatchState returns the MatchState field value if set, zero value otherwise.
func (o *MalwareDefenseData) GetMatchState() string {
	if o == nil || IsNil(o.MatchState) {
		var ret string
		return ret
	}
	return *o.MatchState
}

// GetMatchStateOk returns a tuple with the MatchState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MalwareDefenseData) GetMatchStateOk() (*string, bool) {
	if o == nil || IsNil(o.MatchState) {
		return nil, false
	}
	return o.MatchState, true
}

// HasMatchState returns a boolean if a field has been set.
func (o *MalwareDefenseData) HasMatchState() bool {
	if o != nil && !IsNil(o.MatchState) {
		return true
	}

	return false
}

// SetMatchState gets a reference to the given string and assigns it to the MatchState field.
func (o *MalwareDefenseData) SetMatchState(v string) {
	o.MatchState = &v
}

// GetPackageUrl returns the PackageUrl field value if set, zero value otherwise.
func (o *MalwareDefenseData) GetPackageUrl() string {
	if o == nil || IsNil(o.PackageUrl) {
		var ret string
		return ret
	}
	return *o.PackageUrl
}

// GetPackageUrlOk returns a tuple with the PackageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MalwareDefenseData) GetPackageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PackageUrl) {
		return nil, false
	}
	return o.PackageUrl, true
}

// HasPackageUrl returns a boolean if a field has been set.
func (o *MalwareDefenseData) HasPackageUrl() bool {
	if o != nil && !IsNil(o.PackageUrl) {
		return true
	}

	return false
}

// SetPackageUrl gets a reference to the given string and assigns it to the PackageUrl field.
func (o *MalwareDefenseData) SetPackageUrl(v string) {
	o.PackageUrl = &v
}

func (o MalwareDefenseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MalwareDefenseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.IsMalicious) {
		toSerialize["isMalicious"] = o.IsMalicious
	}
	if !IsNil(o.MalwareCategories) {
		toSerialize["malwareCategories"] = o.MalwareCategories
	}
	if !IsNil(o.MatchState) {
		toSerialize["matchState"] = o.MatchState
	}
	if !IsNil(o.PackageUrl) {
		toSerialize["packageUrl"] = o.PackageUrl
	}
	return toSerialize, nil
}

type NullableMalwareDefenseData struct {
	value *MalwareDefenseData
	isSet bool
}

func (v NullableMalwareDefenseData) Get() *MalwareDefenseData {
	return v.value
}

func (v *NullableMalwareDefenseData) Set(val *MalwareDefenseData) {
	v.value = val
	v.isSet = true
}

func (v NullableMalwareDefenseData) IsSet() bool {
	return v.isSet
}

func (v *NullableMalwareDefenseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMalwareDefenseData(val *MalwareDefenseData) *NullableMalwareDefenseData {
	return &NullableMalwareDefenseData{value: val, isSet: true}
}

func (v NullableMalwareDefenseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMalwareDefenseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


