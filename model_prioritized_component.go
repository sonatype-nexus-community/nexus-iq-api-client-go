/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.192.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the PrioritizedComponent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrioritizedComponent{}

// PrioritizedComponent struct for PrioritizedComponent
type PrioritizedComponent struct {
	Action *string `json:"action,omitempty"`
	ComponentHash *string `json:"componentHash,omitempty"`
	ComponentIdentifier *ComponentIdentifier `json:"componentIdentifier,omitempty"`
	DependencyType *string `json:"dependencyType,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	HasAutoWaiver *bool `json:"hasAutoWaiver,omitempty"`
	HasExpiredWaiver *bool `json:"hasExpiredWaiver,omitempty"`
	HasFailActionOnComponent *bool `json:"hasFailActionOnComponent,omitempty"`
	HasSameViolationsOnMain *bool `json:"hasSameViolationsOnMain,omitempty"`
	HasSoonToExpireWaiver *bool `json:"hasSoonToExpireWaiver,omitempty"`
	HighestReachableThreat *int32 `json:"highestReachableThreat,omitempty"`
	HighestThreat *int32 `json:"highestThreat,omitempty"`
	HighestThreatPolicyConstraintName *string `json:"highestThreatPolicyConstraintName,omitempty"`
	HighestThreatPolicyName *string `json:"highestThreatPolicyName,omitempty"`
	IsAllViolationsWaived *bool `json:"isAllViolationsWaived,omitempty"`
	Priority *int32 `json:"priority,omitempty"`
	RemediationType *string `json:"remediationType,omitempty"`
	RemediationVersion *string `json:"remediationVersion,omitempty"`
	SecurityReachable *bool `json:"securityReachable,omitempty"`
	WaivedViolationsCount *int32 `json:"waivedViolationsCount,omitempty"`
	WaiverExpirationDetails *string `json:"waiverExpirationDetails,omitempty"`
}

// NewPrioritizedComponent instantiates a new PrioritizedComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrioritizedComponent() *PrioritizedComponent {
	this := PrioritizedComponent{}
	return &this
}

// NewPrioritizedComponentWithDefaults instantiates a new PrioritizedComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrioritizedComponentWithDefaults() *PrioritizedComponent {
	this := PrioritizedComponent{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *PrioritizedComponent) SetAction(v string) {
	o.Action = &v
}

// GetComponentHash returns the ComponentHash field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetComponentHash() string {
	if o == nil || IsNil(o.ComponentHash) {
		var ret string
		return ret
	}
	return *o.ComponentHash
}

// GetComponentHashOk returns a tuple with the ComponentHash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetComponentHashOk() (*string, bool) {
	if o == nil || IsNil(o.ComponentHash) {
		return nil, false
	}
	return o.ComponentHash, true
}

// HasComponentHash returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasComponentHash() bool {
	if o != nil && !IsNil(o.ComponentHash) {
		return true
	}

	return false
}

// SetComponentHash gets a reference to the given string and assigns it to the ComponentHash field.
func (o *PrioritizedComponent) SetComponentHash(v string) {
	o.ComponentHash = &v
}

// GetComponentIdentifier returns the ComponentIdentifier field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetComponentIdentifier() ComponentIdentifier {
	if o == nil || IsNil(o.ComponentIdentifier) {
		var ret ComponentIdentifier
		return ret
	}
	return *o.ComponentIdentifier
}

// GetComponentIdentifierOk returns a tuple with the ComponentIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetComponentIdentifierOk() (*ComponentIdentifier, bool) {
	if o == nil || IsNil(o.ComponentIdentifier) {
		return nil, false
	}
	return o.ComponentIdentifier, true
}

// HasComponentIdentifier returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasComponentIdentifier() bool {
	if o != nil && !IsNil(o.ComponentIdentifier) {
		return true
	}

	return false
}

// SetComponentIdentifier gets a reference to the given ComponentIdentifier and assigns it to the ComponentIdentifier field.
func (o *PrioritizedComponent) SetComponentIdentifier(v ComponentIdentifier) {
	o.ComponentIdentifier = &v
}

// GetDependencyType returns the DependencyType field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetDependencyType() string {
	if o == nil || IsNil(o.DependencyType) {
		var ret string
		return ret
	}
	return *o.DependencyType
}

// GetDependencyTypeOk returns a tuple with the DependencyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetDependencyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DependencyType) {
		return nil, false
	}
	return o.DependencyType, true
}

// HasDependencyType returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasDependencyType() bool {
	if o != nil && !IsNil(o.DependencyType) {
		return true
	}

	return false
}

// SetDependencyType gets a reference to the given string and assigns it to the DependencyType field.
func (o *PrioritizedComponent) SetDependencyType(v string) {
	o.DependencyType = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *PrioritizedComponent) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetHasAutoWaiver returns the HasAutoWaiver field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetHasAutoWaiver() bool {
	if o == nil || IsNil(o.HasAutoWaiver) {
		var ret bool
		return ret
	}
	return *o.HasAutoWaiver
}

// GetHasAutoWaiverOk returns a tuple with the HasAutoWaiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetHasAutoWaiverOk() (*bool, bool) {
	if o == nil || IsNil(o.HasAutoWaiver) {
		return nil, false
	}
	return o.HasAutoWaiver, true
}

// HasHasAutoWaiver returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasHasAutoWaiver() bool {
	if o != nil && !IsNil(o.HasAutoWaiver) {
		return true
	}

	return false
}

// SetHasAutoWaiver gets a reference to the given bool and assigns it to the HasAutoWaiver field.
func (o *PrioritizedComponent) SetHasAutoWaiver(v bool) {
	o.HasAutoWaiver = &v
}

// GetHasExpiredWaiver returns the HasExpiredWaiver field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetHasExpiredWaiver() bool {
	if o == nil || IsNil(o.HasExpiredWaiver) {
		var ret bool
		return ret
	}
	return *o.HasExpiredWaiver
}

// GetHasExpiredWaiverOk returns a tuple with the HasExpiredWaiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetHasExpiredWaiverOk() (*bool, bool) {
	if o == nil || IsNil(o.HasExpiredWaiver) {
		return nil, false
	}
	return o.HasExpiredWaiver, true
}

// HasHasExpiredWaiver returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasHasExpiredWaiver() bool {
	if o != nil && !IsNil(o.HasExpiredWaiver) {
		return true
	}

	return false
}

// SetHasExpiredWaiver gets a reference to the given bool and assigns it to the HasExpiredWaiver field.
func (o *PrioritizedComponent) SetHasExpiredWaiver(v bool) {
	o.HasExpiredWaiver = &v
}

// GetHasFailActionOnComponent returns the HasFailActionOnComponent field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetHasFailActionOnComponent() bool {
	if o == nil || IsNil(o.HasFailActionOnComponent) {
		var ret bool
		return ret
	}
	return *o.HasFailActionOnComponent
}

// GetHasFailActionOnComponentOk returns a tuple with the HasFailActionOnComponent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetHasFailActionOnComponentOk() (*bool, bool) {
	if o == nil || IsNil(o.HasFailActionOnComponent) {
		return nil, false
	}
	return o.HasFailActionOnComponent, true
}

// HasHasFailActionOnComponent returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasHasFailActionOnComponent() bool {
	if o != nil && !IsNil(o.HasFailActionOnComponent) {
		return true
	}

	return false
}

// SetHasFailActionOnComponent gets a reference to the given bool and assigns it to the HasFailActionOnComponent field.
func (o *PrioritizedComponent) SetHasFailActionOnComponent(v bool) {
	o.HasFailActionOnComponent = &v
}

// GetHasSameViolationsOnMain returns the HasSameViolationsOnMain field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetHasSameViolationsOnMain() bool {
	if o == nil || IsNil(o.HasSameViolationsOnMain) {
		var ret bool
		return ret
	}
	return *o.HasSameViolationsOnMain
}

// GetHasSameViolationsOnMainOk returns a tuple with the HasSameViolationsOnMain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetHasSameViolationsOnMainOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSameViolationsOnMain) {
		return nil, false
	}
	return o.HasSameViolationsOnMain, true
}

// HasHasSameViolationsOnMain returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasHasSameViolationsOnMain() bool {
	if o != nil && !IsNil(o.HasSameViolationsOnMain) {
		return true
	}

	return false
}

// SetHasSameViolationsOnMain gets a reference to the given bool and assigns it to the HasSameViolationsOnMain field.
func (o *PrioritizedComponent) SetHasSameViolationsOnMain(v bool) {
	o.HasSameViolationsOnMain = &v
}

// GetHasSoonToExpireWaiver returns the HasSoonToExpireWaiver field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetHasSoonToExpireWaiver() bool {
	if o == nil || IsNil(o.HasSoonToExpireWaiver) {
		var ret bool
		return ret
	}
	return *o.HasSoonToExpireWaiver
}

// GetHasSoonToExpireWaiverOk returns a tuple with the HasSoonToExpireWaiver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetHasSoonToExpireWaiverOk() (*bool, bool) {
	if o == nil || IsNil(o.HasSoonToExpireWaiver) {
		return nil, false
	}
	return o.HasSoonToExpireWaiver, true
}

// HasHasSoonToExpireWaiver returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasHasSoonToExpireWaiver() bool {
	if o != nil && !IsNil(o.HasSoonToExpireWaiver) {
		return true
	}

	return false
}

// SetHasSoonToExpireWaiver gets a reference to the given bool and assigns it to the HasSoonToExpireWaiver field.
func (o *PrioritizedComponent) SetHasSoonToExpireWaiver(v bool) {
	o.HasSoonToExpireWaiver = &v
}

// GetHighestReachableThreat returns the HighestReachableThreat field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetHighestReachableThreat() int32 {
	if o == nil || IsNil(o.HighestReachableThreat) {
		var ret int32
		return ret
	}
	return *o.HighestReachableThreat
}

// GetHighestReachableThreatOk returns a tuple with the HighestReachableThreat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetHighestReachableThreatOk() (*int32, bool) {
	if o == nil || IsNil(o.HighestReachableThreat) {
		return nil, false
	}
	return o.HighestReachableThreat, true
}

// HasHighestReachableThreat returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasHighestReachableThreat() bool {
	if o != nil && !IsNil(o.HighestReachableThreat) {
		return true
	}

	return false
}

// SetHighestReachableThreat gets a reference to the given int32 and assigns it to the HighestReachableThreat field.
func (o *PrioritizedComponent) SetHighestReachableThreat(v int32) {
	o.HighestReachableThreat = &v
}

// GetHighestThreat returns the HighestThreat field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetHighestThreat() int32 {
	if o == nil || IsNil(o.HighestThreat) {
		var ret int32
		return ret
	}
	return *o.HighestThreat
}

// GetHighestThreatOk returns a tuple with the HighestThreat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetHighestThreatOk() (*int32, bool) {
	if o == nil || IsNil(o.HighestThreat) {
		return nil, false
	}
	return o.HighestThreat, true
}

// HasHighestThreat returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasHighestThreat() bool {
	if o != nil && !IsNil(o.HighestThreat) {
		return true
	}

	return false
}

// SetHighestThreat gets a reference to the given int32 and assigns it to the HighestThreat field.
func (o *PrioritizedComponent) SetHighestThreat(v int32) {
	o.HighestThreat = &v
}

// GetHighestThreatPolicyConstraintName returns the HighestThreatPolicyConstraintName field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetHighestThreatPolicyConstraintName() string {
	if o == nil || IsNil(o.HighestThreatPolicyConstraintName) {
		var ret string
		return ret
	}
	return *o.HighestThreatPolicyConstraintName
}

// GetHighestThreatPolicyConstraintNameOk returns a tuple with the HighestThreatPolicyConstraintName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetHighestThreatPolicyConstraintNameOk() (*string, bool) {
	if o == nil || IsNil(o.HighestThreatPolicyConstraintName) {
		return nil, false
	}
	return o.HighestThreatPolicyConstraintName, true
}

// HasHighestThreatPolicyConstraintName returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasHighestThreatPolicyConstraintName() bool {
	if o != nil && !IsNil(o.HighestThreatPolicyConstraintName) {
		return true
	}

	return false
}

// SetHighestThreatPolicyConstraintName gets a reference to the given string and assigns it to the HighestThreatPolicyConstraintName field.
func (o *PrioritizedComponent) SetHighestThreatPolicyConstraintName(v string) {
	o.HighestThreatPolicyConstraintName = &v
}

// GetHighestThreatPolicyName returns the HighestThreatPolicyName field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetHighestThreatPolicyName() string {
	if o == nil || IsNil(o.HighestThreatPolicyName) {
		var ret string
		return ret
	}
	return *o.HighestThreatPolicyName
}

// GetHighestThreatPolicyNameOk returns a tuple with the HighestThreatPolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetHighestThreatPolicyNameOk() (*string, bool) {
	if o == nil || IsNil(o.HighestThreatPolicyName) {
		return nil, false
	}
	return o.HighestThreatPolicyName, true
}

// HasHighestThreatPolicyName returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasHighestThreatPolicyName() bool {
	if o != nil && !IsNil(o.HighestThreatPolicyName) {
		return true
	}

	return false
}

// SetHighestThreatPolicyName gets a reference to the given string and assigns it to the HighestThreatPolicyName field.
func (o *PrioritizedComponent) SetHighestThreatPolicyName(v string) {
	o.HighestThreatPolicyName = &v
}

// GetIsAllViolationsWaived returns the IsAllViolationsWaived field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetIsAllViolationsWaived() bool {
	if o == nil || IsNil(o.IsAllViolationsWaived) {
		var ret bool
		return ret
	}
	return *o.IsAllViolationsWaived
}

// GetIsAllViolationsWaivedOk returns a tuple with the IsAllViolationsWaived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetIsAllViolationsWaivedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAllViolationsWaived) {
		return nil, false
	}
	return o.IsAllViolationsWaived, true
}

// HasIsAllViolationsWaived returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasIsAllViolationsWaived() bool {
	if o != nil && !IsNil(o.IsAllViolationsWaived) {
		return true
	}

	return false
}

// SetIsAllViolationsWaived gets a reference to the given bool and assigns it to the IsAllViolationsWaived field.
func (o *PrioritizedComponent) SetIsAllViolationsWaived(v bool) {
	o.IsAllViolationsWaived = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *PrioritizedComponent) SetPriority(v int32) {
	o.Priority = &v
}

// GetRemediationType returns the RemediationType field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetRemediationType() string {
	if o == nil || IsNil(o.RemediationType) {
		var ret string
		return ret
	}
	return *o.RemediationType
}

// GetRemediationTypeOk returns a tuple with the RemediationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetRemediationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RemediationType) {
		return nil, false
	}
	return o.RemediationType, true
}

// HasRemediationType returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasRemediationType() bool {
	if o != nil && !IsNil(o.RemediationType) {
		return true
	}

	return false
}

// SetRemediationType gets a reference to the given string and assigns it to the RemediationType field.
func (o *PrioritizedComponent) SetRemediationType(v string) {
	o.RemediationType = &v
}

// GetRemediationVersion returns the RemediationVersion field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetRemediationVersion() string {
	if o == nil || IsNil(o.RemediationVersion) {
		var ret string
		return ret
	}
	return *o.RemediationVersion
}

// GetRemediationVersionOk returns a tuple with the RemediationVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetRemediationVersionOk() (*string, bool) {
	if o == nil || IsNil(o.RemediationVersion) {
		return nil, false
	}
	return o.RemediationVersion, true
}

// HasRemediationVersion returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasRemediationVersion() bool {
	if o != nil && !IsNil(o.RemediationVersion) {
		return true
	}

	return false
}

// SetRemediationVersion gets a reference to the given string and assigns it to the RemediationVersion field.
func (o *PrioritizedComponent) SetRemediationVersion(v string) {
	o.RemediationVersion = &v
}

// GetSecurityReachable returns the SecurityReachable field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetSecurityReachable() bool {
	if o == nil || IsNil(o.SecurityReachable) {
		var ret bool
		return ret
	}
	return *o.SecurityReachable
}

// GetSecurityReachableOk returns a tuple with the SecurityReachable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetSecurityReachableOk() (*bool, bool) {
	if o == nil || IsNil(o.SecurityReachable) {
		return nil, false
	}
	return o.SecurityReachable, true
}

// HasSecurityReachable returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasSecurityReachable() bool {
	if o != nil && !IsNil(o.SecurityReachable) {
		return true
	}

	return false
}

// SetSecurityReachable gets a reference to the given bool and assigns it to the SecurityReachable field.
func (o *PrioritizedComponent) SetSecurityReachable(v bool) {
	o.SecurityReachable = &v
}

// GetWaivedViolationsCount returns the WaivedViolationsCount field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetWaivedViolationsCount() int32 {
	if o == nil || IsNil(o.WaivedViolationsCount) {
		var ret int32
		return ret
	}
	return *o.WaivedViolationsCount
}

// GetWaivedViolationsCountOk returns a tuple with the WaivedViolationsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetWaivedViolationsCountOk() (*int32, bool) {
	if o == nil || IsNil(o.WaivedViolationsCount) {
		return nil, false
	}
	return o.WaivedViolationsCount, true
}

// HasWaivedViolationsCount returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasWaivedViolationsCount() bool {
	if o != nil && !IsNil(o.WaivedViolationsCount) {
		return true
	}

	return false
}

// SetWaivedViolationsCount gets a reference to the given int32 and assigns it to the WaivedViolationsCount field.
func (o *PrioritizedComponent) SetWaivedViolationsCount(v int32) {
	o.WaivedViolationsCount = &v
}

// GetWaiverExpirationDetails returns the WaiverExpirationDetails field value if set, zero value otherwise.
func (o *PrioritizedComponent) GetWaiverExpirationDetails() string {
	if o == nil || IsNil(o.WaiverExpirationDetails) {
		var ret string
		return ret
	}
	return *o.WaiverExpirationDetails
}

// GetWaiverExpirationDetailsOk returns a tuple with the WaiverExpirationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrioritizedComponent) GetWaiverExpirationDetailsOk() (*string, bool) {
	if o == nil || IsNil(o.WaiverExpirationDetails) {
		return nil, false
	}
	return o.WaiverExpirationDetails, true
}

// HasWaiverExpirationDetails returns a boolean if a field has been set.
func (o *PrioritizedComponent) HasWaiverExpirationDetails() bool {
	if o != nil && !IsNil(o.WaiverExpirationDetails) {
		return true
	}

	return false
}

// SetWaiverExpirationDetails gets a reference to the given string and assigns it to the WaiverExpirationDetails field.
func (o *PrioritizedComponent) SetWaiverExpirationDetails(v string) {
	o.WaiverExpirationDetails = &v
}

func (o PrioritizedComponent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrioritizedComponent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.ComponentHash) {
		toSerialize["componentHash"] = o.ComponentHash
	}
	if !IsNil(o.ComponentIdentifier) {
		toSerialize["componentIdentifier"] = o.ComponentIdentifier
	}
	if !IsNil(o.DependencyType) {
		toSerialize["dependencyType"] = o.DependencyType
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.HasAutoWaiver) {
		toSerialize["hasAutoWaiver"] = o.HasAutoWaiver
	}
	if !IsNil(o.HasExpiredWaiver) {
		toSerialize["hasExpiredWaiver"] = o.HasExpiredWaiver
	}
	if !IsNil(o.HasFailActionOnComponent) {
		toSerialize["hasFailActionOnComponent"] = o.HasFailActionOnComponent
	}
	if !IsNil(o.HasSameViolationsOnMain) {
		toSerialize["hasSameViolationsOnMain"] = o.HasSameViolationsOnMain
	}
	if !IsNil(o.HasSoonToExpireWaiver) {
		toSerialize["hasSoonToExpireWaiver"] = o.HasSoonToExpireWaiver
	}
	if !IsNil(o.HighestReachableThreat) {
		toSerialize["highestReachableThreat"] = o.HighestReachableThreat
	}
	if !IsNil(o.HighestThreat) {
		toSerialize["highestThreat"] = o.HighestThreat
	}
	if !IsNil(o.HighestThreatPolicyConstraintName) {
		toSerialize["highestThreatPolicyConstraintName"] = o.HighestThreatPolicyConstraintName
	}
	if !IsNil(o.HighestThreatPolicyName) {
		toSerialize["highestThreatPolicyName"] = o.HighestThreatPolicyName
	}
	if !IsNil(o.IsAllViolationsWaived) {
		toSerialize["isAllViolationsWaived"] = o.IsAllViolationsWaived
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.RemediationType) {
		toSerialize["remediationType"] = o.RemediationType
	}
	if !IsNil(o.RemediationVersion) {
		toSerialize["remediationVersion"] = o.RemediationVersion
	}
	if !IsNil(o.SecurityReachable) {
		toSerialize["securityReachable"] = o.SecurityReachable
	}
	if !IsNil(o.WaivedViolationsCount) {
		toSerialize["waivedViolationsCount"] = o.WaivedViolationsCount
	}
	if !IsNil(o.WaiverExpirationDetails) {
		toSerialize["waiverExpirationDetails"] = o.WaiverExpirationDetails
	}
	return toSerialize, nil
}

type NullablePrioritizedComponent struct {
	value *PrioritizedComponent
	isSet bool
}

func (v NullablePrioritizedComponent) Get() *PrioritizedComponent {
	return v.value
}

func (v *NullablePrioritizedComponent) Set(val *PrioritizedComponent) {
	v.value = val
	v.isSet = true
}

func (v NullablePrioritizedComponent) IsSet() bool {
	return v.isSet
}

func (v *NullablePrioritizedComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrioritizedComponent(val *PrioritizedComponent) *NullablePrioritizedComponent {
	return &NullablePrioritizedComponent{value: val, isSet: true}
}

func (v NullablePrioritizedComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrioritizedComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


