/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.196.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the EpssData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EpssData{}

// EpssData struct for EpssData
type EpssData struct {
	CurrentScore *float64 `json:"currentScore,omitempty"`
}

// NewEpssData instantiates a new EpssData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEpssData() *EpssData {
	this := EpssData{}
	return &this
}

// NewEpssDataWithDefaults instantiates a new EpssData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEpssDataWithDefaults() *EpssData {
	this := EpssData{}
	return &this
}

// GetCurrentScore returns the CurrentScore field value if set, zero value otherwise.
func (o *EpssData) GetCurrentScore() float64 {
	if o == nil || IsNil(o.CurrentScore) {
		var ret float64
		return ret
	}
	return *o.CurrentScore
}

// GetCurrentScoreOk returns a tuple with the CurrentScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EpssData) GetCurrentScoreOk() (*float64, bool) {
	if o == nil || IsNil(o.CurrentScore) {
		return nil, false
	}
	return o.CurrentScore, true
}

// HasCurrentScore returns a boolean if a field has been set.
func (o *EpssData) HasCurrentScore() bool {
	if o != nil && !IsNil(o.CurrentScore) {
		return true
	}

	return false
}

// SetCurrentScore gets a reference to the given float64 and assigns it to the CurrentScore field.
func (o *EpssData) SetCurrentScore(v float64) {
	o.CurrentScore = &v
}

func (o EpssData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EpssData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CurrentScore) {
		toSerialize["currentScore"] = o.CurrentScore
	}
	return toSerialize, nil
}

type NullableEpssData struct {
	value *EpssData
	isSet bool
}

func (v NullableEpssData) Get() *EpssData {
	return v.value
}

func (v *NullableEpssData) Set(val *EpssData) {
	v.value = val
	v.isSet = true
}

func (v NullableEpssData) IsSet() bool {
	return v.isSet
}

func (v *NullableEpssData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEpssData(val *EpssData) *NullableEpssData {
	return &NullableEpssData{value: val, isSet: true}
}

func (v NullableEpssData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEpssData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


