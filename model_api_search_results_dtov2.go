/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.184.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiSearchResultsDTOV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiSearchResultsDTOV2{}

// ApiSearchResultsDTOV2 struct for ApiSearchResultsDTOV2
type ApiSearchResultsDTOV2 struct {
	Criteria *ApiSearchCriteriaDTOV2 `json:"criteria,omitempty"`
	Results []ApiSearchResultDTOV2 `json:"results,omitempty"`
}

// NewApiSearchResultsDTOV2 instantiates a new ApiSearchResultsDTOV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiSearchResultsDTOV2() *ApiSearchResultsDTOV2 {
	this := ApiSearchResultsDTOV2{}
	return &this
}

// NewApiSearchResultsDTOV2WithDefaults instantiates a new ApiSearchResultsDTOV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiSearchResultsDTOV2WithDefaults() *ApiSearchResultsDTOV2 {
	this := ApiSearchResultsDTOV2{}
	return &this
}

// GetCriteria returns the Criteria field value if set, zero value otherwise.
func (o *ApiSearchResultsDTOV2) GetCriteria() ApiSearchCriteriaDTOV2 {
	if o == nil || IsNil(o.Criteria) {
		var ret ApiSearchCriteriaDTOV2
		return ret
	}
	return *o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSearchResultsDTOV2) GetCriteriaOk() (*ApiSearchCriteriaDTOV2, bool) {
	if o == nil || IsNil(o.Criteria) {
		return nil, false
	}
	return o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *ApiSearchResultsDTOV2) HasCriteria() bool {
	if o != nil && !IsNil(o.Criteria) {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given ApiSearchCriteriaDTOV2 and assigns it to the Criteria field.
func (o *ApiSearchResultsDTOV2) SetCriteria(v ApiSearchCriteriaDTOV2) {
	o.Criteria = &v
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *ApiSearchResultsDTOV2) GetResults() []ApiSearchResultDTOV2 {
	if o == nil || IsNil(o.Results) {
		var ret []ApiSearchResultDTOV2
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiSearchResultsDTOV2) GetResultsOk() ([]ApiSearchResultDTOV2, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *ApiSearchResultsDTOV2) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []ApiSearchResultDTOV2 and assigns it to the Results field.
func (o *ApiSearchResultsDTOV2) SetResults(v []ApiSearchResultDTOV2) {
	o.Results = v
}

func (o ApiSearchResultsDTOV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiSearchResultsDTOV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Criteria) {
		toSerialize["criteria"] = o.Criteria
	}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullableApiSearchResultsDTOV2 struct {
	value *ApiSearchResultsDTOV2
	isSet bool
}

func (v NullableApiSearchResultsDTOV2) Get() *ApiSearchResultsDTOV2 {
	return v.value
}

func (v *NullableApiSearchResultsDTOV2) Set(val *ApiSearchResultsDTOV2) {
	v.value = val
	v.isSet = true
}

func (v NullableApiSearchResultsDTOV2) IsSet() bool {
	return v.isSet
}

func (v *NullableApiSearchResultsDTOV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiSearchResultsDTOV2(val *ApiSearchResultsDTOV2) *NullableApiSearchResultsDTOV2 {
	return &NullableApiSearchResultsDTOV2{value: val, isSet: true}
}

func (v NullableApiSearchResultsDTOV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiSearchResultsDTOV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


