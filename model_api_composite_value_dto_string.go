/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.195.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiCompositeValueDTOString type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiCompositeValueDTOString{}

// ApiCompositeValueDTOString struct for ApiCompositeValueDTOString
type ApiCompositeValueDTOString struct {
	ParentName *string `json:"parentName,omitempty"`
	ParentValue *string `json:"parentValue,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewApiCompositeValueDTOString instantiates a new ApiCompositeValueDTOString object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiCompositeValueDTOString() *ApiCompositeValueDTOString {
	this := ApiCompositeValueDTOString{}
	return &this
}

// NewApiCompositeValueDTOStringWithDefaults instantiates a new ApiCompositeValueDTOString object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiCompositeValueDTOStringWithDefaults() *ApiCompositeValueDTOString {
	this := ApiCompositeValueDTOString{}
	return &this
}

// GetParentName returns the ParentName field value if set, zero value otherwise.
func (o *ApiCompositeValueDTOString) GetParentName() string {
	if o == nil || IsNil(o.ParentName) {
		var ret string
		return ret
	}
	return *o.ParentName
}

// GetParentNameOk returns a tuple with the ParentName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCompositeValueDTOString) GetParentNameOk() (*string, bool) {
	if o == nil || IsNil(o.ParentName) {
		return nil, false
	}
	return o.ParentName, true
}

// HasParentName returns a boolean if a field has been set.
func (o *ApiCompositeValueDTOString) HasParentName() bool {
	if o != nil && !IsNil(o.ParentName) {
		return true
	}

	return false
}

// SetParentName gets a reference to the given string and assigns it to the ParentName field.
func (o *ApiCompositeValueDTOString) SetParentName(v string) {
	o.ParentName = &v
}

// GetParentValue returns the ParentValue field value if set, zero value otherwise.
func (o *ApiCompositeValueDTOString) GetParentValue() string {
	if o == nil || IsNil(o.ParentValue) {
		var ret string
		return ret
	}
	return *o.ParentValue
}

// GetParentValueOk returns a tuple with the ParentValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCompositeValueDTOString) GetParentValueOk() (*string, bool) {
	if o == nil || IsNil(o.ParentValue) {
		return nil, false
	}
	return o.ParentValue, true
}

// HasParentValue returns a boolean if a field has been set.
func (o *ApiCompositeValueDTOString) HasParentValue() bool {
	if o != nil && !IsNil(o.ParentValue) {
		return true
	}

	return false
}

// SetParentValue gets a reference to the given string and assigns it to the ParentValue field.
func (o *ApiCompositeValueDTOString) SetParentValue(v string) {
	o.ParentValue = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ApiCompositeValueDTOString) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiCompositeValueDTOString) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ApiCompositeValueDTOString) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ApiCompositeValueDTOString) SetValue(v string) {
	o.Value = &v
}

func (o ApiCompositeValueDTOString) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiCompositeValueDTOString) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParentName) {
		toSerialize["parentName"] = o.ParentName
	}
	if !IsNil(o.ParentValue) {
		toSerialize["parentValue"] = o.ParentValue
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableApiCompositeValueDTOString struct {
	value *ApiCompositeValueDTOString
	isSet bool
}

func (v NullableApiCompositeValueDTOString) Get() *ApiCompositeValueDTOString {
	return v.value
}

func (v *NullableApiCompositeValueDTOString) Set(val *ApiCompositeValueDTOString) {
	v.value = val
	v.isSet = true
}

func (v NullableApiCompositeValueDTOString) IsSet() bool {
	return v.isSet
}

func (v *NullableApiCompositeValueDTOString) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiCompositeValueDTOString(val *ApiCompositeValueDTOString) *NullableApiCompositeValueDTOString {
	return &NullableApiCompositeValueDTOString{value: val, isSet: true}
}

func (v NullableApiCompositeValueDTOString) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiCompositeValueDTOString) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


