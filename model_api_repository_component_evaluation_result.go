/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.193.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
	"time"
)

// checks if the ApiRepositoryComponentEvaluationResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiRepositoryComponentEvaluationResult{}

// ApiRepositoryComponentEvaluationResult struct for ApiRepositoryComponentEvaluationResult
type ApiRepositoryComponentEvaluationResult struct {
	CatalogDate *time.Time `json:"catalogDate,omitempty"`
	Component *ApiRepositoryComponentEvaluationRequest `json:"component,omitempty"`
	PolicyViolations []ApiPolicyViolationDTOV2 `json:"policyViolations,omitempty"`
	QuarantineDate *time.Time `json:"quarantineDate,omitempty"`
	Quarantined *bool `json:"quarantined,omitempty"`
}

// NewApiRepositoryComponentEvaluationResult instantiates a new ApiRepositoryComponentEvaluationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiRepositoryComponentEvaluationResult() *ApiRepositoryComponentEvaluationResult {
	this := ApiRepositoryComponentEvaluationResult{}
	return &this
}

// NewApiRepositoryComponentEvaluationResultWithDefaults instantiates a new ApiRepositoryComponentEvaluationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiRepositoryComponentEvaluationResultWithDefaults() *ApiRepositoryComponentEvaluationResult {
	this := ApiRepositoryComponentEvaluationResult{}
	return &this
}

// GetCatalogDate returns the CatalogDate field value if set, zero value otherwise.
func (o *ApiRepositoryComponentEvaluationResult) GetCatalogDate() time.Time {
	if o == nil || IsNil(o.CatalogDate) {
		var ret time.Time
		return ret
	}
	return *o.CatalogDate
}

// GetCatalogDateOk returns a tuple with the CatalogDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRepositoryComponentEvaluationResult) GetCatalogDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CatalogDate) {
		return nil, false
	}
	return o.CatalogDate, true
}

// HasCatalogDate returns a boolean if a field has been set.
func (o *ApiRepositoryComponentEvaluationResult) HasCatalogDate() bool {
	if o != nil && !IsNil(o.CatalogDate) {
		return true
	}

	return false
}

// SetCatalogDate gets a reference to the given time.Time and assigns it to the CatalogDate field.
func (o *ApiRepositoryComponentEvaluationResult) SetCatalogDate(v time.Time) {
	o.CatalogDate = &v
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *ApiRepositoryComponentEvaluationResult) GetComponent() ApiRepositoryComponentEvaluationRequest {
	if o == nil || IsNil(o.Component) {
		var ret ApiRepositoryComponentEvaluationRequest
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRepositoryComponentEvaluationResult) GetComponentOk() (*ApiRepositoryComponentEvaluationRequest, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *ApiRepositoryComponentEvaluationResult) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given ApiRepositoryComponentEvaluationRequest and assigns it to the Component field.
func (o *ApiRepositoryComponentEvaluationResult) SetComponent(v ApiRepositoryComponentEvaluationRequest) {
	o.Component = &v
}

// GetPolicyViolations returns the PolicyViolations field value if set, zero value otherwise.
func (o *ApiRepositoryComponentEvaluationResult) GetPolicyViolations() []ApiPolicyViolationDTOV2 {
	if o == nil || IsNil(o.PolicyViolations) {
		var ret []ApiPolicyViolationDTOV2
		return ret
	}
	return o.PolicyViolations
}

// GetPolicyViolationsOk returns a tuple with the PolicyViolations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRepositoryComponentEvaluationResult) GetPolicyViolationsOk() ([]ApiPolicyViolationDTOV2, bool) {
	if o == nil || IsNil(o.PolicyViolations) {
		return nil, false
	}
	return o.PolicyViolations, true
}

// HasPolicyViolations returns a boolean if a field has been set.
func (o *ApiRepositoryComponentEvaluationResult) HasPolicyViolations() bool {
	if o != nil && !IsNil(o.PolicyViolations) {
		return true
	}

	return false
}

// SetPolicyViolations gets a reference to the given []ApiPolicyViolationDTOV2 and assigns it to the PolicyViolations field.
func (o *ApiRepositoryComponentEvaluationResult) SetPolicyViolations(v []ApiPolicyViolationDTOV2) {
	o.PolicyViolations = v
}

// GetQuarantineDate returns the QuarantineDate field value if set, zero value otherwise.
func (o *ApiRepositoryComponentEvaluationResult) GetQuarantineDate() time.Time {
	if o == nil || IsNil(o.QuarantineDate) {
		var ret time.Time
		return ret
	}
	return *o.QuarantineDate
}

// GetQuarantineDateOk returns a tuple with the QuarantineDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRepositoryComponentEvaluationResult) GetQuarantineDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.QuarantineDate) {
		return nil, false
	}
	return o.QuarantineDate, true
}

// HasQuarantineDate returns a boolean if a field has been set.
func (o *ApiRepositoryComponentEvaluationResult) HasQuarantineDate() bool {
	if o != nil && !IsNil(o.QuarantineDate) {
		return true
	}

	return false
}

// SetQuarantineDate gets a reference to the given time.Time and assigns it to the QuarantineDate field.
func (o *ApiRepositoryComponentEvaluationResult) SetQuarantineDate(v time.Time) {
	o.QuarantineDate = &v
}

// GetQuarantined returns the Quarantined field value if set, zero value otherwise.
func (o *ApiRepositoryComponentEvaluationResult) GetQuarantined() bool {
	if o == nil || IsNil(o.Quarantined) {
		var ret bool
		return ret
	}
	return *o.Quarantined
}

// GetQuarantinedOk returns a tuple with the Quarantined field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiRepositoryComponentEvaluationResult) GetQuarantinedOk() (*bool, bool) {
	if o == nil || IsNil(o.Quarantined) {
		return nil, false
	}
	return o.Quarantined, true
}

// HasQuarantined returns a boolean if a field has been set.
func (o *ApiRepositoryComponentEvaluationResult) HasQuarantined() bool {
	if o != nil && !IsNil(o.Quarantined) {
		return true
	}

	return false
}

// SetQuarantined gets a reference to the given bool and assigns it to the Quarantined field.
func (o *ApiRepositoryComponentEvaluationResult) SetQuarantined(v bool) {
	o.Quarantined = &v
}

func (o ApiRepositoryComponentEvaluationResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiRepositoryComponentEvaluationResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CatalogDate) {
		toSerialize["catalogDate"] = o.CatalogDate
	}
	if !IsNil(o.Component) {
		toSerialize["component"] = o.Component
	}
	if !IsNil(o.PolicyViolations) {
		toSerialize["policyViolations"] = o.PolicyViolations
	}
	if !IsNil(o.QuarantineDate) {
		toSerialize["quarantineDate"] = o.QuarantineDate
	}
	if !IsNil(o.Quarantined) {
		toSerialize["quarantined"] = o.Quarantined
	}
	return toSerialize, nil
}

type NullableApiRepositoryComponentEvaluationResult struct {
	value *ApiRepositoryComponentEvaluationResult
	isSet bool
}

func (v NullableApiRepositoryComponentEvaluationResult) Get() *ApiRepositoryComponentEvaluationResult {
	return v.value
}

func (v *NullableApiRepositoryComponentEvaluationResult) Set(val *ApiRepositoryComponentEvaluationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableApiRepositoryComponentEvaluationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableApiRepositoryComponentEvaluationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiRepositoryComponentEvaluationResult(val *ApiRepositoryComponentEvaluationResult) *NullableApiRepositoryComponentEvaluationResult {
	return &NullableApiRepositoryComponentEvaluationResult{value: val, isSet: true}
}

func (v NullableApiRepositoryComponentEvaluationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiRepositoryComponentEvaluationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


