/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.182.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the SbomComponentDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SbomComponentDTO{}

// SbomComponentDTO struct for SbomComponentDTO
type SbomComponentDTO struct {
	ComponentIdentifier *ComponentIdentifier `json:"componentIdentifier,omitempty"`
	DependencyType *string `json:"dependencyType,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	Hash *string `json:"hash,omitempty"`
	Licenses []License `json:"licenses,omitempty"`
	Name *string `json:"name,omitempty"`
	PackageUrl *string `json:"packageUrl,omitempty"`
	PercentageAnnotated *float64 `json:"percentageAnnotated,omitempty"`
	Version *string `json:"version,omitempty"`
	VulnerabilitySeverityCriticalCount *int32 `json:"vulnerabilitySeverityCriticalCount,omitempty"`
	VulnerabilitySeverityHighCount *int32 `json:"vulnerabilitySeverityHighCount,omitempty"`
	VulnerabilitySeverityLowCount *int32 `json:"vulnerabilitySeverityLowCount,omitempty"`
	VulnerabilitySeverityMediumCount *int32 `json:"vulnerabilitySeverityMediumCount,omitempty"`
	VulnerabilitySeverityNoneCount *int32 `json:"vulnerabilitySeverityNoneCount,omitempty"`
}

// NewSbomComponentDTO instantiates a new SbomComponentDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSbomComponentDTO() *SbomComponentDTO {
	this := SbomComponentDTO{}
	return &this
}

// NewSbomComponentDTOWithDefaults instantiates a new SbomComponentDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSbomComponentDTOWithDefaults() *SbomComponentDTO {
	this := SbomComponentDTO{}
	return &this
}

// GetComponentIdentifier returns the ComponentIdentifier field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetComponentIdentifier() ComponentIdentifier {
	if o == nil || IsNil(o.ComponentIdentifier) {
		var ret ComponentIdentifier
		return ret
	}
	return *o.ComponentIdentifier
}

// GetComponentIdentifierOk returns a tuple with the ComponentIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetComponentIdentifierOk() (*ComponentIdentifier, bool) {
	if o == nil || IsNil(o.ComponentIdentifier) {
		return nil, false
	}
	return o.ComponentIdentifier, true
}

// HasComponentIdentifier returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasComponentIdentifier() bool {
	if o != nil && !IsNil(o.ComponentIdentifier) {
		return true
	}

	return false
}

// SetComponentIdentifier gets a reference to the given ComponentIdentifier and assigns it to the ComponentIdentifier field.
func (o *SbomComponentDTO) SetComponentIdentifier(v ComponentIdentifier) {
	o.ComponentIdentifier = &v
}

// GetDependencyType returns the DependencyType field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetDependencyType() string {
	if o == nil || IsNil(o.DependencyType) {
		var ret string
		return ret
	}
	return *o.DependencyType
}

// GetDependencyTypeOk returns a tuple with the DependencyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetDependencyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.DependencyType) {
		return nil, false
	}
	return o.DependencyType, true
}

// HasDependencyType returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasDependencyType() bool {
	if o != nil && !IsNil(o.DependencyType) {
		return true
	}

	return false
}

// SetDependencyType gets a reference to the given string and assigns it to the DependencyType field.
func (o *SbomComponentDTO) SetDependencyType(v string) {
	o.DependencyType = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *SbomComponentDTO) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *SbomComponentDTO) SetHash(v string) {
	o.Hash = &v
}

// GetLicenses returns the Licenses field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetLicenses() []License {
	if o == nil || IsNil(o.Licenses) {
		var ret []License
		return ret
	}
	return o.Licenses
}

// GetLicensesOk returns a tuple with the Licenses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetLicensesOk() ([]License, bool) {
	if o == nil || IsNil(o.Licenses) {
		return nil, false
	}
	return o.Licenses, true
}

// HasLicenses returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasLicenses() bool {
	if o != nil && !IsNil(o.Licenses) {
		return true
	}

	return false
}

// SetLicenses gets a reference to the given []License and assigns it to the Licenses field.
func (o *SbomComponentDTO) SetLicenses(v []License) {
	o.Licenses = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SbomComponentDTO) SetName(v string) {
	o.Name = &v
}

// GetPackageUrl returns the PackageUrl field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetPackageUrl() string {
	if o == nil || IsNil(o.PackageUrl) {
		var ret string
		return ret
	}
	return *o.PackageUrl
}

// GetPackageUrlOk returns a tuple with the PackageUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetPackageUrlOk() (*string, bool) {
	if o == nil || IsNil(o.PackageUrl) {
		return nil, false
	}
	return o.PackageUrl, true
}

// HasPackageUrl returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasPackageUrl() bool {
	if o != nil && !IsNil(o.PackageUrl) {
		return true
	}

	return false
}

// SetPackageUrl gets a reference to the given string and assigns it to the PackageUrl field.
func (o *SbomComponentDTO) SetPackageUrl(v string) {
	o.PackageUrl = &v
}

// GetPercentageAnnotated returns the PercentageAnnotated field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetPercentageAnnotated() float64 {
	if o == nil || IsNil(o.PercentageAnnotated) {
		var ret float64
		return ret
	}
	return *o.PercentageAnnotated
}

// GetPercentageAnnotatedOk returns a tuple with the PercentageAnnotated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetPercentageAnnotatedOk() (*float64, bool) {
	if o == nil || IsNil(o.PercentageAnnotated) {
		return nil, false
	}
	return o.PercentageAnnotated, true
}

// HasPercentageAnnotated returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasPercentageAnnotated() bool {
	if o != nil && !IsNil(o.PercentageAnnotated) {
		return true
	}

	return false
}

// SetPercentageAnnotated gets a reference to the given float64 and assigns it to the PercentageAnnotated field.
func (o *SbomComponentDTO) SetPercentageAnnotated(v float64) {
	o.PercentageAnnotated = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *SbomComponentDTO) SetVersion(v string) {
	o.Version = &v
}

// GetVulnerabilitySeverityCriticalCount returns the VulnerabilitySeverityCriticalCount field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetVulnerabilitySeverityCriticalCount() int32 {
	if o == nil || IsNil(o.VulnerabilitySeverityCriticalCount) {
		var ret int32
		return ret
	}
	return *o.VulnerabilitySeverityCriticalCount
}

// GetVulnerabilitySeverityCriticalCountOk returns a tuple with the VulnerabilitySeverityCriticalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetVulnerabilitySeverityCriticalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.VulnerabilitySeverityCriticalCount) {
		return nil, false
	}
	return o.VulnerabilitySeverityCriticalCount, true
}

// HasVulnerabilitySeverityCriticalCount returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasVulnerabilitySeverityCriticalCount() bool {
	if o != nil && !IsNil(o.VulnerabilitySeverityCriticalCount) {
		return true
	}

	return false
}

// SetVulnerabilitySeverityCriticalCount gets a reference to the given int32 and assigns it to the VulnerabilitySeverityCriticalCount field.
func (o *SbomComponentDTO) SetVulnerabilitySeverityCriticalCount(v int32) {
	o.VulnerabilitySeverityCriticalCount = &v
}

// GetVulnerabilitySeverityHighCount returns the VulnerabilitySeverityHighCount field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetVulnerabilitySeverityHighCount() int32 {
	if o == nil || IsNil(o.VulnerabilitySeverityHighCount) {
		var ret int32
		return ret
	}
	return *o.VulnerabilitySeverityHighCount
}

// GetVulnerabilitySeverityHighCountOk returns a tuple with the VulnerabilitySeverityHighCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetVulnerabilitySeverityHighCountOk() (*int32, bool) {
	if o == nil || IsNil(o.VulnerabilitySeverityHighCount) {
		return nil, false
	}
	return o.VulnerabilitySeverityHighCount, true
}

// HasVulnerabilitySeverityHighCount returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasVulnerabilitySeverityHighCount() bool {
	if o != nil && !IsNil(o.VulnerabilitySeverityHighCount) {
		return true
	}

	return false
}

// SetVulnerabilitySeverityHighCount gets a reference to the given int32 and assigns it to the VulnerabilitySeverityHighCount field.
func (o *SbomComponentDTO) SetVulnerabilitySeverityHighCount(v int32) {
	o.VulnerabilitySeverityHighCount = &v
}

// GetVulnerabilitySeverityLowCount returns the VulnerabilitySeverityLowCount field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetVulnerabilitySeverityLowCount() int32 {
	if o == nil || IsNil(o.VulnerabilitySeverityLowCount) {
		var ret int32
		return ret
	}
	return *o.VulnerabilitySeverityLowCount
}

// GetVulnerabilitySeverityLowCountOk returns a tuple with the VulnerabilitySeverityLowCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetVulnerabilitySeverityLowCountOk() (*int32, bool) {
	if o == nil || IsNil(o.VulnerabilitySeverityLowCount) {
		return nil, false
	}
	return o.VulnerabilitySeverityLowCount, true
}

// HasVulnerabilitySeverityLowCount returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasVulnerabilitySeverityLowCount() bool {
	if o != nil && !IsNil(o.VulnerabilitySeverityLowCount) {
		return true
	}

	return false
}

// SetVulnerabilitySeverityLowCount gets a reference to the given int32 and assigns it to the VulnerabilitySeverityLowCount field.
func (o *SbomComponentDTO) SetVulnerabilitySeverityLowCount(v int32) {
	o.VulnerabilitySeverityLowCount = &v
}

// GetVulnerabilitySeverityMediumCount returns the VulnerabilitySeverityMediumCount field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetVulnerabilitySeverityMediumCount() int32 {
	if o == nil || IsNil(o.VulnerabilitySeverityMediumCount) {
		var ret int32
		return ret
	}
	return *o.VulnerabilitySeverityMediumCount
}

// GetVulnerabilitySeverityMediumCountOk returns a tuple with the VulnerabilitySeverityMediumCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetVulnerabilitySeverityMediumCountOk() (*int32, bool) {
	if o == nil || IsNil(o.VulnerabilitySeverityMediumCount) {
		return nil, false
	}
	return o.VulnerabilitySeverityMediumCount, true
}

// HasVulnerabilitySeverityMediumCount returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasVulnerabilitySeverityMediumCount() bool {
	if o != nil && !IsNil(o.VulnerabilitySeverityMediumCount) {
		return true
	}

	return false
}

// SetVulnerabilitySeverityMediumCount gets a reference to the given int32 and assigns it to the VulnerabilitySeverityMediumCount field.
func (o *SbomComponentDTO) SetVulnerabilitySeverityMediumCount(v int32) {
	o.VulnerabilitySeverityMediumCount = &v
}

// GetVulnerabilitySeverityNoneCount returns the VulnerabilitySeverityNoneCount field value if set, zero value otherwise.
func (o *SbomComponentDTO) GetVulnerabilitySeverityNoneCount() int32 {
	if o == nil || IsNil(o.VulnerabilitySeverityNoneCount) {
		var ret int32
		return ret
	}
	return *o.VulnerabilitySeverityNoneCount
}

// GetVulnerabilitySeverityNoneCountOk returns a tuple with the VulnerabilitySeverityNoneCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SbomComponentDTO) GetVulnerabilitySeverityNoneCountOk() (*int32, bool) {
	if o == nil || IsNil(o.VulnerabilitySeverityNoneCount) {
		return nil, false
	}
	return o.VulnerabilitySeverityNoneCount, true
}

// HasVulnerabilitySeverityNoneCount returns a boolean if a field has been set.
func (o *SbomComponentDTO) HasVulnerabilitySeverityNoneCount() bool {
	if o != nil && !IsNil(o.VulnerabilitySeverityNoneCount) {
		return true
	}

	return false
}

// SetVulnerabilitySeverityNoneCount gets a reference to the given int32 and assigns it to the VulnerabilitySeverityNoneCount field.
func (o *SbomComponentDTO) SetVulnerabilitySeverityNoneCount(v int32) {
	o.VulnerabilitySeverityNoneCount = &v
}

func (o SbomComponentDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SbomComponentDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ComponentIdentifier) {
		toSerialize["componentIdentifier"] = o.ComponentIdentifier
	}
	if !IsNil(o.DependencyType) {
		toSerialize["dependencyType"] = o.DependencyType
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.Licenses) {
		toSerialize["licenses"] = o.Licenses
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PackageUrl) {
		toSerialize["packageUrl"] = o.PackageUrl
	}
	if !IsNil(o.PercentageAnnotated) {
		toSerialize["percentageAnnotated"] = o.PercentageAnnotated
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.VulnerabilitySeverityCriticalCount) {
		toSerialize["vulnerabilitySeverityCriticalCount"] = o.VulnerabilitySeverityCriticalCount
	}
	if !IsNil(o.VulnerabilitySeverityHighCount) {
		toSerialize["vulnerabilitySeverityHighCount"] = o.VulnerabilitySeverityHighCount
	}
	if !IsNil(o.VulnerabilitySeverityLowCount) {
		toSerialize["vulnerabilitySeverityLowCount"] = o.VulnerabilitySeverityLowCount
	}
	if !IsNil(o.VulnerabilitySeverityMediumCount) {
		toSerialize["vulnerabilitySeverityMediumCount"] = o.VulnerabilitySeverityMediumCount
	}
	if !IsNil(o.VulnerabilitySeverityNoneCount) {
		toSerialize["vulnerabilitySeverityNoneCount"] = o.VulnerabilitySeverityNoneCount
	}
	return toSerialize, nil
}

type NullableSbomComponentDTO struct {
	value *SbomComponentDTO
	isSet bool
}

func (v NullableSbomComponentDTO) Get() *SbomComponentDTO {
	return v.value
}

func (v *NullableSbomComponentDTO) Set(val *SbomComponentDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSbomComponentDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSbomComponentDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSbomComponentDTO(val *SbomComponentDTO) *NullableSbomComponentDTO {
	return &NullableSbomComponentDTO{value: val, isSet: true}
}

func (v NullableSbomComponentDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSbomComponentDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


