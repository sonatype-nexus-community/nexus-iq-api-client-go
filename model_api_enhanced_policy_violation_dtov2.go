/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.184.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
	"time"
)

// checks if the ApiEnhancedPolicyViolationDTOV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiEnhancedPolicyViolationDTOV2{}

// ApiEnhancedPolicyViolationDTOV2 struct for ApiEnhancedPolicyViolationDTOV2
type ApiEnhancedPolicyViolationDTOV2 struct {
	Component *ApiComponentDTOV2 `json:"component,omitempty"`
	ConstraintViolations []ApiConstraintViolationDTO `json:"constraintViolations,omitempty"`
	OpenTime *time.Time `json:"openTime,omitempty"`
	PolicyId *string `json:"policyId,omitempty"`
	PolicyName *string `json:"policyName,omitempty"`
	PolicyViolationId *string `json:"policyViolationId,omitempty"`
	ReportId *string `json:"reportId,omitempty"`
	ReportUrl *string `json:"reportUrl,omitempty"`
	StageId *string `json:"stageId,omitempty"`
	ThreatLevel *int32 `json:"threatLevel,omitempty"`
}

// NewApiEnhancedPolicyViolationDTOV2 instantiates a new ApiEnhancedPolicyViolationDTOV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiEnhancedPolicyViolationDTOV2() *ApiEnhancedPolicyViolationDTOV2 {
	this := ApiEnhancedPolicyViolationDTOV2{}
	return &this
}

// NewApiEnhancedPolicyViolationDTOV2WithDefaults instantiates a new ApiEnhancedPolicyViolationDTOV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiEnhancedPolicyViolationDTOV2WithDefaults() *ApiEnhancedPolicyViolationDTOV2 {
	this := ApiEnhancedPolicyViolationDTOV2{}
	return &this
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *ApiEnhancedPolicyViolationDTOV2) GetComponent() ApiComponentDTOV2 {
	if o == nil || IsNil(o.Component) {
		var ret ApiComponentDTOV2
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) GetComponentOk() (*ApiComponentDTOV2, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given ApiComponentDTOV2 and assigns it to the Component field.
func (o *ApiEnhancedPolicyViolationDTOV2) SetComponent(v ApiComponentDTOV2) {
	o.Component = &v
}

// GetConstraintViolations returns the ConstraintViolations field value if set, zero value otherwise.
func (o *ApiEnhancedPolicyViolationDTOV2) GetConstraintViolations() []ApiConstraintViolationDTO {
	if o == nil || IsNil(o.ConstraintViolations) {
		var ret []ApiConstraintViolationDTO
		return ret
	}
	return o.ConstraintViolations
}

// GetConstraintViolationsOk returns a tuple with the ConstraintViolations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) GetConstraintViolationsOk() ([]ApiConstraintViolationDTO, bool) {
	if o == nil || IsNil(o.ConstraintViolations) {
		return nil, false
	}
	return o.ConstraintViolations, true
}

// HasConstraintViolations returns a boolean if a field has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) HasConstraintViolations() bool {
	if o != nil && !IsNil(o.ConstraintViolations) {
		return true
	}

	return false
}

// SetConstraintViolations gets a reference to the given []ApiConstraintViolationDTO and assigns it to the ConstraintViolations field.
func (o *ApiEnhancedPolicyViolationDTOV2) SetConstraintViolations(v []ApiConstraintViolationDTO) {
	o.ConstraintViolations = v
}

// GetOpenTime returns the OpenTime field value if set, zero value otherwise.
func (o *ApiEnhancedPolicyViolationDTOV2) GetOpenTime() time.Time {
	if o == nil || IsNil(o.OpenTime) {
		var ret time.Time
		return ret
	}
	return *o.OpenTime
}

// GetOpenTimeOk returns a tuple with the OpenTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) GetOpenTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.OpenTime) {
		return nil, false
	}
	return o.OpenTime, true
}

// HasOpenTime returns a boolean if a field has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) HasOpenTime() bool {
	if o != nil && !IsNil(o.OpenTime) {
		return true
	}

	return false
}

// SetOpenTime gets a reference to the given time.Time and assigns it to the OpenTime field.
func (o *ApiEnhancedPolicyViolationDTOV2) SetOpenTime(v time.Time) {
	o.OpenTime = &v
}

// GetPolicyId returns the PolicyId field value if set, zero value otherwise.
func (o *ApiEnhancedPolicyViolationDTOV2) GetPolicyId() string {
	if o == nil || IsNil(o.PolicyId) {
		var ret string
		return ret
	}
	return *o.PolicyId
}

// GetPolicyIdOk returns a tuple with the PolicyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) GetPolicyIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyId) {
		return nil, false
	}
	return o.PolicyId, true
}

// HasPolicyId returns a boolean if a field has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) HasPolicyId() bool {
	if o != nil && !IsNil(o.PolicyId) {
		return true
	}

	return false
}

// SetPolicyId gets a reference to the given string and assigns it to the PolicyId field.
func (o *ApiEnhancedPolicyViolationDTOV2) SetPolicyId(v string) {
	o.PolicyId = &v
}

// GetPolicyName returns the PolicyName field value if set, zero value otherwise.
func (o *ApiEnhancedPolicyViolationDTOV2) GetPolicyName() string {
	if o == nil || IsNil(o.PolicyName) {
		var ret string
		return ret
	}
	return *o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) GetPolicyNameOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyName) {
		return nil, false
	}
	return o.PolicyName, true
}

// HasPolicyName returns a boolean if a field has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) HasPolicyName() bool {
	if o != nil && !IsNil(o.PolicyName) {
		return true
	}

	return false
}

// SetPolicyName gets a reference to the given string and assigns it to the PolicyName field.
func (o *ApiEnhancedPolicyViolationDTOV2) SetPolicyName(v string) {
	o.PolicyName = &v
}

// GetPolicyViolationId returns the PolicyViolationId field value if set, zero value otherwise.
func (o *ApiEnhancedPolicyViolationDTOV2) GetPolicyViolationId() string {
	if o == nil || IsNil(o.PolicyViolationId) {
		var ret string
		return ret
	}
	return *o.PolicyViolationId
}

// GetPolicyViolationIdOk returns a tuple with the PolicyViolationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) GetPolicyViolationIdOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyViolationId) {
		return nil, false
	}
	return o.PolicyViolationId, true
}

// HasPolicyViolationId returns a boolean if a field has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) HasPolicyViolationId() bool {
	if o != nil && !IsNil(o.PolicyViolationId) {
		return true
	}

	return false
}

// SetPolicyViolationId gets a reference to the given string and assigns it to the PolicyViolationId field.
func (o *ApiEnhancedPolicyViolationDTOV2) SetPolicyViolationId(v string) {
	o.PolicyViolationId = &v
}

// GetReportId returns the ReportId field value if set, zero value otherwise.
func (o *ApiEnhancedPolicyViolationDTOV2) GetReportId() string {
	if o == nil || IsNil(o.ReportId) {
		var ret string
		return ret
	}
	return *o.ReportId
}

// GetReportIdOk returns a tuple with the ReportId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) GetReportIdOk() (*string, bool) {
	if o == nil || IsNil(o.ReportId) {
		return nil, false
	}
	return o.ReportId, true
}

// HasReportId returns a boolean if a field has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) HasReportId() bool {
	if o != nil && !IsNil(o.ReportId) {
		return true
	}

	return false
}

// SetReportId gets a reference to the given string and assigns it to the ReportId field.
func (o *ApiEnhancedPolicyViolationDTOV2) SetReportId(v string) {
	o.ReportId = &v
}

// GetReportUrl returns the ReportUrl field value if set, zero value otherwise.
func (o *ApiEnhancedPolicyViolationDTOV2) GetReportUrl() string {
	if o == nil || IsNil(o.ReportUrl) {
		var ret string
		return ret
	}
	return *o.ReportUrl
}

// GetReportUrlOk returns a tuple with the ReportUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) GetReportUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ReportUrl) {
		return nil, false
	}
	return o.ReportUrl, true
}

// HasReportUrl returns a boolean if a field has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) HasReportUrl() bool {
	if o != nil && !IsNil(o.ReportUrl) {
		return true
	}

	return false
}

// SetReportUrl gets a reference to the given string and assigns it to the ReportUrl field.
func (o *ApiEnhancedPolicyViolationDTOV2) SetReportUrl(v string) {
	o.ReportUrl = &v
}

// GetStageId returns the StageId field value if set, zero value otherwise.
func (o *ApiEnhancedPolicyViolationDTOV2) GetStageId() string {
	if o == nil || IsNil(o.StageId) {
		var ret string
		return ret
	}
	return *o.StageId
}

// GetStageIdOk returns a tuple with the StageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) GetStageIdOk() (*string, bool) {
	if o == nil || IsNil(o.StageId) {
		return nil, false
	}
	return o.StageId, true
}

// HasStageId returns a boolean if a field has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) HasStageId() bool {
	if o != nil && !IsNil(o.StageId) {
		return true
	}

	return false
}

// SetStageId gets a reference to the given string and assigns it to the StageId field.
func (o *ApiEnhancedPolicyViolationDTOV2) SetStageId(v string) {
	o.StageId = &v
}

// GetThreatLevel returns the ThreatLevel field value if set, zero value otherwise.
func (o *ApiEnhancedPolicyViolationDTOV2) GetThreatLevel() int32 {
	if o == nil || IsNil(o.ThreatLevel) {
		var ret int32
		return ret
	}
	return *o.ThreatLevel
}

// GetThreatLevelOk returns a tuple with the ThreatLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) GetThreatLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.ThreatLevel) {
		return nil, false
	}
	return o.ThreatLevel, true
}

// HasThreatLevel returns a boolean if a field has been set.
func (o *ApiEnhancedPolicyViolationDTOV2) HasThreatLevel() bool {
	if o != nil && !IsNil(o.ThreatLevel) {
		return true
	}

	return false
}

// SetThreatLevel gets a reference to the given int32 and assigns it to the ThreatLevel field.
func (o *ApiEnhancedPolicyViolationDTOV2) SetThreatLevel(v int32) {
	o.ThreatLevel = &v
}

func (o ApiEnhancedPolicyViolationDTOV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiEnhancedPolicyViolationDTOV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Component) {
		toSerialize["component"] = o.Component
	}
	if !IsNil(o.ConstraintViolations) {
		toSerialize["constraintViolations"] = o.ConstraintViolations
	}
	if !IsNil(o.OpenTime) {
		toSerialize["openTime"] = o.OpenTime
	}
	if !IsNil(o.PolicyId) {
		toSerialize["policyId"] = o.PolicyId
	}
	if !IsNil(o.PolicyName) {
		toSerialize["policyName"] = o.PolicyName
	}
	if !IsNil(o.PolicyViolationId) {
		toSerialize["policyViolationId"] = o.PolicyViolationId
	}
	if !IsNil(o.ReportId) {
		toSerialize["reportId"] = o.ReportId
	}
	if !IsNil(o.ReportUrl) {
		toSerialize["reportUrl"] = o.ReportUrl
	}
	if !IsNil(o.StageId) {
		toSerialize["stageId"] = o.StageId
	}
	if !IsNil(o.ThreatLevel) {
		toSerialize["threatLevel"] = o.ThreatLevel
	}
	return toSerialize, nil
}

type NullableApiEnhancedPolicyViolationDTOV2 struct {
	value *ApiEnhancedPolicyViolationDTOV2
	isSet bool
}

func (v NullableApiEnhancedPolicyViolationDTOV2) Get() *ApiEnhancedPolicyViolationDTOV2 {
	return v.value
}

func (v *NullableApiEnhancedPolicyViolationDTOV2) Set(val *ApiEnhancedPolicyViolationDTOV2) {
	v.value = val
	v.isSet = true
}

func (v NullableApiEnhancedPolicyViolationDTOV2) IsSet() bool {
	return v.isSet
}

func (v *NullableApiEnhancedPolicyViolationDTOV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiEnhancedPolicyViolationDTOV2(val *ApiEnhancedPolicyViolationDTOV2) *NullableApiEnhancedPolicyViolationDTOV2 {
	return &NullableApiEnhancedPolicyViolationDTOV2{value: val, isSet: true}
}

func (v NullableApiEnhancedPolicyViolationDTOV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiEnhancedPolicyViolationDTOV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


