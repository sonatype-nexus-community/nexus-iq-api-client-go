/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.195.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the SCMUserMappingsResponseDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SCMUserMappingsResponseDTO{}

// SCMUserMappingsResponseDTO struct for SCMUserMappingsResponseDTO
type SCMUserMappingsResponseDTO struct {
	Inherited *bool `json:"inherited,omitempty"`
	OwnerInternalId *string `json:"ownerInternalId,omitempty"`
	UserMapping *SCMUserMappingsDTO `json:"userMapping,omitempty"`
}

// NewSCMUserMappingsResponseDTO instantiates a new SCMUserMappingsResponseDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSCMUserMappingsResponseDTO() *SCMUserMappingsResponseDTO {
	this := SCMUserMappingsResponseDTO{}
	return &this
}

// NewSCMUserMappingsResponseDTOWithDefaults instantiates a new SCMUserMappingsResponseDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSCMUserMappingsResponseDTOWithDefaults() *SCMUserMappingsResponseDTO {
	this := SCMUserMappingsResponseDTO{}
	return &this
}

// GetInherited returns the Inherited field value if set, zero value otherwise.
func (o *SCMUserMappingsResponseDTO) GetInherited() bool {
	if o == nil || IsNil(o.Inherited) {
		var ret bool
		return ret
	}
	return *o.Inherited
}

// GetInheritedOk returns a tuple with the Inherited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SCMUserMappingsResponseDTO) GetInheritedOk() (*bool, bool) {
	if o == nil || IsNil(o.Inherited) {
		return nil, false
	}
	return o.Inherited, true
}

// HasInherited returns a boolean if a field has been set.
func (o *SCMUserMappingsResponseDTO) HasInherited() bool {
	if o != nil && !IsNil(o.Inherited) {
		return true
	}

	return false
}

// SetInherited gets a reference to the given bool and assigns it to the Inherited field.
func (o *SCMUserMappingsResponseDTO) SetInherited(v bool) {
	o.Inherited = &v
}

// GetOwnerInternalId returns the OwnerInternalId field value if set, zero value otherwise.
func (o *SCMUserMappingsResponseDTO) GetOwnerInternalId() string {
	if o == nil || IsNil(o.OwnerInternalId) {
		var ret string
		return ret
	}
	return *o.OwnerInternalId
}

// GetOwnerInternalIdOk returns a tuple with the OwnerInternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SCMUserMappingsResponseDTO) GetOwnerInternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.OwnerInternalId) {
		return nil, false
	}
	return o.OwnerInternalId, true
}

// HasOwnerInternalId returns a boolean if a field has been set.
func (o *SCMUserMappingsResponseDTO) HasOwnerInternalId() bool {
	if o != nil && !IsNil(o.OwnerInternalId) {
		return true
	}

	return false
}

// SetOwnerInternalId gets a reference to the given string and assigns it to the OwnerInternalId field.
func (o *SCMUserMappingsResponseDTO) SetOwnerInternalId(v string) {
	o.OwnerInternalId = &v
}

// GetUserMapping returns the UserMapping field value if set, zero value otherwise.
func (o *SCMUserMappingsResponseDTO) GetUserMapping() SCMUserMappingsDTO {
	if o == nil || IsNil(o.UserMapping) {
		var ret SCMUserMappingsDTO
		return ret
	}
	return *o.UserMapping
}

// GetUserMappingOk returns a tuple with the UserMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SCMUserMappingsResponseDTO) GetUserMappingOk() (*SCMUserMappingsDTO, bool) {
	if o == nil || IsNil(o.UserMapping) {
		return nil, false
	}
	return o.UserMapping, true
}

// HasUserMapping returns a boolean if a field has been set.
func (o *SCMUserMappingsResponseDTO) HasUserMapping() bool {
	if o != nil && !IsNil(o.UserMapping) {
		return true
	}

	return false
}

// SetUserMapping gets a reference to the given SCMUserMappingsDTO and assigns it to the UserMapping field.
func (o *SCMUserMappingsResponseDTO) SetUserMapping(v SCMUserMappingsDTO) {
	o.UserMapping = &v
}

func (o SCMUserMappingsResponseDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SCMUserMappingsResponseDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Inherited) {
		toSerialize["inherited"] = o.Inherited
	}
	if !IsNil(o.OwnerInternalId) {
		toSerialize["ownerInternalId"] = o.OwnerInternalId
	}
	if !IsNil(o.UserMapping) {
		toSerialize["userMapping"] = o.UserMapping
	}
	return toSerialize, nil
}

type NullableSCMUserMappingsResponseDTO struct {
	value *SCMUserMappingsResponseDTO
	isSet bool
}

func (v NullableSCMUserMappingsResponseDTO) Get() *SCMUserMappingsResponseDTO {
	return v.value
}

func (v *NullableSCMUserMappingsResponseDTO) Set(val *SCMUserMappingsResponseDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSCMUserMappingsResponseDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSCMUserMappingsResponseDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSCMUserMappingsResponseDTO(val *SCMUserMappingsResponseDTO) *NullableSCMUserMappingsResponseDTO {
	return &NullableSCMUserMappingsResponseDTO{value: val, isSet: true}
}

func (v NullableSCMUserMappingsResponseDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSCMUserMappingsResponseDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


