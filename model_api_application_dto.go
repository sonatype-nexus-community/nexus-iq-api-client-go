/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.184.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiApplicationDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiApplicationDTO{}

// ApiApplicationDTO struct for ApiApplicationDTO
type ApiApplicationDTO struct {
	ApplicationTags []ApiApplicationTagDTO `json:"applicationTags,omitempty"`
	ContactUserName *string `json:"contactUserName,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	OrganizationId *string `json:"organizationId,omitempty"`
	PublicId *string `json:"publicId,omitempty"`
}

// NewApiApplicationDTO instantiates a new ApiApplicationDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiApplicationDTO() *ApiApplicationDTO {
	this := ApiApplicationDTO{}
	return &this
}

// NewApiApplicationDTOWithDefaults instantiates a new ApiApplicationDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiApplicationDTOWithDefaults() *ApiApplicationDTO {
	this := ApiApplicationDTO{}
	return &this
}

// GetApplicationTags returns the ApplicationTags field value if set, zero value otherwise.
func (o *ApiApplicationDTO) GetApplicationTags() []ApiApplicationTagDTO {
	if o == nil || IsNil(o.ApplicationTags) {
		var ret []ApiApplicationTagDTO
		return ret
	}
	return o.ApplicationTags
}

// GetApplicationTagsOk returns a tuple with the ApplicationTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiApplicationDTO) GetApplicationTagsOk() ([]ApiApplicationTagDTO, bool) {
	if o == nil || IsNil(o.ApplicationTags) {
		return nil, false
	}
	return o.ApplicationTags, true
}

// HasApplicationTags returns a boolean if a field has been set.
func (o *ApiApplicationDTO) HasApplicationTags() bool {
	if o != nil && !IsNil(o.ApplicationTags) {
		return true
	}

	return false
}

// SetApplicationTags gets a reference to the given []ApiApplicationTagDTO and assigns it to the ApplicationTags field.
func (o *ApiApplicationDTO) SetApplicationTags(v []ApiApplicationTagDTO) {
	o.ApplicationTags = v
}

// GetContactUserName returns the ContactUserName field value if set, zero value otherwise.
func (o *ApiApplicationDTO) GetContactUserName() string {
	if o == nil || IsNil(o.ContactUserName) {
		var ret string
		return ret
	}
	return *o.ContactUserName
}

// GetContactUserNameOk returns a tuple with the ContactUserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiApplicationDTO) GetContactUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.ContactUserName) {
		return nil, false
	}
	return o.ContactUserName, true
}

// HasContactUserName returns a boolean if a field has been set.
func (o *ApiApplicationDTO) HasContactUserName() bool {
	if o != nil && !IsNil(o.ContactUserName) {
		return true
	}

	return false
}

// SetContactUserName gets a reference to the given string and assigns it to the ContactUserName field.
func (o *ApiApplicationDTO) SetContactUserName(v string) {
	o.ContactUserName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiApplicationDTO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiApplicationDTO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiApplicationDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiApplicationDTO) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ApiApplicationDTO) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiApplicationDTO) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ApiApplicationDTO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ApiApplicationDTO) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ApiApplicationDTO) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiApplicationDTO) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ApiApplicationDTO) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ApiApplicationDTO) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetPublicId returns the PublicId field value if set, zero value otherwise.
func (o *ApiApplicationDTO) GetPublicId() string {
	if o == nil || IsNil(o.PublicId) {
		var ret string
		return ret
	}
	return *o.PublicId
}

// GetPublicIdOk returns a tuple with the PublicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiApplicationDTO) GetPublicIdOk() (*string, bool) {
	if o == nil || IsNil(o.PublicId) {
		return nil, false
	}
	return o.PublicId, true
}

// HasPublicId returns a boolean if a field has been set.
func (o *ApiApplicationDTO) HasPublicId() bool {
	if o != nil && !IsNil(o.PublicId) {
		return true
	}

	return false
}

// SetPublicId gets a reference to the given string and assigns it to the PublicId field.
func (o *ApiApplicationDTO) SetPublicId(v string) {
	o.PublicId = &v
}

func (o ApiApplicationDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiApplicationDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplicationTags) {
		toSerialize["applicationTags"] = o.ApplicationTags
	}
	if !IsNil(o.ContactUserName) {
		toSerialize["contactUserName"] = o.ContactUserName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organizationId"] = o.OrganizationId
	}
	if !IsNil(o.PublicId) {
		toSerialize["publicId"] = o.PublicId
	}
	return toSerialize, nil
}

type NullableApiApplicationDTO struct {
	value *ApiApplicationDTO
	isSet bool
}

func (v NullableApiApplicationDTO) Get() *ApiApplicationDTO {
	return v.value
}

func (v *NullableApiApplicationDTO) Set(val *ApiApplicationDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiApplicationDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiApplicationDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiApplicationDTO(val *ApiApplicationDTO) *NullableApiApplicationDTO {
	return &NullableApiApplicationDTO{value: val, isSet: true}
}

func (v NullableApiApplicationDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiApplicationDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


