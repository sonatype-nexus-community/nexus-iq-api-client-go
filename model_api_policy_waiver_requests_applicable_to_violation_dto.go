/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.196.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiPolicyWaiverRequestsApplicableToViolationDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiPolicyWaiverRequestsApplicableToViolationDTO{}

// ApiPolicyWaiverRequestsApplicableToViolationDTO struct for ApiPolicyWaiverRequestsApplicableToViolationDTO
type ApiPolicyWaiverRequestsApplicableToViolationDTO struct {
	ActiveWaiverRequests []ApiPolicyWaiverRequestDTO `json:"activeWaiverRequests,omitempty"`
	ExpiredWaiverRequests []ApiPolicyWaiverRequestDTO `json:"expiredWaiverRequests,omitempty"`
}

// NewApiPolicyWaiverRequestsApplicableToViolationDTO instantiates a new ApiPolicyWaiverRequestsApplicableToViolationDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPolicyWaiverRequestsApplicableToViolationDTO() *ApiPolicyWaiverRequestsApplicableToViolationDTO {
	this := ApiPolicyWaiverRequestsApplicableToViolationDTO{}
	return &this
}

// NewApiPolicyWaiverRequestsApplicableToViolationDTOWithDefaults instantiates a new ApiPolicyWaiverRequestsApplicableToViolationDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPolicyWaiverRequestsApplicableToViolationDTOWithDefaults() *ApiPolicyWaiverRequestsApplicableToViolationDTO {
	this := ApiPolicyWaiverRequestsApplicableToViolationDTO{}
	return &this
}

// GetActiveWaiverRequests returns the ActiveWaiverRequests field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestsApplicableToViolationDTO) GetActiveWaiverRequests() []ApiPolicyWaiverRequestDTO {
	if o == nil || IsNil(o.ActiveWaiverRequests) {
		var ret []ApiPolicyWaiverRequestDTO
		return ret
	}
	return o.ActiveWaiverRequests
}

// GetActiveWaiverRequestsOk returns a tuple with the ActiveWaiverRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestsApplicableToViolationDTO) GetActiveWaiverRequestsOk() ([]ApiPolicyWaiverRequestDTO, bool) {
	if o == nil || IsNil(o.ActiveWaiverRequests) {
		return nil, false
	}
	return o.ActiveWaiverRequests, true
}

// HasActiveWaiverRequests returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestsApplicableToViolationDTO) HasActiveWaiverRequests() bool {
	if o != nil && !IsNil(o.ActiveWaiverRequests) {
		return true
	}

	return false
}

// SetActiveWaiverRequests gets a reference to the given []ApiPolicyWaiverRequestDTO and assigns it to the ActiveWaiverRequests field.
func (o *ApiPolicyWaiverRequestsApplicableToViolationDTO) SetActiveWaiverRequests(v []ApiPolicyWaiverRequestDTO) {
	o.ActiveWaiverRequests = v
}

// GetExpiredWaiverRequests returns the ExpiredWaiverRequests field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestsApplicableToViolationDTO) GetExpiredWaiverRequests() []ApiPolicyWaiverRequestDTO {
	if o == nil || IsNil(o.ExpiredWaiverRequests) {
		var ret []ApiPolicyWaiverRequestDTO
		return ret
	}
	return o.ExpiredWaiverRequests
}

// GetExpiredWaiverRequestsOk returns a tuple with the ExpiredWaiverRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestsApplicableToViolationDTO) GetExpiredWaiverRequestsOk() ([]ApiPolicyWaiverRequestDTO, bool) {
	if o == nil || IsNil(o.ExpiredWaiverRequests) {
		return nil, false
	}
	return o.ExpiredWaiverRequests, true
}

// HasExpiredWaiverRequests returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestsApplicableToViolationDTO) HasExpiredWaiverRequests() bool {
	if o != nil && !IsNil(o.ExpiredWaiverRequests) {
		return true
	}

	return false
}

// SetExpiredWaiverRequests gets a reference to the given []ApiPolicyWaiverRequestDTO and assigns it to the ExpiredWaiverRequests field.
func (o *ApiPolicyWaiverRequestsApplicableToViolationDTO) SetExpiredWaiverRequests(v []ApiPolicyWaiverRequestDTO) {
	o.ExpiredWaiverRequests = v
}

func (o ApiPolicyWaiverRequestsApplicableToViolationDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiPolicyWaiverRequestsApplicableToViolationDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActiveWaiverRequests) {
		toSerialize["activeWaiverRequests"] = o.ActiveWaiverRequests
	}
	if !IsNil(o.ExpiredWaiverRequests) {
		toSerialize["expiredWaiverRequests"] = o.ExpiredWaiverRequests
	}
	return toSerialize, nil
}

type NullableApiPolicyWaiverRequestsApplicableToViolationDTO struct {
	value *ApiPolicyWaiverRequestsApplicableToViolationDTO
	isSet bool
}

func (v NullableApiPolicyWaiverRequestsApplicableToViolationDTO) Get() *ApiPolicyWaiverRequestsApplicableToViolationDTO {
	return v.value
}

func (v *NullableApiPolicyWaiverRequestsApplicableToViolationDTO) Set(val *ApiPolicyWaiverRequestsApplicableToViolationDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPolicyWaiverRequestsApplicableToViolationDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPolicyWaiverRequestsApplicableToViolationDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPolicyWaiverRequestsApplicableToViolationDTO(val *ApiPolicyWaiverRequestsApplicableToViolationDTO) *NullableApiPolicyWaiverRequestsApplicableToViolationDTO {
	return &NullableApiPolicyWaiverRequestsApplicableToViolationDTO{value: val, isSet: true}
}

func (v NullableApiPolicyWaiverRequestsApplicableToViolationDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPolicyWaiverRequestsApplicableToViolationDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


