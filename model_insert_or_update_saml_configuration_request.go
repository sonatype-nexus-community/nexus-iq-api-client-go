/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.196.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the InsertOrUpdateSamlConfigurationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InsertOrUpdateSamlConfigurationRequest{}

// InsertOrUpdateSamlConfigurationRequest struct for InsertOrUpdateSamlConfigurationRequest
type InsertOrUpdateSamlConfigurationRequest struct {
	// Enter the SAML metadata XML of your IdP. Refer to the IdP documentation to obtain this metadata.
	IdentityProviderXml *string `json:"identityProviderXml,omitempty"`
	SamlConfiguration *ApiSamlConfigurationDTO `json:"samlConfiguration,omitempty"`
}

// NewInsertOrUpdateSamlConfigurationRequest instantiates a new InsertOrUpdateSamlConfigurationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsertOrUpdateSamlConfigurationRequest() *InsertOrUpdateSamlConfigurationRequest {
	this := InsertOrUpdateSamlConfigurationRequest{}
	return &this
}

// NewInsertOrUpdateSamlConfigurationRequestWithDefaults instantiates a new InsertOrUpdateSamlConfigurationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsertOrUpdateSamlConfigurationRequestWithDefaults() *InsertOrUpdateSamlConfigurationRequest {
	this := InsertOrUpdateSamlConfigurationRequest{}
	return &this
}

// GetIdentityProviderXml returns the IdentityProviderXml field value if set, zero value otherwise.
func (o *InsertOrUpdateSamlConfigurationRequest) GetIdentityProviderXml() string {
	if o == nil || IsNil(o.IdentityProviderXml) {
		var ret string
		return ret
	}
	return *o.IdentityProviderXml
}

// GetIdentityProviderXmlOk returns a tuple with the IdentityProviderXml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertOrUpdateSamlConfigurationRequest) GetIdentityProviderXmlOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityProviderXml) {
		return nil, false
	}
	return o.IdentityProviderXml, true
}

// HasIdentityProviderXml returns a boolean if a field has been set.
func (o *InsertOrUpdateSamlConfigurationRequest) HasIdentityProviderXml() bool {
	if o != nil && !IsNil(o.IdentityProviderXml) {
		return true
	}

	return false
}

// SetIdentityProviderXml gets a reference to the given string and assigns it to the IdentityProviderXml field.
func (o *InsertOrUpdateSamlConfigurationRequest) SetIdentityProviderXml(v string) {
	o.IdentityProviderXml = &v
}

// GetSamlConfiguration returns the SamlConfiguration field value if set, zero value otherwise.
func (o *InsertOrUpdateSamlConfigurationRequest) GetSamlConfiguration() ApiSamlConfigurationDTO {
	if o == nil || IsNil(o.SamlConfiguration) {
		var ret ApiSamlConfigurationDTO
		return ret
	}
	return *o.SamlConfiguration
}

// GetSamlConfigurationOk returns a tuple with the SamlConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InsertOrUpdateSamlConfigurationRequest) GetSamlConfigurationOk() (*ApiSamlConfigurationDTO, bool) {
	if o == nil || IsNil(o.SamlConfiguration) {
		return nil, false
	}
	return o.SamlConfiguration, true
}

// HasSamlConfiguration returns a boolean if a field has been set.
func (o *InsertOrUpdateSamlConfigurationRequest) HasSamlConfiguration() bool {
	if o != nil && !IsNil(o.SamlConfiguration) {
		return true
	}

	return false
}

// SetSamlConfiguration gets a reference to the given ApiSamlConfigurationDTO and assigns it to the SamlConfiguration field.
func (o *InsertOrUpdateSamlConfigurationRequest) SetSamlConfiguration(v ApiSamlConfigurationDTO) {
	o.SamlConfiguration = &v
}

func (o InsertOrUpdateSamlConfigurationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InsertOrUpdateSamlConfigurationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IdentityProviderXml) {
		toSerialize["identityProviderXml"] = o.IdentityProviderXml
	}
	if !IsNil(o.SamlConfiguration) {
		toSerialize["samlConfiguration"] = o.SamlConfiguration
	}
	return toSerialize, nil
}

type NullableInsertOrUpdateSamlConfigurationRequest struct {
	value *InsertOrUpdateSamlConfigurationRequest
	isSet bool
}

func (v NullableInsertOrUpdateSamlConfigurationRequest) Get() *InsertOrUpdateSamlConfigurationRequest {
	return v.value
}

func (v *NullableInsertOrUpdateSamlConfigurationRequest) Set(val *InsertOrUpdateSamlConfigurationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInsertOrUpdateSamlConfigurationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInsertOrUpdateSamlConfigurationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsertOrUpdateSamlConfigurationRequest(val *InsertOrUpdateSamlConfigurationRequest) *NullableInsertOrUpdateSamlConfigurationRequest {
	return &NullableInsertOrUpdateSamlConfigurationRequest{value: val, isSet: true}
}

func (v NullableInsertOrUpdateSamlConfigurationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsertOrUpdateSamlConfigurationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


