/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.196.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiApplicationWaiverDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiApplicationWaiverDTO{}

// ApiApplicationWaiverDTO struct for ApiApplicationWaiverDTO
type ApiApplicationWaiverDTO struct {
	Application *ApiApplicationBaseDTO `json:"application,omitempty"`
	Stages []ApiPolicyViolationStageDTO `json:"stages,omitempty"`
}

// NewApiApplicationWaiverDTO instantiates a new ApiApplicationWaiverDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiApplicationWaiverDTO() *ApiApplicationWaiverDTO {
	this := ApiApplicationWaiverDTO{}
	return &this
}

// NewApiApplicationWaiverDTOWithDefaults instantiates a new ApiApplicationWaiverDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiApplicationWaiverDTOWithDefaults() *ApiApplicationWaiverDTO {
	this := ApiApplicationWaiverDTO{}
	return &this
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *ApiApplicationWaiverDTO) GetApplication() ApiApplicationBaseDTO {
	if o == nil || IsNil(o.Application) {
		var ret ApiApplicationBaseDTO
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiApplicationWaiverDTO) GetApplicationOk() (*ApiApplicationBaseDTO, bool) {
	if o == nil || IsNil(o.Application) {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *ApiApplicationWaiverDTO) HasApplication() bool {
	if o != nil && !IsNil(o.Application) {
		return true
	}

	return false
}

// SetApplication gets a reference to the given ApiApplicationBaseDTO and assigns it to the Application field.
func (o *ApiApplicationWaiverDTO) SetApplication(v ApiApplicationBaseDTO) {
	o.Application = &v
}

// GetStages returns the Stages field value if set, zero value otherwise.
func (o *ApiApplicationWaiverDTO) GetStages() []ApiPolicyViolationStageDTO {
	if o == nil || IsNil(o.Stages) {
		var ret []ApiPolicyViolationStageDTO
		return ret
	}
	return o.Stages
}

// GetStagesOk returns a tuple with the Stages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiApplicationWaiverDTO) GetStagesOk() ([]ApiPolicyViolationStageDTO, bool) {
	if o == nil || IsNil(o.Stages) {
		return nil, false
	}
	return o.Stages, true
}

// HasStages returns a boolean if a field has been set.
func (o *ApiApplicationWaiverDTO) HasStages() bool {
	if o != nil && !IsNil(o.Stages) {
		return true
	}

	return false
}

// SetStages gets a reference to the given []ApiPolicyViolationStageDTO and assigns it to the Stages field.
func (o *ApiApplicationWaiverDTO) SetStages(v []ApiPolicyViolationStageDTO) {
	o.Stages = v
}

func (o ApiApplicationWaiverDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiApplicationWaiverDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Application) {
		toSerialize["application"] = o.Application
	}
	if !IsNil(o.Stages) {
		toSerialize["stages"] = o.Stages
	}
	return toSerialize, nil
}

type NullableApiApplicationWaiverDTO struct {
	value *ApiApplicationWaiverDTO
	isSet bool
}

func (v NullableApiApplicationWaiverDTO) Get() *ApiApplicationWaiverDTO {
	return v.value
}

func (v *NullableApiApplicationWaiverDTO) Set(val *ApiApplicationWaiverDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiApplicationWaiverDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiApplicationWaiverDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiApplicationWaiverDTO(val *ApiApplicationWaiverDTO) *NullableApiApplicationWaiverDTO {
	return &NullableApiApplicationWaiverDTO{value: val, isSet: true}
}

func (v NullableApiApplicationWaiverDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiApplicationWaiverDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


