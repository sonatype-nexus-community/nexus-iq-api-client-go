/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.192.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiPolicyWaiversApplicableToViolationDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiPolicyWaiversApplicableToViolationDTO{}

// ApiPolicyWaiversApplicableToViolationDTO struct for ApiPolicyWaiversApplicableToViolationDTO
type ApiPolicyWaiversApplicableToViolationDTO struct {
	ActiveWaivers []ApiPolicyWaiverDTO `json:"activeWaivers,omitempty"`
	ExpiredWaivers []ApiPolicyWaiverDTO `json:"expiredWaivers,omitempty"`
}

// NewApiPolicyWaiversApplicableToViolationDTO instantiates a new ApiPolicyWaiversApplicableToViolationDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPolicyWaiversApplicableToViolationDTO() *ApiPolicyWaiversApplicableToViolationDTO {
	this := ApiPolicyWaiversApplicableToViolationDTO{}
	return &this
}

// NewApiPolicyWaiversApplicableToViolationDTOWithDefaults instantiates a new ApiPolicyWaiversApplicableToViolationDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPolicyWaiversApplicableToViolationDTOWithDefaults() *ApiPolicyWaiversApplicableToViolationDTO {
	this := ApiPolicyWaiversApplicableToViolationDTO{}
	return &this
}

// GetActiveWaivers returns the ActiveWaivers field value if set, zero value otherwise.
func (o *ApiPolicyWaiversApplicableToViolationDTO) GetActiveWaivers() []ApiPolicyWaiverDTO {
	if o == nil || IsNil(o.ActiveWaivers) {
		var ret []ApiPolicyWaiverDTO
		return ret
	}
	return o.ActiveWaivers
}

// GetActiveWaiversOk returns a tuple with the ActiveWaivers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiversApplicableToViolationDTO) GetActiveWaiversOk() ([]ApiPolicyWaiverDTO, bool) {
	if o == nil || IsNil(o.ActiveWaivers) {
		return nil, false
	}
	return o.ActiveWaivers, true
}

// HasActiveWaivers returns a boolean if a field has been set.
func (o *ApiPolicyWaiversApplicableToViolationDTO) HasActiveWaivers() bool {
	if o != nil && !IsNil(o.ActiveWaivers) {
		return true
	}

	return false
}

// SetActiveWaivers gets a reference to the given []ApiPolicyWaiverDTO and assigns it to the ActiveWaivers field.
func (o *ApiPolicyWaiversApplicableToViolationDTO) SetActiveWaivers(v []ApiPolicyWaiverDTO) {
	o.ActiveWaivers = v
}

// GetExpiredWaivers returns the ExpiredWaivers field value if set, zero value otherwise.
func (o *ApiPolicyWaiversApplicableToViolationDTO) GetExpiredWaivers() []ApiPolicyWaiverDTO {
	if o == nil || IsNil(o.ExpiredWaivers) {
		var ret []ApiPolicyWaiverDTO
		return ret
	}
	return o.ExpiredWaivers
}

// GetExpiredWaiversOk returns a tuple with the ExpiredWaivers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiversApplicableToViolationDTO) GetExpiredWaiversOk() ([]ApiPolicyWaiverDTO, bool) {
	if o == nil || IsNil(o.ExpiredWaivers) {
		return nil, false
	}
	return o.ExpiredWaivers, true
}

// HasExpiredWaivers returns a boolean if a field has been set.
func (o *ApiPolicyWaiversApplicableToViolationDTO) HasExpiredWaivers() bool {
	if o != nil && !IsNil(o.ExpiredWaivers) {
		return true
	}

	return false
}

// SetExpiredWaivers gets a reference to the given []ApiPolicyWaiverDTO and assigns it to the ExpiredWaivers field.
func (o *ApiPolicyWaiversApplicableToViolationDTO) SetExpiredWaivers(v []ApiPolicyWaiverDTO) {
	o.ExpiredWaivers = v
}

func (o ApiPolicyWaiversApplicableToViolationDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiPolicyWaiversApplicableToViolationDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActiveWaivers) {
		toSerialize["activeWaivers"] = o.ActiveWaivers
	}
	if !IsNil(o.ExpiredWaivers) {
		toSerialize["expiredWaivers"] = o.ExpiredWaivers
	}
	return toSerialize, nil
}

type NullableApiPolicyWaiversApplicableToViolationDTO struct {
	value *ApiPolicyWaiversApplicableToViolationDTO
	isSet bool
}

func (v NullableApiPolicyWaiversApplicableToViolationDTO) Get() *ApiPolicyWaiversApplicableToViolationDTO {
	return v.value
}

func (v *NullableApiPolicyWaiversApplicableToViolationDTO) Set(val *ApiPolicyWaiversApplicableToViolationDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPolicyWaiversApplicableToViolationDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPolicyWaiversApplicableToViolationDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPolicyWaiversApplicableToViolationDTO(val *ApiPolicyWaiversApplicableToViolationDTO) *NullableApiPolicyWaiversApplicableToViolationDTO {
	return &NullableApiPolicyWaiversApplicableToViolationDTO{value: val, isSet: true}
}

func (v NullableApiPolicyWaiversApplicableToViolationDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPolicyWaiversApplicableToViolationDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


