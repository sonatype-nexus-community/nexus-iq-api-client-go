/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.195.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiMoveApplicationResponseDTOV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMoveApplicationResponseDTOV2{}

// ApiMoveApplicationResponseDTOV2 struct for ApiMoveApplicationResponseDTOV2
type ApiMoveApplicationResponseDTOV2 struct {
	Errors []string `json:"errors,omitempty"`
	Warnings []string `json:"warnings,omitempty"`
}

// NewApiMoveApplicationResponseDTOV2 instantiates a new ApiMoveApplicationResponseDTOV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMoveApplicationResponseDTOV2() *ApiMoveApplicationResponseDTOV2 {
	this := ApiMoveApplicationResponseDTOV2{}
	return &this
}

// NewApiMoveApplicationResponseDTOV2WithDefaults instantiates a new ApiMoveApplicationResponseDTOV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMoveApplicationResponseDTOV2WithDefaults() *ApiMoveApplicationResponseDTOV2 {
	this := ApiMoveApplicationResponseDTOV2{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ApiMoveApplicationResponseDTOV2) GetErrors() []string {
	if o == nil || IsNil(o.Errors) {
		var ret []string
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMoveApplicationResponseDTOV2) GetErrorsOk() ([]string, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ApiMoveApplicationResponseDTOV2) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []string and assigns it to the Errors field.
func (o *ApiMoveApplicationResponseDTOV2) SetErrors(v []string) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *ApiMoveApplicationResponseDTOV2) GetWarnings() []string {
	if o == nil || IsNil(o.Warnings) {
		var ret []string
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMoveApplicationResponseDTOV2) GetWarningsOk() ([]string, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *ApiMoveApplicationResponseDTOV2) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []string and assigns it to the Warnings field.
func (o *ApiMoveApplicationResponseDTOV2) SetWarnings(v []string) {
	o.Warnings = v
}

func (o ApiMoveApplicationResponseDTOV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMoveApplicationResponseDTOV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Errors) {
		toSerialize["errors"] = o.Errors
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableApiMoveApplicationResponseDTOV2 struct {
	value *ApiMoveApplicationResponseDTOV2
	isSet bool
}

func (v NullableApiMoveApplicationResponseDTOV2) Get() *ApiMoveApplicationResponseDTOV2 {
	return v.value
}

func (v *NullableApiMoveApplicationResponseDTOV2) Set(val *ApiMoveApplicationResponseDTOV2) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMoveApplicationResponseDTOV2) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMoveApplicationResponseDTOV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMoveApplicationResponseDTOV2(val *ApiMoveApplicationResponseDTOV2) *NullableApiMoveApplicationResponseDTOV2 {
	return &NullableApiMoveApplicationResponseDTOV2{value: val, isSet: true}
}

func (v NullableApiMoveApplicationResponseDTOV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMoveApplicationResponseDTOV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


