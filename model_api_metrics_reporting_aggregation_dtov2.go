/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.195.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
)

// checks if the ApiMetricsReportingAggregationDTOV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiMetricsReportingAggregationDTOV2{}

// ApiMetricsReportingAggregationDTOV2 struct for ApiMetricsReportingAggregationDTOV2
type ApiMetricsReportingAggregationDTOV2 struct {
	DiscoveredCounts *map[string]map[string]int32 `json:"discoveredCounts,omitempty"`
	EvaluationCount *int32 `json:"evaluationCount,omitempty"`
	FixedCounts *map[string]map[string]int32 `json:"fixedCounts,omitempty"`
	MttrCriticalThreat *int64 `json:"mttrCriticalThreat,omitempty"`
	MttrLowThreat *int64 `json:"mttrLowThreat,omitempty"`
	MttrModerateThreat *int64 `json:"mttrModerateThreat,omitempty"`
	MttrSevereThreat *int64 `json:"mttrSevereThreat,omitempty"`
	OpenCountsAtTimePeriodEnd *map[string]map[string]int32 `json:"openCountsAtTimePeriodEnd,omitempty"`
	TimePeriodStart *string `json:"timePeriodStart,omitempty"`
	WaivedCounts *map[string]map[string]int32 `json:"waivedCounts,omitempty"`
}

// NewApiMetricsReportingAggregationDTOV2 instantiates a new ApiMetricsReportingAggregationDTOV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiMetricsReportingAggregationDTOV2() *ApiMetricsReportingAggregationDTOV2 {
	this := ApiMetricsReportingAggregationDTOV2{}
	return &this
}

// NewApiMetricsReportingAggregationDTOV2WithDefaults instantiates a new ApiMetricsReportingAggregationDTOV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiMetricsReportingAggregationDTOV2WithDefaults() *ApiMetricsReportingAggregationDTOV2 {
	this := ApiMetricsReportingAggregationDTOV2{}
	return &this
}

// GetDiscoveredCounts returns the DiscoveredCounts field value if set, zero value otherwise.
func (o *ApiMetricsReportingAggregationDTOV2) GetDiscoveredCounts() map[string]map[string]int32 {
	if o == nil || IsNil(o.DiscoveredCounts) {
		var ret map[string]map[string]int32
		return ret
	}
	return *o.DiscoveredCounts
}

// GetDiscoveredCountsOk returns a tuple with the DiscoveredCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingAggregationDTOV2) GetDiscoveredCountsOk() (*map[string]map[string]int32, bool) {
	if o == nil || IsNil(o.DiscoveredCounts) {
		return nil, false
	}
	return o.DiscoveredCounts, true
}

// HasDiscoveredCounts returns a boolean if a field has been set.
func (o *ApiMetricsReportingAggregationDTOV2) HasDiscoveredCounts() bool {
	if o != nil && !IsNil(o.DiscoveredCounts) {
		return true
	}

	return false
}

// SetDiscoveredCounts gets a reference to the given map[string]map[string]int32 and assigns it to the DiscoveredCounts field.
func (o *ApiMetricsReportingAggregationDTOV2) SetDiscoveredCounts(v map[string]map[string]int32) {
	o.DiscoveredCounts = &v
}

// GetEvaluationCount returns the EvaluationCount field value if set, zero value otherwise.
func (o *ApiMetricsReportingAggregationDTOV2) GetEvaluationCount() int32 {
	if o == nil || IsNil(o.EvaluationCount) {
		var ret int32
		return ret
	}
	return *o.EvaluationCount
}

// GetEvaluationCountOk returns a tuple with the EvaluationCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingAggregationDTOV2) GetEvaluationCountOk() (*int32, bool) {
	if o == nil || IsNil(o.EvaluationCount) {
		return nil, false
	}
	return o.EvaluationCount, true
}

// HasEvaluationCount returns a boolean if a field has been set.
func (o *ApiMetricsReportingAggregationDTOV2) HasEvaluationCount() bool {
	if o != nil && !IsNil(o.EvaluationCount) {
		return true
	}

	return false
}

// SetEvaluationCount gets a reference to the given int32 and assigns it to the EvaluationCount field.
func (o *ApiMetricsReportingAggregationDTOV2) SetEvaluationCount(v int32) {
	o.EvaluationCount = &v
}

// GetFixedCounts returns the FixedCounts field value if set, zero value otherwise.
func (o *ApiMetricsReportingAggregationDTOV2) GetFixedCounts() map[string]map[string]int32 {
	if o == nil || IsNil(o.FixedCounts) {
		var ret map[string]map[string]int32
		return ret
	}
	return *o.FixedCounts
}

// GetFixedCountsOk returns a tuple with the FixedCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingAggregationDTOV2) GetFixedCountsOk() (*map[string]map[string]int32, bool) {
	if o == nil || IsNil(o.FixedCounts) {
		return nil, false
	}
	return o.FixedCounts, true
}

// HasFixedCounts returns a boolean if a field has been set.
func (o *ApiMetricsReportingAggregationDTOV2) HasFixedCounts() bool {
	if o != nil && !IsNil(o.FixedCounts) {
		return true
	}

	return false
}

// SetFixedCounts gets a reference to the given map[string]map[string]int32 and assigns it to the FixedCounts field.
func (o *ApiMetricsReportingAggregationDTOV2) SetFixedCounts(v map[string]map[string]int32) {
	o.FixedCounts = &v
}

// GetMttrCriticalThreat returns the MttrCriticalThreat field value if set, zero value otherwise.
func (o *ApiMetricsReportingAggregationDTOV2) GetMttrCriticalThreat() int64 {
	if o == nil || IsNil(o.MttrCriticalThreat) {
		var ret int64
		return ret
	}
	return *o.MttrCriticalThreat
}

// GetMttrCriticalThreatOk returns a tuple with the MttrCriticalThreat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingAggregationDTOV2) GetMttrCriticalThreatOk() (*int64, bool) {
	if o == nil || IsNil(o.MttrCriticalThreat) {
		return nil, false
	}
	return o.MttrCriticalThreat, true
}

// HasMttrCriticalThreat returns a boolean if a field has been set.
func (o *ApiMetricsReportingAggregationDTOV2) HasMttrCriticalThreat() bool {
	if o != nil && !IsNil(o.MttrCriticalThreat) {
		return true
	}

	return false
}

// SetMttrCriticalThreat gets a reference to the given int64 and assigns it to the MttrCriticalThreat field.
func (o *ApiMetricsReportingAggregationDTOV2) SetMttrCriticalThreat(v int64) {
	o.MttrCriticalThreat = &v
}

// GetMttrLowThreat returns the MttrLowThreat field value if set, zero value otherwise.
func (o *ApiMetricsReportingAggregationDTOV2) GetMttrLowThreat() int64 {
	if o == nil || IsNil(o.MttrLowThreat) {
		var ret int64
		return ret
	}
	return *o.MttrLowThreat
}

// GetMttrLowThreatOk returns a tuple with the MttrLowThreat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingAggregationDTOV2) GetMttrLowThreatOk() (*int64, bool) {
	if o == nil || IsNil(o.MttrLowThreat) {
		return nil, false
	}
	return o.MttrLowThreat, true
}

// HasMttrLowThreat returns a boolean if a field has been set.
func (o *ApiMetricsReportingAggregationDTOV2) HasMttrLowThreat() bool {
	if o != nil && !IsNil(o.MttrLowThreat) {
		return true
	}

	return false
}

// SetMttrLowThreat gets a reference to the given int64 and assigns it to the MttrLowThreat field.
func (o *ApiMetricsReportingAggregationDTOV2) SetMttrLowThreat(v int64) {
	o.MttrLowThreat = &v
}

// GetMttrModerateThreat returns the MttrModerateThreat field value if set, zero value otherwise.
func (o *ApiMetricsReportingAggregationDTOV2) GetMttrModerateThreat() int64 {
	if o == nil || IsNil(o.MttrModerateThreat) {
		var ret int64
		return ret
	}
	return *o.MttrModerateThreat
}

// GetMttrModerateThreatOk returns a tuple with the MttrModerateThreat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingAggregationDTOV2) GetMttrModerateThreatOk() (*int64, bool) {
	if o == nil || IsNil(o.MttrModerateThreat) {
		return nil, false
	}
	return o.MttrModerateThreat, true
}

// HasMttrModerateThreat returns a boolean if a field has been set.
func (o *ApiMetricsReportingAggregationDTOV2) HasMttrModerateThreat() bool {
	if o != nil && !IsNil(o.MttrModerateThreat) {
		return true
	}

	return false
}

// SetMttrModerateThreat gets a reference to the given int64 and assigns it to the MttrModerateThreat field.
func (o *ApiMetricsReportingAggregationDTOV2) SetMttrModerateThreat(v int64) {
	o.MttrModerateThreat = &v
}

// GetMttrSevereThreat returns the MttrSevereThreat field value if set, zero value otherwise.
func (o *ApiMetricsReportingAggregationDTOV2) GetMttrSevereThreat() int64 {
	if o == nil || IsNil(o.MttrSevereThreat) {
		var ret int64
		return ret
	}
	return *o.MttrSevereThreat
}

// GetMttrSevereThreatOk returns a tuple with the MttrSevereThreat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingAggregationDTOV2) GetMttrSevereThreatOk() (*int64, bool) {
	if o == nil || IsNil(o.MttrSevereThreat) {
		return nil, false
	}
	return o.MttrSevereThreat, true
}

// HasMttrSevereThreat returns a boolean if a field has been set.
func (o *ApiMetricsReportingAggregationDTOV2) HasMttrSevereThreat() bool {
	if o != nil && !IsNil(o.MttrSevereThreat) {
		return true
	}

	return false
}

// SetMttrSevereThreat gets a reference to the given int64 and assigns it to the MttrSevereThreat field.
func (o *ApiMetricsReportingAggregationDTOV2) SetMttrSevereThreat(v int64) {
	o.MttrSevereThreat = &v
}

// GetOpenCountsAtTimePeriodEnd returns the OpenCountsAtTimePeriodEnd field value if set, zero value otherwise.
func (o *ApiMetricsReportingAggregationDTOV2) GetOpenCountsAtTimePeriodEnd() map[string]map[string]int32 {
	if o == nil || IsNil(o.OpenCountsAtTimePeriodEnd) {
		var ret map[string]map[string]int32
		return ret
	}
	return *o.OpenCountsAtTimePeriodEnd
}

// GetOpenCountsAtTimePeriodEndOk returns a tuple with the OpenCountsAtTimePeriodEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingAggregationDTOV2) GetOpenCountsAtTimePeriodEndOk() (*map[string]map[string]int32, bool) {
	if o == nil || IsNil(o.OpenCountsAtTimePeriodEnd) {
		return nil, false
	}
	return o.OpenCountsAtTimePeriodEnd, true
}

// HasOpenCountsAtTimePeriodEnd returns a boolean if a field has been set.
func (o *ApiMetricsReportingAggregationDTOV2) HasOpenCountsAtTimePeriodEnd() bool {
	if o != nil && !IsNil(o.OpenCountsAtTimePeriodEnd) {
		return true
	}

	return false
}

// SetOpenCountsAtTimePeriodEnd gets a reference to the given map[string]map[string]int32 and assigns it to the OpenCountsAtTimePeriodEnd field.
func (o *ApiMetricsReportingAggregationDTOV2) SetOpenCountsAtTimePeriodEnd(v map[string]map[string]int32) {
	o.OpenCountsAtTimePeriodEnd = &v
}

// GetTimePeriodStart returns the TimePeriodStart field value if set, zero value otherwise.
func (o *ApiMetricsReportingAggregationDTOV2) GetTimePeriodStart() string {
	if o == nil || IsNil(o.TimePeriodStart) {
		var ret string
		return ret
	}
	return *o.TimePeriodStart
}

// GetTimePeriodStartOk returns a tuple with the TimePeriodStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingAggregationDTOV2) GetTimePeriodStartOk() (*string, bool) {
	if o == nil || IsNil(o.TimePeriodStart) {
		return nil, false
	}
	return o.TimePeriodStart, true
}

// HasTimePeriodStart returns a boolean if a field has been set.
func (o *ApiMetricsReportingAggregationDTOV2) HasTimePeriodStart() bool {
	if o != nil && !IsNil(o.TimePeriodStart) {
		return true
	}

	return false
}

// SetTimePeriodStart gets a reference to the given string and assigns it to the TimePeriodStart field.
func (o *ApiMetricsReportingAggregationDTOV2) SetTimePeriodStart(v string) {
	o.TimePeriodStart = &v
}

// GetWaivedCounts returns the WaivedCounts field value if set, zero value otherwise.
func (o *ApiMetricsReportingAggregationDTOV2) GetWaivedCounts() map[string]map[string]int32 {
	if o == nil || IsNil(o.WaivedCounts) {
		var ret map[string]map[string]int32
		return ret
	}
	return *o.WaivedCounts
}

// GetWaivedCountsOk returns a tuple with the WaivedCounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiMetricsReportingAggregationDTOV2) GetWaivedCountsOk() (*map[string]map[string]int32, bool) {
	if o == nil || IsNil(o.WaivedCounts) {
		return nil, false
	}
	return o.WaivedCounts, true
}

// HasWaivedCounts returns a boolean if a field has been set.
func (o *ApiMetricsReportingAggregationDTOV2) HasWaivedCounts() bool {
	if o != nil && !IsNil(o.WaivedCounts) {
		return true
	}

	return false
}

// SetWaivedCounts gets a reference to the given map[string]map[string]int32 and assigns it to the WaivedCounts field.
func (o *ApiMetricsReportingAggregationDTOV2) SetWaivedCounts(v map[string]map[string]int32) {
	o.WaivedCounts = &v
}

func (o ApiMetricsReportingAggregationDTOV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiMetricsReportingAggregationDTOV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiscoveredCounts) {
		toSerialize["discoveredCounts"] = o.DiscoveredCounts
	}
	if !IsNil(o.EvaluationCount) {
		toSerialize["evaluationCount"] = o.EvaluationCount
	}
	if !IsNil(o.FixedCounts) {
		toSerialize["fixedCounts"] = o.FixedCounts
	}
	if !IsNil(o.MttrCriticalThreat) {
		toSerialize["mttrCriticalThreat"] = o.MttrCriticalThreat
	}
	if !IsNil(o.MttrLowThreat) {
		toSerialize["mttrLowThreat"] = o.MttrLowThreat
	}
	if !IsNil(o.MttrModerateThreat) {
		toSerialize["mttrModerateThreat"] = o.MttrModerateThreat
	}
	if !IsNil(o.MttrSevereThreat) {
		toSerialize["mttrSevereThreat"] = o.MttrSevereThreat
	}
	if !IsNil(o.OpenCountsAtTimePeriodEnd) {
		toSerialize["openCountsAtTimePeriodEnd"] = o.OpenCountsAtTimePeriodEnd
	}
	if !IsNil(o.TimePeriodStart) {
		toSerialize["timePeriodStart"] = o.TimePeriodStart
	}
	if !IsNil(o.WaivedCounts) {
		toSerialize["waivedCounts"] = o.WaivedCounts
	}
	return toSerialize, nil
}

type NullableApiMetricsReportingAggregationDTOV2 struct {
	value *ApiMetricsReportingAggregationDTOV2
	isSet bool
}

func (v NullableApiMetricsReportingAggregationDTOV2) Get() *ApiMetricsReportingAggregationDTOV2 {
	return v.value
}

func (v *NullableApiMetricsReportingAggregationDTOV2) Set(val *ApiMetricsReportingAggregationDTOV2) {
	v.value = val
	v.isSet = true
}

func (v NullableApiMetricsReportingAggregationDTOV2) IsSet() bool {
	return v.isSet
}

func (v *NullableApiMetricsReportingAggregationDTOV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiMetricsReportingAggregationDTOV2(val *ApiMetricsReportingAggregationDTOV2) *NullableApiMetricsReportingAggregationDTOV2 {
	return &NullableApiMetricsReportingAggregationDTOV2{value: val, isSet: true}
}

func (v NullableApiMetricsReportingAggregationDTOV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiMetricsReportingAggregationDTOV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


