/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.193.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
	"time"
)

// checks if the ApiPolicyWaiverRequestReviewDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiPolicyWaiverRequestReviewDTO{}

// ApiPolicyWaiverRequestReviewDTO struct for ApiPolicyWaiverRequestReviewDTO
type ApiPolicyWaiverRequestReviewDTO struct {
	Comment *string `json:"comment,omitempty"`
	ExpireWhenRemediationAvailable *bool `json:"expireWhenRemediationAvailable,omitempty"`
	ExpiryTime *time.Time `json:"expiryTime,omitempty"`
	MatcherStrategy *string `json:"matcherStrategy,omitempty"`
	RejectionReason *string `json:"rejectionReason,omitempty"`
	Status *string `json:"status,omitempty"`
	WaiverReasonId *string `json:"waiverReasonId,omitempty"`
}

// NewApiPolicyWaiverRequestReviewDTO instantiates a new ApiPolicyWaiverRequestReviewDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiPolicyWaiverRequestReviewDTO() *ApiPolicyWaiverRequestReviewDTO {
	this := ApiPolicyWaiverRequestReviewDTO{}
	return &this
}

// NewApiPolicyWaiverRequestReviewDTOWithDefaults instantiates a new ApiPolicyWaiverRequestReviewDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiPolicyWaiverRequestReviewDTOWithDefaults() *ApiPolicyWaiverRequestReviewDTO {
	this := ApiPolicyWaiverRequestReviewDTO{}
	return &this
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestReviewDTO) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *ApiPolicyWaiverRequestReviewDTO) SetComment(v string) {
	o.Comment = &v
}

// GetExpireWhenRemediationAvailable returns the ExpireWhenRemediationAvailable field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestReviewDTO) GetExpireWhenRemediationAvailable() bool {
	if o == nil || IsNil(o.ExpireWhenRemediationAvailable) {
		var ret bool
		return ret
	}
	return *o.ExpireWhenRemediationAvailable
}

// GetExpireWhenRemediationAvailableOk returns a tuple with the ExpireWhenRemediationAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) GetExpireWhenRemediationAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.ExpireWhenRemediationAvailable) {
		return nil, false
	}
	return o.ExpireWhenRemediationAvailable, true
}

// HasExpireWhenRemediationAvailable returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) HasExpireWhenRemediationAvailable() bool {
	if o != nil && !IsNil(o.ExpireWhenRemediationAvailable) {
		return true
	}

	return false
}

// SetExpireWhenRemediationAvailable gets a reference to the given bool and assigns it to the ExpireWhenRemediationAvailable field.
func (o *ApiPolicyWaiverRequestReviewDTO) SetExpireWhenRemediationAvailable(v bool) {
	o.ExpireWhenRemediationAvailable = &v
}

// GetExpiryTime returns the ExpiryTime field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestReviewDTO) GetExpiryTime() time.Time {
	if o == nil || IsNil(o.ExpiryTime) {
		var ret time.Time
		return ret
	}
	return *o.ExpiryTime
}

// GetExpiryTimeOk returns a tuple with the ExpiryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) GetExpiryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ExpiryTime) {
		return nil, false
	}
	return o.ExpiryTime, true
}

// HasExpiryTime returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) HasExpiryTime() bool {
	if o != nil && !IsNil(o.ExpiryTime) {
		return true
	}

	return false
}

// SetExpiryTime gets a reference to the given time.Time and assigns it to the ExpiryTime field.
func (o *ApiPolicyWaiverRequestReviewDTO) SetExpiryTime(v time.Time) {
	o.ExpiryTime = &v
}

// GetMatcherStrategy returns the MatcherStrategy field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestReviewDTO) GetMatcherStrategy() string {
	if o == nil || IsNil(o.MatcherStrategy) {
		var ret string
		return ret
	}
	return *o.MatcherStrategy
}

// GetMatcherStrategyOk returns a tuple with the MatcherStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) GetMatcherStrategyOk() (*string, bool) {
	if o == nil || IsNil(o.MatcherStrategy) {
		return nil, false
	}
	return o.MatcherStrategy, true
}

// HasMatcherStrategy returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) HasMatcherStrategy() bool {
	if o != nil && !IsNil(o.MatcherStrategy) {
		return true
	}

	return false
}

// SetMatcherStrategy gets a reference to the given string and assigns it to the MatcherStrategy field.
func (o *ApiPolicyWaiverRequestReviewDTO) SetMatcherStrategy(v string) {
	o.MatcherStrategy = &v
}

// GetRejectionReason returns the RejectionReason field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestReviewDTO) GetRejectionReason() string {
	if o == nil || IsNil(o.RejectionReason) {
		var ret string
		return ret
	}
	return *o.RejectionReason
}

// GetRejectionReasonOk returns a tuple with the RejectionReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) GetRejectionReasonOk() (*string, bool) {
	if o == nil || IsNil(o.RejectionReason) {
		return nil, false
	}
	return o.RejectionReason, true
}

// HasRejectionReason returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) HasRejectionReason() bool {
	if o != nil && !IsNil(o.RejectionReason) {
		return true
	}

	return false
}

// SetRejectionReason gets a reference to the given string and assigns it to the RejectionReason field.
func (o *ApiPolicyWaiverRequestReviewDTO) SetRejectionReason(v string) {
	o.RejectionReason = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestReviewDTO) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ApiPolicyWaiverRequestReviewDTO) SetStatus(v string) {
	o.Status = &v
}

// GetWaiverReasonId returns the WaiverReasonId field value if set, zero value otherwise.
func (o *ApiPolicyWaiverRequestReviewDTO) GetWaiverReasonId() string {
	if o == nil || IsNil(o.WaiverReasonId) {
		var ret string
		return ret
	}
	return *o.WaiverReasonId
}

// GetWaiverReasonIdOk returns a tuple with the WaiverReasonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) GetWaiverReasonIdOk() (*string, bool) {
	if o == nil || IsNil(o.WaiverReasonId) {
		return nil, false
	}
	return o.WaiverReasonId, true
}

// HasWaiverReasonId returns a boolean if a field has been set.
func (o *ApiPolicyWaiverRequestReviewDTO) HasWaiverReasonId() bool {
	if o != nil && !IsNil(o.WaiverReasonId) {
		return true
	}

	return false
}

// SetWaiverReasonId gets a reference to the given string and assigns it to the WaiverReasonId field.
func (o *ApiPolicyWaiverRequestReviewDTO) SetWaiverReasonId(v string) {
	o.WaiverReasonId = &v
}

func (o ApiPolicyWaiverRequestReviewDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiPolicyWaiverRequestReviewDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.ExpireWhenRemediationAvailable) {
		toSerialize["expireWhenRemediationAvailable"] = o.ExpireWhenRemediationAvailable
	}
	if !IsNil(o.ExpiryTime) {
		toSerialize["expiryTime"] = o.ExpiryTime
	}
	if !IsNil(o.MatcherStrategy) {
		toSerialize["matcherStrategy"] = o.MatcherStrategy
	}
	if !IsNil(o.RejectionReason) {
		toSerialize["rejectionReason"] = o.RejectionReason
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.WaiverReasonId) {
		toSerialize["waiverReasonId"] = o.WaiverReasonId
	}
	return toSerialize, nil
}

type NullableApiPolicyWaiverRequestReviewDTO struct {
	value *ApiPolicyWaiverRequestReviewDTO
	isSet bool
}

func (v NullableApiPolicyWaiverRequestReviewDTO) Get() *ApiPolicyWaiverRequestReviewDTO {
	return v.value
}

func (v *NullableApiPolicyWaiverRequestReviewDTO) Set(val *ApiPolicyWaiverRequestReviewDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiPolicyWaiverRequestReviewDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiPolicyWaiverRequestReviewDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiPolicyWaiverRequestReviewDTO(val *ApiPolicyWaiverRequestReviewDTO) *NullableApiPolicyWaiverRequestReviewDTO {
	return &NullableApiPolicyWaiverRequestReviewDTO{value: val, isSet: true}
}

func (v NullableApiPolicyWaiverRequestReviewDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiPolicyWaiverRequestReviewDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


