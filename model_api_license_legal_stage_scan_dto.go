/*
Sonatype Lifecycle Public REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.195.0-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sonatypeiq

import (
	"encoding/json"
	"time"
)

// checks if the ApiLicenseLegalStageScanDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiLicenseLegalStageScanDTO{}

// ApiLicenseLegalStageScanDTO struct for ApiLicenseLegalStageScanDTO
type ApiLicenseLegalStageScanDTO struct {
	ScanDate *time.Time `json:"scanDate,omitempty"`
	ScanId *string `json:"scanId,omitempty"`
	StageName *string `json:"stageName,omitempty"`
}

// NewApiLicenseLegalStageScanDTO instantiates a new ApiLicenseLegalStageScanDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiLicenseLegalStageScanDTO() *ApiLicenseLegalStageScanDTO {
	this := ApiLicenseLegalStageScanDTO{}
	return &this
}

// NewApiLicenseLegalStageScanDTOWithDefaults instantiates a new ApiLicenseLegalStageScanDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiLicenseLegalStageScanDTOWithDefaults() *ApiLicenseLegalStageScanDTO {
	this := ApiLicenseLegalStageScanDTO{}
	return &this
}

// GetScanDate returns the ScanDate field value if set, zero value otherwise.
func (o *ApiLicenseLegalStageScanDTO) GetScanDate() time.Time {
	if o == nil || IsNil(o.ScanDate) {
		var ret time.Time
		return ret
	}
	return *o.ScanDate
}

// GetScanDateOk returns a tuple with the ScanDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseLegalStageScanDTO) GetScanDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ScanDate) {
		return nil, false
	}
	return o.ScanDate, true
}

// HasScanDate returns a boolean if a field has been set.
func (o *ApiLicenseLegalStageScanDTO) HasScanDate() bool {
	if o != nil && !IsNil(o.ScanDate) {
		return true
	}

	return false
}

// SetScanDate gets a reference to the given time.Time and assigns it to the ScanDate field.
func (o *ApiLicenseLegalStageScanDTO) SetScanDate(v time.Time) {
	o.ScanDate = &v
}

// GetScanId returns the ScanId field value if set, zero value otherwise.
func (o *ApiLicenseLegalStageScanDTO) GetScanId() string {
	if o == nil || IsNil(o.ScanId) {
		var ret string
		return ret
	}
	return *o.ScanId
}

// GetScanIdOk returns a tuple with the ScanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseLegalStageScanDTO) GetScanIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScanId) {
		return nil, false
	}
	return o.ScanId, true
}

// HasScanId returns a boolean if a field has been set.
func (o *ApiLicenseLegalStageScanDTO) HasScanId() bool {
	if o != nil && !IsNil(o.ScanId) {
		return true
	}

	return false
}

// SetScanId gets a reference to the given string and assigns it to the ScanId field.
func (o *ApiLicenseLegalStageScanDTO) SetScanId(v string) {
	o.ScanId = &v
}

// GetStageName returns the StageName field value if set, zero value otherwise.
func (o *ApiLicenseLegalStageScanDTO) GetStageName() string {
	if o == nil || IsNil(o.StageName) {
		var ret string
		return ret
	}
	return *o.StageName
}

// GetStageNameOk returns a tuple with the StageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiLicenseLegalStageScanDTO) GetStageNameOk() (*string, bool) {
	if o == nil || IsNil(o.StageName) {
		return nil, false
	}
	return o.StageName, true
}

// HasStageName returns a boolean if a field has been set.
func (o *ApiLicenseLegalStageScanDTO) HasStageName() bool {
	if o != nil && !IsNil(o.StageName) {
		return true
	}

	return false
}

// SetStageName gets a reference to the given string and assigns it to the StageName field.
func (o *ApiLicenseLegalStageScanDTO) SetStageName(v string) {
	o.StageName = &v
}

func (o ApiLicenseLegalStageScanDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiLicenseLegalStageScanDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScanDate) {
		toSerialize["scanDate"] = o.ScanDate
	}
	if !IsNil(o.ScanId) {
		toSerialize["scanId"] = o.ScanId
	}
	if !IsNil(o.StageName) {
		toSerialize["stageName"] = o.StageName
	}
	return toSerialize, nil
}

type NullableApiLicenseLegalStageScanDTO struct {
	value *ApiLicenseLegalStageScanDTO
	isSet bool
}

func (v NullableApiLicenseLegalStageScanDTO) Get() *ApiLicenseLegalStageScanDTO {
	return v.value
}

func (v *NullableApiLicenseLegalStageScanDTO) Set(val *ApiLicenseLegalStageScanDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableApiLicenseLegalStageScanDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableApiLicenseLegalStageScanDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiLicenseLegalStageScanDTO(val *ApiLicenseLegalStageScanDTO) *NullableApiLicenseLegalStageScanDTO {
	return &NullableApiLicenseLegalStageScanDTO{value: val, isSet: true}
}

func (v NullableApiLicenseLegalStageScanDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiLicenseLegalStageScanDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


